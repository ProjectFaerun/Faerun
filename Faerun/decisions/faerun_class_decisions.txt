decisions = {

	wiz_longevity = {
		only_playable = yes
		ai_check_interval = 40
		potential = {
			OR = {
				z_wizard = yes
				z_sorcerer = yes
				trigger_if = {
					limit = { z_warlock = yes }

					has_artifact = warlock_book_shadows
					has_character_flag = got_warlock_book_shadows
				}
			}
			NOR = {
				trait = longevity
				faerun_immortal_race_trigger = yes
			}
			trigger_if = {
				limit = { ai = no }

				OR = {
					has_character_flag = sorc_spellbook_open
					has_character_flag = rituals_open
				}
			}
		}
		allow = {
			NOT = { trait = patron_kelemvor }
			is_incapable = no
			wild_magic_recovery = yes
			OR = {
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						z_journeyman_arcane = yes
					}
					wealth = 2000
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						z_expert_arcane = yes
					}
					wealth = 1000
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						z_master_arcane = yes
					}
					wealth = 800
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						z_renowned_arcane = yes
					}
					wealth = 600
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						z_legendary_arcane = yes
					}
					wealth = 300
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -300
				}
				legendary_warlock = {
					wealth = -300
				}
				legendary_sorcerer = {
					wealth = -300
				}
				renowned_wizard = {
					wealth = -600
				}
				renowned_warlock = {
					wealth = -600
				}
				renowned_sorcerer = {
					wealth = -600
				}
				master_wizard = {
					wealth = -800
				}
				master_warlock = {
					wealth = -800
				}
				master_sorcerer = {
					wealth = -800
				}
				expert_wizard = {
					wealth = -1000
				}
				expert_warlock = {
					wealth = -1000
				}
				expert_sorcerer = {
					wealth = -1000
				}
				journeyman_wizard = {
					wealth = -2000
				}
				journeyman_warlock = {
					wealth = -2000
				}
				journeyman_sorcerer = {
					wealth = -2000
				}
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				if = {
					limit = {
						ai = yes
					}
					add_trait = longevity
				}
				else = {
					character_event = { id = wizinit.6 }
				}
				if = {
					limit = {
						trait = infirm
					}
					remove_trait = infirm
				}
			}
		}
		ai_will_do = {
			factor = 1
			mult_modifier = {
				factor = 0.01
				trait = depressed
			}
		}
	}

	wiz_lichdom = {
		only_playable = yes
		ai_check_interval = 40
		potential = {
			OR = {
				z_wizard = yes
				z_sorcerer = yes
				z_cleric = yes
				trigger_if = {
					limit = { z_warlock = yes }

					has_artifact = warlock_book_shadows
					has_character_flag = got_warlock_book_shadows
				}
			}
			is_undead = no
			is_dragon = no
			undead_incompatible_race = no
			NOR = {
				trait = immortal
				trait = natural_lycanthrope
				trait = afflicted_lycanthrope
				trait = patron_kelemvor
				trait = patron_lathander
				trait = patron_urogalan
				trait = patron_sehanine_moonbow
			}
			evilcat_is_chosen = no
			trigger_if = {
				limit = { ai = no }

				OR = {
					has_character_flag = sorc_spellbook_open
					has_character_flag = rituals_open
				}
			}
		}
		allow = {
			wild_magic_recovery = yes
			OR = {
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						
						trait = expert_wizard
						trait = wiz_necromancy
					}
					wealth = 1300
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						OR = {
							trait = master_cleric
							z_master_arcane = yes
						}
					}
					wealth = 1000
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						OR = {
							trait = renowned_cleric
							z_renowned_arcane = yes
						}
					}
					wealth = 800
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						OR = {
							trait = legendary_cleric
							z_legendary_arcane = yes
						}
					}
					wealth = 500
				}
			}
			is_pregnant = no
			is_incapable = no
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -500
				}
				legendary_cleric = {
					wealth = -500
				}
				legendary_warlock = {
					wealth = -500
				}
				legendary_sorcerer = {
					wealth = -500
				}
				renowned_wizard = {
					wealth = -800
				}
				renowned_cleric = {
					wealth = -800
				}
				renowned_warlock = {
					wealth = -800
				}
				renowned_sorcerer = {
					wealth = -800
				}
				master_wizard = {
					wealth = -1000
				}
				master_cleric = {
					wealth = -1000
				}
				master_warlock = {
					wealth = -1000
				}
				master_sorcerer = {
					wealth = -1000
				}
				expert_wizard = {
					wealth = -1300
				}
				#expert_cleric = {
				#	wealth = -1300
				#}
				#expert_warlock = {
				#	wealth = -1300
				#}
				#expert_sorcerer = {
				#	wealth = -1300
				#}
				#journeyman_wizard = {
				#	wealth = -2000
				#}
				#journeyman_cleric = {
				#	wealth = -2000
				#}
				#journeyman_warlock = {
				#	wealth = -2000
				#}
				#trained_wizard = {
				#	wealth = -3000
				#}
				#trained_cleric = {
				#	wealth = -3000
				#}
				#trained_warlock = {
				#	wealth = -3000
				#}
				#wizard = {
				#	wealth = -5000
				#}
				#cleric = {
				#	wealth = -5000
				#}
				#warlock = {
				#	wealth = -5000
				#}
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				if = {
					limit = {
						trait = infirm
					}
					remove_trait = infirm
				}
				character_event = { id = wizinit.7 }
			}
		}
		ai_will_do = {
			factor = 0.05
			mult_modifier = {
				factor = 0.01
				trait = depressed
			}
			mult_modifier = {
				factor = 10
				trait = infirm
			}
			mult_modifier = {
				factor = 2
				trait = lunatic
			}
			mult_modifier = {
				factor = 0.5
				health >= 7
			}
			mult_modifier = {
				factor = 2
				health <= 3
			}
			mult_modifier = {
				factor = 0.3
				faerun_immortal_race_trigger = yes
			}
		}
	}

	wiz_clone = {
		ai_check_interval = 60
		only_playable = yes
		potential = {
			z_wizard = yes
			NOR = {
				trait = avatar
				trait = creature_fiend
				trait = creature_angel
				trait = creature_genie
				trait = creature_treant
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			NOT = { trait = patron_kelemvor }
			OR = {
				AND = {
					trait = master_wizard
					wealth = 150
				}
				AND = {
					trait = renowned_wizard
					wealth = 100
				}
				AND = {
					trait = legendary_wizard
					wealth = 50
				}
			}
			NOT = { has_injury_trigger = yes }
			prisoner = no
			is_incapable = no
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -50
				}
				renowned_wizard = {
					wealth = -100
				}
				master_wizard = {
					wealth = -150
				}
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				hidden_tooltip = {
					export_to_variable = {
						which = local_clone_health
						value = base_health
					}
					export_to_variable = {
						which = local_clone_fertility
						value = fertility
					}
				}
				create_character = {
					age = 20
					random_traits = no
					religion = ROOT
					culture = ROOT
					dynasty = ROOT
					trait = is_clone
					trait = stasis_clone
					genetic_father = ROOT
					genetic_mother = ROOT
				}
				new_character = {
					fertility = local_clone_fertility
					health = local_clone_health
					culture = ROOT
					religion = ROOT

					if = {
						limit = {
							ROOT = {
								is_female = no
							}
						}
						set_father = ROOT
						set_gender = male
					}
					else = {
						set_mother = ROOT
						set_gender = female
					}
					set_name = ROOT

					copy_traits_of_PREV = yes

					character_event = { id = frxp.1 }

					change_diplomacy = -100
					change_martial = -100
					change_stewardship = -100
					change_intrigue = -100
					change_learning = -100

					while = {
						count = 10
						limit = { diplomacy < ROOT }

						change_diplomacy = 1
					}
					while = {
						count = 10
						limit = { martial < ROOT }
						
						change_martial = 1
					}
					while = {
						count = 10
						limit = { stewardship < ROOT }
						
						change_stewardship = 1
					}
					while = {
						count = 10
						limit = { intrigue < ROOT }
						
						change_intrigue = 1
					}
					while = {
						count = 10
						limit = { learning < ROOT }
						
						change_learning = 1
					}

					if = {
						limit = { ROOT = { has_character_flag = had_religion_change_event } }

						set_character_flag = had_religion_change_event
					}
					if = {
						limit = { ROOT = { has_character_flag = patron_chosen } }

						set_character_flag = patron_chosen
						set_character_flag = patron_checked
					}
					if = {
						limit = { ROOT = { has_character_flag = patron_rechosen } }

						set_character_flag = patron_rechosen
					}
					any_sibling = {
						limit = {
							trait = is_clone
						}
						add_rival = PREV
					}
				}
				recalc_succession = yes
				add_trait_wounded_effect = yes
			}
		}
		ai_will_do = {
			factor = 0.05
			mult_modifier = {
				factor = 100
				has_living_children = no
			}
			mult_modifier = {
				factor = 0.1
				wealth < 300
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 2
				trait = paranoid
			}
			mult_modifier = {
				factor = 10
				trait = bio_manshoon
			}
			mult_modifier = {
				factor = 0
				
				any_child = {
					trait = is_clone
					count >= 10
				}
			}
		}
	}

	ritual_animate_dead = {
		only_playable = yes
		ai_check_interval = 6
		potential = {
			OR = {
				z_wizard = yes
				z_cleric = yes
			}
			NOR = {
				trait = patron_kelemvor
				trait = patron_lathander
				trait = patron_urogalan
				trait = patron_sehanine_moonbow
				trait = patron_segojan_earthcaller
				trait = wiz_illusion
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			war = yes
			custom_tooltip = {
				text = ANIMATEDEADCD
				hidden_tooltip = {
					NOT = { has_character_flag = wiz_animated_dead }
				}
			}
			OR = {
				AND = {
					custom_tooltip = {
						text = BASECASTER
						OR = {
							trait = wizard
							trait = cleric
						}
					}
					wealth = 200
				}
				AND = {
					custom_tooltip = {
						text = TRAINEDCASTER
						OR = {
							trait = trained_wizard
							trait = trained_cleric
						}
					}
					wealth = 150
				}
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						OR = {
							trait = journeyman_wizard
							trait = journeyman_cleric
						}
					}
					wealth = 125
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						OR = {
							trait = expert_wizard
							trait = expert_cleric
						}
					}
					wealth = 100
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						OR = {
							trait = master_wizard
							trait = master_cleric
						}
					}
					wealth = 75
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						OR = {
							trait = renowned_wizard
							trait = renowned_cleric
						}
					}
					wealth = 55
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						OR = {
							trait = legendary_wizard
							trait = legendary_cleric
						}
					}
					wealth = 35
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -35
				}
				legendary_cleric = {
					wealth = -35
				}
				renowned_wizard = {
					wealth = -55
				}
				renowned_cleric = {
					wealth = -55
				}
				master_wizard = {
					wealth = -75
				}
				master_cleric = {
					wealth = -75
				}
				expert_wizard = {
					wealth = -100
				}
				expert_cleric = {
					wealth = -100
				}
				journeyman_wizard = {
					wealth = -125
				}
				journeyman_cleric = {
					wealth = -125
				}
				trained_wizard = {
					wealth = -150
				}
				trained_cleric = {
					wealth = -150
				}
				wizard = {
					wealth = -200
				}
				cleric = {
					wealth = -200
				}
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				add_character_modifier = {
					name = summoned_dead_cooldown
					days = 666
				}
				character_event = { id = wizinit.8 }
			}
		}
		ai_will_do = {
			factor = 0.75
			mult_modifier = {
				factor = 0.3
				OR = {
					religion_group = good_human_pantheon_group
					religion_group = qismaite_group
					religion_group = karaturan_group
					religion_group = elven_pantheon_group
					religion = dwarven_pantheon
					religion = gnome_pantheon
					religion = bahamut
					religion = ubtao_worship
					religion = earthmother
					religion = earthmother_reformed
					religion = yuir
					religion = yuir_reformed
				}
			}
			mult_modifier = {
				factor = 2
				OR = {
					religion_group = evil_human_pantheon_group
					religion = kiaransalee
				}
			}
		}
	}

	wiz_planar_binding = {
		only_playable = yes
		ai_check_interval = 200
		potential = {
			OR = {
				z_wizard = yes
				z_cleric = yes
				trigger_if = {
					limit = { z_warlock = yes }

					OR = {
						trait = warlock_fiend
						trait = warlock_celestial
						trait = warlock_elemental
					}
				}
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			custom_tooltip = {
				text = PBINDINGCD
				hidden_tooltip = {
					NOT = { has_character_flag = ritual_planar_binding }
				}
			}
			OR = {
				AND = {
					custom_tooltip = {
						text = BASECASTER

						OR = {
							trait = wizard
							trait = cleric
							trigger_if = {
								limit = { trait = warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
					wealth = 200
				}
				AND = {
					custom_tooltip = {
						text = TRAINEDCASTER

						OR = {
							trait = trained_wizard
							trait = trained_cleric
							trigger_if = {
								limit = { trait = trained_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
					wealth = 175
				}
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						
						OR = {
							trait = journeyman_wizard
							trait = journeyman_cleric
							trigger_if = {
								limit = { trait = journeyman_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
					wealth = 150
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						
						OR = {
							trait = expert_wizard
							trait = expert_cleric
							trigger_if = {
								limit = { trait = expert_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
					wealth = 125
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						
						OR = {
							trait = master_wizard
							trait = master_cleric
							trigger_if = {
								limit = { trait = master_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
					wealth = 100
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						
						OR = {
							trait = renowned_wizard
							trait = renowned_cleric
							trigger_if = {
								limit = { trait = renowned_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
					wealth = 75
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						
						OR = {
							trait = legendary_wizard
							trait = legendary_cleric
							trigger_if = {
								limit = { trait = legendary_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
					wealth = 50
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			hidden_effect = {
				if = {
					limit = {
						OR = {
							trait = legendary_wizard
							trait = legendary_cleric
							trigger_if = {
								limit = { trait = legendary_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
	
					set_variable = {
						which = local_summon_cost
						value = 50
					}
				}
				else_if = {
					limit = {
						OR = {
							trait = renowned_wizard
							trait = renowned_cleric
							trigger_if = {
								limit = { trait = renowned_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
	
					set_variable = {
						which = local_summon_cost
						value = 75
					}
				}
				else_if = {
					limit = {
						OR = {
							trait = master_wizard
							trait = master_cleric
							trigger_if = {
								limit = { trait = master_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
	
					set_variable = {
						which = local_summon_cost
						value = 100
					}
				}
				else_if = {
					limit = {
						OR = {
							trait = expert_wizard
							trait = expert_cleric
							trigger_if = {
								limit = { trait = expert_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
	
					set_variable = {
						which = local_summon_cost
						value = 125
					}
				}
				else_if = {
					limit = {
						OR = {
							trait = journeyman_wizard
							trait = journeyman_cleric
							trigger_if = {
								limit = { trait = journeyman_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
	
					set_variable = {
						which = local_summon_cost
						value = 150
					}
				}
				else_if = {
					limit = {
						OR = {
							trait = trained_wizard
							trait = trained_cleric
							trigger_if = {
								limit = { trait = trained_warlock }

								OR = {
									trait = warlock_fiend
									trait = warlock_celestial
									trait = warlock_elemental
								}
							}
						}
					}
	
					set_variable = {
						which = local_summon_cost
						value = 175
					}
				}
				else = {
					set_variable = {
						which = local_summon_cost
						value = 200
					}
				}
				
				set_variable = {
					which = local_summon_cost_negative
					which = local_summon_cost
				}
				multiply_variable = {
					which = local_summon_cost_negative
					value = -1
				}
				wealth = local_summon_cost_negative
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				character_event = { id = wizinit.11 }
			}
		}
		ai_will_do = {
			factor = 0.4
			mult_modifier = {
				factor = 0.01
				
				free_court_slots < 5
			}
		}
	}

	wiz_craft_homunculus = {
		only_playable = yes
		ai_check_interval = 100
		potential = {
			OR = {
				z_wizard = yes
				trigger_if = {
					limit = { z_warlock = yes }

					has_artifact = warlock_book_shadows
					has_character_flag = got_warlock_book_shadows
				}
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			NOR = {
				has_artifact = homunculus_artf
				has_artifact = wiz_familiar_artf
			}
			has_injury_trigger = no
			OR = {
				AND = {
					custom_tooltip = {
						text = BASECASTER
						OR = {
							trait = wizard
							trait = warlock
						}
					}
					wealth = 150
				}
				AND = {
					custom_tooltip = {
						text = TRAINEDCASTER
						OR = {
							trait = trained_wizard
							trait = trained_warlock
						}
					}
					wealth = 130
				}
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						OR = {
							trait = journeyman_wizard
							trait = journeyman_warlock
						}
					}
					wealth = 110
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						OR = {
							trait = expert_wizard
							trait = expert_warlock
						}
					}
					wealth = 90
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						OR = {
							trait = master_wizard
							trait = master_warlock
						}
					}
					wealth = 70
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						OR = {
							trait = renowned_wizard
							trait = renowned_warlock
						}
					}
					wealth = 50
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						OR = {
							trait = legendary_wizard
							trait = legendary_warlock
						}
					}
					wealth = 30
				}
			}
		}

		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -30
				}
				legendary_warlock = {
					wealth = -30
				}
				renowned_wizard = {
					wealth = -50
				}
				renowned_warlock = {
					wealth = -50
				}
				master_wizard = {
					wealth = -70
				}
				master_warlock = {
					wealth = -70
				}
				expert_wizard = {
					wealth = -90
				}
				expert_warlock = {
					wealth = -90
				}
				journeyman_wizard = {
					wealth = -110
				}
				journeyman_warlock = {
					wealth = -110
				}
				trained_wizard = {
					wealth = -130
				}
				trained_warlock = {
					wealth = -130
				}
				wizard = {
					wealth = -150
				}
				warlock = {
					wealth = -150
				}
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				character_event = { id = wizinit.26 }
			}
		}

		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 0
				NOT = { health = 3 }
			}
		}
	}

	wiz_divine_threat = {
		only_playable = yes
		ai_check_interval = 200
		potential = {
			OR = {
				z_wizard = yes
				trigger_if = {
					limit = { z_warlock = yes }

					trait = warlock_old_one
				}
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			custom_tooltip = {
				text = DIVINETHREATCD
				hidden_tooltip = {
					OR = {
						NOT = { has_character_flag = wiz_divine_threat }
						had_character_flag = {
							flag = wiz_divine_threat
							years = 2
						}
					}
				}
			}
			custom_tooltip = {
				text = THEREAREPLOTS
				hidden_tooltip = {
					any_realm_character = {
						has_plot = yes
						NOT = { plot_is_known_by = ROOT }
					}
				}
			}
			OR = {
				AND = {
					custom_tooltip = {
						text = BASECASTER
						OR = {
							trait = wizard
							trait = warlock
						}
					}
					wealth = 200
				}
				AND = {
					custom_tooltip = {
						text = TRAINEDCASTER
						OR = {
							trait = trained_wizard
							trait = trained_warlock
						}
					}
					wealth = 175
				}
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						OR = {
							trait = journeyman_wizard
							trait = journeyman_warlock
						}
					}
					wealth = 150
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						OR = {
							trait = expert_wizard
							trait = expert_warlock
						}
					}
					wealth = 125
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						OR = {
							trait = master_wizard
							trait = master_warlock
						}
					}
					wealth = 100
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						OR = {
							trait = renowned_wizard
							trait = renowned_warlock
						}
					}
					wealth = 75
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						OR = {
							trait = legendary_wizard
							trait = legendary_warlock
						}
					}
					wealth = 50
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			clr_character_flag = wiz_divine_threat
			set_character_flag = wiz_divine_threat
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -50
				}
				legendary_warlock = {
					wealth = -50
				}
				renowned_wizard = {
					wealth = -75
				}
				renowned_warlock = {
					wealth = -75
				}
				master_wizard = {
					wealth = -100
				}
				master_warlock = {
					wealth = -100
				}
				expert_wizard = {
					wealth = -125
				}
				expert_warlock = {
					wealth = -125
				}
				journeyman_wizard = {
					wealth = -150
				}
				journeyman_warlock = {
					wealth = -150
				}
				trained_wizard = {
					wealth = -175
				}
				trained_warlock = {
					wealth = -175
				}
				wizard = {
					wealth = -200
				}
				warlock = {
					wealth = -200
				}
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				character_event = { id = wizinit.27 }
			}
		}

		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 2
				trait = paranoid
			}
			mult_modifier = {
				factor = 0.5
				trait = trusting
			}
		}
	}

	wiz_summon_elementals = {
		only_playable = yes
		ai_check_interval = 6
		potential = {
			OR = {
				z_wizard = yes
				z_druid = yes
				trigger_if = {
					limit = { z_warlock = yes }

					OR = {
						trait = warlock_fiend
						trait = warlock_elemental
					}
				}
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			war = yes
			custom_tooltip = {
				text = ANIMATEDEADCD
				hidden_tooltip = {
					NOT = { has_character_flag = wiz_summon_elementals }
				}
			}
			OR = {
				AND = {
					custom_tooltip = {
						text = BASECASTER
						OR = {
							trait = wizard
							trait = druid
							trait = warlock
						}
					}
					wealth = 350
				}
				AND = {
					custom_tooltip = {
						text = TRAINEDCASTER
						OR = {
							trait = trained_wizard
							trait = trained_druid
							trait = trained_warlock
						}
					}
					wealth = 250
				}
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						OR = {
							trait = journeyman_wizard
							trait = journeyman_druid
							trait = journeyman_warlock
						}
					}
					wealth = 200
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						OR = {
							trait = expert_wizard
							trait = expert_druid
							trait = expert_warlock
						}
					}
					wealth = 160
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						OR = {
							trait = master_wizard
							trait = master_druid
							trait = master_warlock
						}
					}
					wealth = 120
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						OR = {
							trait = renowned_wizard
							trait = renowned_druid
							trait = renowned_warlock
						}
					}
					wealth = 80
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						OR = {
							trait = legendary_wizard
							trait = legendary_druid
							trait = legendary_warlock
						}
					}
					wealth = 60
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -60
				}
				legendary_druid = {
					wealth = -60
				}
				legendary_warlock = {
					wealth = -60
				}
				renowned_wizard = {
					wealth = -80
				}
				renowned_druid = {
					wealth = -80
				}
				renowned_warlock = {
					wealth = -80
				}
				master_wizard = {
					wealth = -120
				}
				master_druid = {
					wealth = -120
				}
				master_warlock = {
					wealth = -120
				}
				expert_wizard = {
					wealth = -160
				}
				expert_druid = {
					wealth = -160
				}
				expert_warlock = {
					wealth = -160
				}
				journeyman_wizard = {
					wealth = -200
				}
				journeyman_druid = {
					wealth = -200
				}
				journeyman_warlock = {
					wealth = -200
				}
				trained_wizard = {
					wealth = -250
				}
				trained_druid = {
					wealth = -250
				}
				trained_warlock = {
					wealth = -250
				}
				wizard = {
					wealth = -350
				}
				druid = {
					wealth = -350
				}
				warlock = {
					wealth = -350
				}
			}
			add_character_modifier = {
				name = summoned_cooldown
				years = 2
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				character_event = { id = wizinit.28 }
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = { #I am losing an offensive war
				factor = 10
				any_war = {
					attacker = { character = ROOT }
					NOT = { war_score = -19 }
				}
			}
			mult_modifier = { #I am losing a defensive war
				factor = 10
				any_war = {
					defender = { character = ROOT }
					war_score = 20
				}
			}
		}
	}

	phantasmal_force = {
		only_playable = yes
		ai_check_interval = 6
		potential = {
			OR = {
				z_bard = yes
				trigger_if = {
					limit = { z_wizard = yes }

					trait = wiz_illusion
				}
				trigger_if = {
					limit = { z_warlock = yes }

					OR = {
						trait = warlock_fey
						trait = warlock_old_one
						trait = warlock_elemental
					}
				}
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			war = yes
			OR = {
				custom_tooltip = {
					text = notbard
					OR = {
						z_bard = no
						AND = {
							z_bard = yes
							OR = {
								z_wizard = yes
								z_warlock = yes
							}
						}
					}
				}
				custom_tooltip = {
					text = bardhasinstrument
					z_bard = yes
					any_artifact = {
						has_artifact_flag = instrument
					}
				}
			}
			custom_tooltip = {
				text = SUMMONEDCD
				hidden_tooltip = {
					NOT = { has_character_flag = wiz_summon_illusions }
				}
			}
			OR = {
				AND = {
					custom_tooltip = {
						text = BASECASTER
						OR = {
							trait = wizard
							trait = warlock
							trait = bard
						}
					}
					wealth = 200
				}
				AND = {
					custom_tooltip = {
						text = TRAINEDCASTER
						OR = {
							trait = trained_wizard
							trait = trained_warlock
							trait = trained_bard
						}
					}
					wealth = 150
				}
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						OR = {
							trait = journeyman_wizard
							trait = journeyman_warlock
							trait = journeyman_bard
						}
					}
					wealth = 125
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						OR = {
							trait = expert_wizard
							trait = expert_warlock
							trait = expert_bard
						}
					}
					wealth = 100
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						OR = {
							trait = master_wizard
							trait = master_warlock
							trait = master_bard
						}
					}
					wealth = 75
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						OR = {
							trait = renowned_wizard
							trait = renowned_warlock
							trait = renowned_bard
						}
					}
					wealth = 55
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						OR = {
							trait = legendary_wizard
							trait = legendary_warlock
							trait = legendary_bard
						}
					}
					wealth = 35
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -35
				}
				legendary_warlock = {
					wealth = -35
				}
				legendary_bard = {
					wealth = -35
				}
				renowned_wizard = {
					wealth = -55
				}
				renowned_warlock = {
					wealth = -55
				}
				renowned_bard = {
					wealth = -55
				}
				master_wizard = {
					wealth = -75
				}
				master_warlock = {
					wealth = -75
				}
				master_bard = {
					wealth = -75
				}
				expert_wizard = {
					wealth = -100
				}
				expert_warlock = {
					wealth = -100
				}
				expert_bard = {
					wealth = -100
				}
				journeyman_wizard = {
					wealth = -125
				}
				journeyman_warlock = {
					wealth = -125
				}
				journeyman_bard = {
					wealth = -125
				}
				trained_wizard = {
					wealth = -150
				}
				trained_warlock = {
					wealth = -150
				}
				trained_bard = {
					wealth = -150
				}
				wizard = {
					wealth = -200
				}
				warlock = {
					wealth = -200
				}
				bard = {
					wealth = -200
				}
			}
			add_character_modifier = {
				name = summoned_cooldown
				years = 2
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				character_event = { id = wizinit.31 }
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = { #I am losing an offensive war
				factor = 10
				any_war = {
					attacker = { character = ROOT }
					NOT = { war_score = -19 }
				}
			}
			mult_modifier = { #I am losing a defensive war
				factor = 10
				any_war = {
					defender = { character = ROOT }
					war_score = 20
				}
			}
		}
	}

	warlock_pact_boon = {
		ai = no
		is_high_prio = yes
		potential = {
			z_warlock = yes
			OR = {
				trait = trained_warlock
				trait = journeyman_warlock
				trait = expert_warlock
				trait = master_warlock
				trait = renowned_warlock
				trait = legendary_warlock
			}
			NOR = {
				AND = {
					has_artifact = gazer_familiar
					has_character_flag = got_warlock_familiar
				}
				AND = {
					has_artifact = imp_familiar
					has_character_flag = got_warlock_familiar
				}
				AND = {
					has_artifact = pseudodragon_familiar
					has_character_flag = got_warlock_familiar
				}
				AND = {
					has_artifact = quasit_familiar
					has_character_flag = got_warlock_familiar
				}
				AND = {
					has_artifact = sprite_familiar
					has_character_flag = got_warlock_familiar
				}
				AND = {
					has_artifact = warlock_book_shadows
					has_character_flag = got_warlock_book_shadows
				}
				AND = {
					has_artifact = warlock_pact_weapon
					has_character_flag = got_warlock_pact_weapon
				}
			}
			not_casting = yes
		}
		allow = {
			has_warlock_patron = yes
		}

		effect = {
			character_event = { id = WARL.1 }
		}

		ai_will_do = {
			factor = 1
		}
	}

	warlock_patron_pick = {
		ai = no
		is_high_prio = yes
		potential = {
			z_warlock = yes
			NOT = { has_warlock_patron = yes }
			not_casting = yes
		}
		allow = {
			always = yes
		}

		effect = {
			character_event = { id = WARL.5 }
		}

		ai_will_do = {
			factor = 1
		}
	}

	ritual_charm_person_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				AND = {
					trait = warlock_fey
					z_warlock = yes
				}
				AND = {
					trait = warlock_old_one
					z_warlock = yes
				}
				AND = {
					trait = warlock_fiend
					z_warlock = yes
				}
				AND = {
					trait = warlock_elemental
					z_warlock = yes
				}
				AND = {
					trait = wiz_enchantment
					z_wizard = yes
				}
				z_bard = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	ritual_dominate_person_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				AND = {
					trait = warlock_fey
					z_warlock = yes
				}
				AND = {
					trait = warlock_old_one
					z_warlock = yes
				}
				AND = {
					trait = wiz_enchantment
					z_wizard = yes
				}
				z_bard = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	ritual_summon_fiends = {
		only_playable = yes
		ai_check_interval = 6
		potential = {
			OR = {
				trigger_if = {
					limit = { z_wizard = yes }
	
					trait = wiz_conjuration
				}
				trigger_else_if = {
					limit = { z_warlock = yes }
	
					trait = warlock_fiend
				}
				trigger_else = {
					always = no
				}
			}
			trigger_if = {
				limit = { ai = no }

				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			war = yes
			custom_tooltip = {
				text = SUMMONEDCD
				hidden_tooltip = {
					NOT = { has_character_flag = wiz_summon_fiends }
				}
			}
			OR = {
				AND = {
					custom_tooltip = {
						text = BASECASTER
						OR = {
							trait = wizard
							trait = warlock
						}
					}
					wealth = 250
				}
				AND = {
					custom_tooltip = {
						text = TRAINEDCASTER
						OR = {
							trait = trained_wizard
							trait = trained_warlock
						}
					}
					wealth = 210
				}
				AND = {
					custom_tooltip = {
						text = JOURNCASTER
						OR = {
							trait = journeyman_wizard
							trait = journeyman_warlock
						}
					}
					wealth = 170
				}
				AND = {
					custom_tooltip = {
						text = EXPCASTER
						OR = {
							trait = expert_wizard
							trait = expert_warlock
						}
					}
					wealth = 130
				}
				AND = {
					custom_tooltip = {
						text = MASTCASTER
						OR = {
							trait = master_wizard
							trait = master_warlock
						}
					}
					wealth = 90
				}
				AND = {
					custom_tooltip = {
						text = RENOWNCASTER
						OR = {
							trait = renowned_wizard
							trait = renowned_warlock
						}
					}
					wealth = 60
				}
				AND = {
					custom_tooltip = {
						text = LEGENDCASTER
						OR = {
							trait = legendary_wizard
							trait = legendary_warlock
						}
					}
					wealth = 45
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_wizard = {
					wealth = -45
				}
				legendary_warlock = {
					wealth = -45
				}
				renowned_wizard = {
					wealth = -60
				}
				renowned_warlock = {
					wealth = -60
				}
				master_wizard = {
					wealth = -90
				}
				master_warlock = {
					wealth = -90
				}
				expert_wizard = {
					wealth = -130
				}
				expert_warlock = {
					wealth = -130
				}
				journeyman_wizard = {
					wealth = -170
				}
				journeyman_warlock = {
					wealth = -170
				}
				trained_wizard = {
					wealth = -210
				}
				trained_warlock = {
					wealth = -210
				}
				wizard = {
					wealth = -250
				}
				warlock = {
					wealth = -250
				}
			}
			add_character_modifier = {
				name = summoned_cooldown
				years = 2
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				character_event = { id = wizinit.34 }
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = { #I am losing an offensive war
				factor = 10
				any_war = {
					attacker = { character = ROOT }
					NOT = { war_score = -19 }
				}
			}
			mult_modifier = { #I am losing a defensive war
				factor = 10
				any_war = {
					defender = { character = ROOT }
					war_score = 20
				}
			}
		}
	}

	empty_mind_dec = {
		ai_check_interval = 100
		potential = {
			z_psion = yes
			trait = stressed
		}
		allow = {
			always = yes
		}
		effect = {
			remove_trait = stressed
			add_character_modifier = {
				name = empty_mind
				years = 5
				stacking = yes
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 0.1
				has_character_modifier = empty_mind
			}
		}
	}

	heal_mind_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			z_psion = yes
			has_character_flag = psi_spellbook_open
		}
		allow = {
			always = no
		}
		effect = {
			break = yes # doesn't matter
		}
		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	glamour_dec = {
		ai_check_interval = 50
		potential = {
			z_psion = yes
			trigger_if = {
				limit = { ai = no }

				has_character_flag = psi_spellbook_open
			}
		}
		allow = {
			NOR = {
				trait = stressed
				has_character_modifier = glamour
			}
		}
		effect = {
			custom_tooltip = {
				text = lightpsi_tt
				small_psi_stress = yes
			}
			add_character_modifier = {
				name = glamour
				years = 3
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 0.1
				diplomacy = 10
			}
			mult_modifier = {
				factor = 1.5
				NOT = { diplomacy = 5 }
			}
		}
	}

	manifest_mindblade = {
		ai_check_interval = 50
		potential = {
			z_psion = yes
			trigger_if = {
				limit = { ai = no }

				has_character_flag = psi_spellbook_open
			}
		}
		allow = {
			NOR = {
				trait = stressed
				has_character_modifier = mindblade
			}
		}
		effect = {
			custom_tooltip = {
				text = mediumpsi_tt
				med_psi_stress = yes
			}
			add_character_modifier = {
				name = mindblade
				years = 5
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 2
				z_rogue = yes
			}
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	# Aberrant Mind

		#see general note on job spells
		detect_thoughts_sorc = {
			only_playable = yes
			ai_check_interval = 12
			potential = {
				trigger_if = {
					limit = { ai = yes }

					NOT = { has_character_modifier = detect_thoughts_mod }
				}
				trigger_else = {
					OR = {
						has_character_flag = psi_spellbook_open
						has_character_flag = sorc_spellbook_open
					}
				}

				OR = {
					z_psion = yes
					trigger_if = {
						limit = { z_sorcerer = yes }

						OR = {
							trait = origin_aberrant_mind
							race_has_aberrant_magic = yes
						}
					}
				}

				
			}
			allow = {
				NOR = {
					has_character_modifier = detect_thoughts_mod
					has_character_modifier = burn_path_mod
				}
				wild_magic_recovery = yes
				OR = {
					always = no
					trigger_if = {
						limit = { z_sorcerer = yes }

						custom_tooltip = {
							text = HAS7SPELLPOINTS
							hidden_tooltip = {
								check_variable = { which = sorcspellpoints value = 7 }
							}
						}
					}
					trigger_if = {
						limit = { z_psion = yes }

						NOT = { trait = stressed }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_detect_thoughts_cooldown }
							had_character_flag = { flag = spell_detect_thoughts_cooldown years = 4 }
						}
					}
				}
				
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_detect_thoughts_cooldown
				if = {
					limit = {
						z_sorcerer = yes
					}
					hidden_tooltip = { change_variable = { which = sorcspellpoints value = -7 } }
				}
				else_if = {
					limit = {
						z_psion = yes
					}
					custom_tooltip = {
						text = lightpsi_tt
						small_psi_stress = yes
					}
				}
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					add_character_modifier = {
						name = detect_thoughts_mod
						years = 3
					}
				}
			}
			ai_will_do = {
				factor = 0.5
				mult_modifier = {
					factor = 0.5
					intrigue = 10 # Don't really need it
				}
				mult_modifier = {
					factor = 5
					NOT = { intrigue = 5 }
				}
			}
		}

		# find_familiar

		spell_charm_person_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				#ai = no
				OR = {
					AND = {
						has_character_flag = sorc_spellbook_open

						OR = {
							trait = origin_aberrant_mind
							trait = origin_shadow
							race_has_aberrant_magic = yes
							race_has_shadow_magic = yes
						}

						z_sorcerer = yes
					}
					AND = {
						has_character_flag = psi_spellbook_open
						z_psion = yes
					}
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

		spell_forget_past_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				#ai = no
				OR = {
					AND = {
						has_character_flag = sorc_spellbook_open

						OR = {
							trait = origin_aberrant_mind
							race_has_aberrant_magic = yes
						}

						z_sorcerer = yes
					}
					AND = {
						has_character_flag = psi_spellbook_open
						z_psion = yes
					}
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

		phantasmal_force_sorc = {
			only_playable = yes
			ai_check_interval = 6
			potential = {
				z_sorcerer = yes
				trigger_if = {
					limit = { ai = yes }

					war = yes
					OR = {
						NOT = { has_character_flag = spell_phantasmal_force_cooldown }
						had_character_flag = { flag = spell_phantasmal_force_cooldown months = 18 }
					}
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_aberrant_mind
					race_has_aberrant_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				war = yes
				custom_tooltip = {
					text = NOSUMMONEDDEMONS
					hidden_tooltip = {
						NOT = { has_earmarked_regiments = sorc_illusions }
					}
				}
				custom_tooltip = {
					text = HAS10SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 10 }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_phantasmal_force_cooldown }
							had_character_flag = { flag = spell_phantasmal_force_cooldown months = 18 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_phantasmal_force_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -10 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					if = {
						limit = {
							OR = {
								trait = sorcerer
								trait = trained_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_illusions
									troops = {
										illusory_troops = { 400 400 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = journeyman_sorcerer
								trait = expert_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_illusions
									troops = {
										illusory_troops = { 750 750 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = master_sorcerer
								trait = renowned_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_illusions
									troops = {
										illusory_troops = { 1200 1200 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							trait = legendary_sorcerer
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_illusions
									troops = {
										illusory_troops = { 1600 1600 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					hidden_tooltip = { character_event = { id = spellaux.27 months = 12 } }
				}
			}
			ai_will_do = {
				factor = 1
				mult_modifier = {
					factor = 0
					war = no
				}
			}
		}

		dominate_person_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				has_character_flag = sorc_spellbook_open
				z_sorcerer = yes
				OR = {
					trait = origin_aberrant_mind
					race_has_aberrant_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

	# Draconic

		spell_longstrider_sorc = {
			only_playable = yes
			ai_check_interval = 6
			potential = {
				z_sorcerer = yes
				trigger_if = {
					limit = { ai = yes }

					in_command = yes
					NOT = { has_character_modifier = spell_longstrider_mod }
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_storm
					trait = origin_draconic
					race_has_storm_magic = yes
					race_has_draconic_magic = yes
				}

				trigger_if = {
					limit = { ai = no }
					
					has_character_flag = sorc_spellbook_open
				}
			}
			allow = {
				wild_magic_recovery = yes
				in_command = yes
				custom_tooltip = {
					text = HAS5SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 5 }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_longstrider_cooldown }
							had_character_flag = { flag = spell_longstrider_cooldown months = 1 }
						}
					}
				}
				NOR = {
					has_character_modifier = burn_path_mod
					has_character_modifier = spell_longstrider_mod
				}
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_longstrider_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -5 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					add_character_modifier = {
						modifier = spell_longstrider_mod
						years = 2
					}
				}
			}
			ai_will_do = {
				factor = 0.5
				mult_modifier = {
					factor = 2
					trait = diligent
				}
				mult_modifier = {
					factor = 0.5
					trait = slothful
				}
			}
		}

		# find_familiar

		spell_wall_of_stone_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open
				OR = {
					trait = origin_draconic
					race_has_draconic_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

		spell_conjure_elementals_sorc = {
			only_playable = yes
			ai_check_interval = 6
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }

					war = yes
					OR = {
						NOT = { has_character_flag = spell_conjure_elementals_cooldown }
						had_character_flag = { flag = spell_conjure_elementals_cooldown months = 18 }
					}
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_storm
					trait = origin_draconic
					race_has_storm_magic = yes
					race_has_draconic_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				war = yes
				custom_tooltip = {
					text = HAS12SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 12 }
					}
				}
				custom_tooltip = {
					text = NOSUMMONEDDEMONS
					hidden_tooltip = {
						NOT = { has_earmarked_regiments = sorc_elementals }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_conjure_elementals_cooldown }
							had_character_flag = { flag = spell_conjure_elementals_cooldown months = 18 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_conjure_elementals_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -12 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					if = {
						limit = {
							OR = {
								trait = sorcerer
								trait = trained_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_elementals
									troops = {
										elemental_troops = { 150 150 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = journeyman_sorcerer
								trait = expert_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_elementals
									troops = {
										elemental_troops = { 300 300 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = master_sorcerer
								trait = renowned_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_elementals
									troops = {
										elemental_troops = { 450 450 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							trait = legendary_sorcerer
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_elementals
									troops = {
										elemental_troops = { 600 600 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					hidden_tooltip = { character_event = { id = spellaux.40 months = 12 } }
				}
			}
			ai_will_do = {
				factor = 1
				mult_modifier = {
					factor = 0
					war = no
				}
			}
		}

		legend_lore_sorc = {
			ai_check_interval = 12
			only_playable = yes
			potential = {
				trigger_if = {
					limit = { ai = yes }

					OR = {
						trait = master_sorcerer
						trait = renowned_sorcerer
						trait = legendary_sorcerer
					}
					NOT = { has_character_modifier = legend_lore_mod }
				}
				trigger_else = {
					z_sorcerer = yes
				}

				OR = {
					trait = origin_draconic
					race_has_draconic_magic = yes
				}
				
				trigger_if = {
					limit = { ai = no }
					
					has_character_flag = sorc_spellbook_open
				}
			}
			allow = {
				NOT = { has_character_modifier = legend_lore_mod }
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS15SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 15 }
					}
				}
				custom_tooltip = {
					text = MASTERSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_legend_lore_cooldown }
							had_character_flag = { flag = spell_legend_lore_cooldown months = 1 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_legend_lore_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -15 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					add_character_modifier = {
						name = legend_lore_mod
						years = 3
					}
				}
			}
			ai_will_do = {
				factor = 0.5
			}
		}

		dragon_transformation = {
			ai_check_interval = 12
			only_playable = yes
			potential = {
				hidden_tooltip = {
					OR = {
						ai = no
						AND = {
							has_character_flag = is_in_duel
							NOT = { had_character_flag = { flag = is_in_duel months = 1 } }
						}
					}
				}
				z_sorcerer = yes
				
				OR = {
					trait = origin_draconic
					race_has_draconic_magic = yes
				}
				
				trigger_if = {
					limit = { ai = no }
					
					has_character_flag = sorc_spellbook_open
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS15SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 15 }
					}
				}
				custom_tooltip = {
					text = MASTERSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_tensers_transformation_cooldown }
							had_character_flag = { flag = spell_tensers_transformation_cooldown months = 28 }
						}
					}
				}
				NOT = { has_character_modifier = tensers_transformation_mod }
				NOT = { has_character_modifier = wild_shape_mod }
				NOT = { has_character_modifier = improved_wild_shape_mod }
				NOT = { has_character_modifier = expert_wild_shape_mod }
				NOT = { has_character_modifier = master_wild_shape_mod }
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_tensers_transformation_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -15 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					add_character_modifier = {
						name = tensers_transformation_mod
						years = 2
					}
				}
			}
			ai_will_do = {
				factor = 1
				mult_modifier = {
					factor = 0.5
					trait = slothful
				}
				mult_modifier = {
					factor = 0.5
					trait = proud
				}
			}
		}

	# Shadow

		spell_animate_dead_sorc = {
			only_playable = yes
			ai_check_interval = 6
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }

					war = yes
					OR = {
						NOT = { has_character_flag = spell_animate_dead_cooldown }
						had_character_flag = { flag = spell_animate_dead_cooldown months = 18 }
					}
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_shadow
					race_has_shadow_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				war = yes
				custom_tooltip = {
					text = NOSUMMONEDDEMONS
					hidden_tooltip = {
						NOT = { has_earmarked_regiments = sorc_animate_dead }
					}
				}
				custom_tooltip = {
					text = HAS12SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 10 }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_animate_dead_cooldown }
							had_character_flag = { flag = spell_animate_dead_cooldown months = 18 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_animate_dead_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -10 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					if = {
						limit = {
							OR = {
								trait = sorcerer
								trait = trained_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_animate_dead
									troops = {
										undead_troops = { 400 400 }
									}
									attrition = 0.05
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = journeyman_sorcerer
								trait = expert_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_animate_dead
									troops = {
										undead_troops = { 750 750 }
									}
									attrition = 0.05
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = master_sorcerer
								trait = renowned_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_animate_dead
									troops = {
										undead_troops = { 1200 1200 }
									}
									attrition = 0.05
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							trait = legendary_sorcerer
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_animate_dead
									troops = {
										undead_troops = { 1600 1600 }
									}
									attrition = 0.05
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					hidden_tooltip = { character_event = { id = spellaux.37 months = 12 } }
				}
			}
			ai_will_do = {
				factor = 1
				mult_modifier = {
					factor = 0
					war = no
				}
			}
		}

		# charm person

		spell_create_homunculus_sorc = {
			ai_check_interval = 12
			only_playable = yes
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }
					
					NOT = { has_artifact = homunculus_artf }
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_shadow
					race_has_shadow_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS13SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 13 }
					}
				}
				NOT = { has_artifact = homunculus_artf }
				NOT = { has_injury_trigger = yes }
				custom_tooltip = {
					text = JOURNEYMANSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = journeyman_sorcerer
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_homunculus_cooldown }
							had_character_flag = { flag = spell_homunculus_cooldown months = 1 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_create_homunculus_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -13 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					add_trait_wounded_effect = yes
					add_artifact = homunculus_artf
				}
			}
			ai_will_do = {
				factor = 0.5
				mult_modifier = {
					factor = 2
					trait = diligent
				}
				mult_modifier = {
					factor = 0.5
					trait = slothful
				}
			}
		}

		spell_summon_lesser_demons_sorc = {
			only_playable = yes
			ai_check_interval = 6
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }
					
					war = yes
					OR = {
						NOT = { has_character_flag = spell_summon_lesser_demons_cooldown }
						had_character_flag = { flag = spell_summon_lesser_demons_cooldown months = 18 }
					}
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_shadow
					race_has_shadow_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS15SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 15 }
					}
				}
				war = yes
				custom_tooltip = {
					text = NOSUMMONEDDEMONS
					hidden_tooltip = {
						NOT = { has_earmarked_regiments = sorc_lesser_demons }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_summon_lesser_demons_cooldown }
							had_character_flag = { flag = spell_summon_lesser_demons_cooldown months = 18 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_summon_lesser_demons_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -15 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					if = {
						limit = {
							OR = {
								trait = sorcerer
								trait = trained_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_lesser_demons
									troops = {
										archers = { 25 25 }
										light_infantry = { 200 200 }
										heavy_infantry = { 25 25 }
									}
									attrition = 0.5
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = journeyman_sorcerer
								trait = expert_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_lesser_demons
									troops = {
										archers = { 50 50 }
										light_infantry = { 400 400 }
										heavy_infantry = { 50 50 }
									}
									attrition = 0.5
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = master_sorcerer
								trait = renowned_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_lesser_demons
									troops = {
										archers = { 75 75 }
										light_infantry = { 600 600 }
										heavy_infantry = { 75 75 }
									}
									attrition = 0.5
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							trait = legendary_sorcerer
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_lesser_demons
									troops = {
										archers = { 100 100 }
										light_infantry = { 800 800 }
										heavy_infantry = { 100 100 }
									}
									attrition = 0.5
									maintenance_multiplier = 0.1
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					hidden_tooltip = { character_event = { id = spellaux.19 months = 12 } }
				}
			}
			ai_will_do = {
				factor = 1
				mult_modifier = {
					factor = 0
					war = no
				}
			}
		}

		planar_binding_sorc_shadow = {
			ai_check_interval = 24
			only_playable = yes
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }
					
					OR = {
						NOT = { has_character_flag = spell_planar_binding_cooldown }
						had_character_flag = { flag = spell_planar_binding_cooldown years = 3 }
					}
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_shadow
					race_has_shadow_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = EXPERTSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_planar_binding_cooldown }
							had_character_flag = { flag = spell_planar_binding_cooldown years = 3 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
				prisoner = no
				is_incapable = no
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_planar_binding_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -20 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					hidden_tooltip = {
						if = {
							limit = {
								trait = origin_wild_magic
							}
							random = {
								chance = 5
								character_event = { id = spellaux.4 }
								break = yes
							}
						}
					}
					custom_tooltip = {
						text = OUTSIDERSUMMONED
						hidden_tooltip = {
							random_list = {
								1 = {
									create_character = {
										age = 1000
										attributes = {
											diplomacy = 5
											martial = 6
											stewardship = 5
											intrigue = 9
											learning = 5
										}
										female = random
										trait = creature_fiend
										random_traits = yes
										religion = infernal
										culture = abishai
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 1000
										attributes = {
											diplomacy = 5
											martial = 6
											stewardship = 5
											intrigue = 9
											learning = 5
										}
										female = random
										trait = creature_fiend
										random_traits = yes
										religion = infernal
										culture = baatezu
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 1000
										attributes = {
											diplomacy = 4
											martial = 9
											stewardship = 4
											intrigue = 6
											learning = 5
										}
										female = random
										trait = creature_fiend
										random_traits = yes
										religion = abyssal_cult
										culture = tanarri
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 1000
										attributes = {
											diplomacy = 6
											martial = 7
											stewardship = 6
											intrigue = 6
											learning = 4
										}
										female = random
										trait = creature_fiend
										random_traits = yes
										religion = shadow_gods
										culture = yugoloth
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 1000
										attributes = {
											diplomacy = 5
											martial = 7
											stewardship = 7
											intrigue = 6
											learning = 4
										}
										female = random
										trait = creature_fiend
										random_traits = yes
										religion = shadow_gods
										culture = gehreleth
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									mult_modifier = {
										NOR = {
											culture_group = zakharan_group
											culture_group = old_zakharan_group
											culture_group = genie_group
											culture = marrashi
										}
										factor = 0
									}
									create_character = {
										age = 1000
										attributes = {
											diplomacy = 6
											martial = 7
											stewardship = 6
											intrigue = 6
											learning = 4
										}
										female = random
										trait = creature_fiend
										random_traits = yes
										religion = primordial
										culture = marrashi
										dynasty = none
										immortal_age = 30
									}
								}
							}
							new_character = {
								opinion = {
									modifier = planar_binding_mod
									who = ROOT
									years = 10
								}
								character_event = { id = spellaux.43 years = 20 }
								if = {
									limit = {
										culture = baatezu
									}
									spawn_random_baatezu = yes
								}
								else_if = {
									limit = {
										culture = tanarri
									}
									spawn_random_tanarri = yes
								}
								else_if = {
									limit = {
										culture = yugoloth
									}
									spawn_random_yugoloth = yes
								}
							}
						}
					}
					character_event = { id = generalmisc.52 }
				}
			}
			ai_will_do = {
				factor = 0.05
				mult_modifier = {
					factor = 0
					free_court_slots <= 5
				}
				mult_modifier = {
					factor = 4
					can_grant_title = title_commander
				}
			}
		}

		spell_blight_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open

				OR = {
					trait = origin_shadow
					race_has_shadow_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

	# Storm

		# spell_conjure_elementals

		# find_familiar

		# longstrider

		elemental_transformation = {
			ai_check_interval = 12
			only_playable = yes
			potential = {
				z_sorcerer = yes
				hidden_tooltip = {
					OR = {
						ai = no
						AND = {
							has_character_flag = is_in_duel
							NOT = { had_character_flag = { flag = is_in_duel months = 28 } }
						}
					}
				}

				OR = {
					trait = origin_storm
					race_has_storm_magic = yes
				}
				
				trigger_if = {
					limit = { ai = no }
					
					has_character_flag = sorc_spellbook_open
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS15SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 15 }
					}
				}
				custom_tooltip = {
					text = MASTERSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_tensers_transformation_cooldown }
							had_character_flag = { flag = spell_tensers_transformation_cooldown months = 1 }
						}
					}
				}
				NOT = { has_character_modifier = tensers_transformation_mod }
				NOT = { has_character_modifier = wild_shape_mod }
				NOT = { has_character_modifier = improved_wild_shape_mod }
				NOT = { has_character_modifier = expert_wild_shape_mod }
				NOT = { has_character_modifier = master_wild_shape_mod }
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_tensers_transformation_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -15 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					add_character_modifier = {
						name = tensers_transformation_mod
						years = 2
					}
				}
			}
			ai_will_do = {
				factor = 1
				mult_modifier = {
					factor = 0.5
					trait = slothful
				}
				mult_modifier = {
					factor = 0.5
					trait = proud
				}
			}
		}

		planar_binding_sorc_storm = {
			ai_check_interval = 24
			only_playable = yes
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }
					
					OR = {
						NOT = { has_character_flag = spell_planar_binding_cooldown }
						had_character_flag = { flag = spell_planar_binding_cooldown years = 3 }
					}
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_storm
					race_has_storm_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = EXPERTSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_planar_binding_cooldown }
							had_character_flag = { flag = spell_planar_binding_cooldown years = 3 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
				prisoner = no
				is_incapable = no
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_planar_binding_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -20 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					custom_tooltip = {
						text = OUTSIDERSUMMONED
						hidden_tooltip = {
							random_list = {
								1 = {
									create_character = {
										age = 300
										female = random
										trait = creature_genie
										random_traits = yes
										religion = ten_thousand_gods
										culture = jann
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 500
										attributes = {
											diplomacy = 6
											martial = 7
											stewardship = 8
											intrigue = 7
											learning = 7
										}
										trait = creature_genie
										random_traits = yes
										female = random
										religion = primordial
										culture = dao
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 500
										attributes = {
											diplomacy = 8
											martial = 6
											stewardship = 7
											intrigue = 7
											learning = 7
										}
										trait = creature_genie
										random_traits = yes
										female = random
										religion = primordial
										culture = djinn
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 500
										attributes = {
											diplomacy = 7
											martial = 8
											stewardship = 7
											intrigue = 7
											learning = 6
										}
										trait = creature_genie
										random_traits = yes
										female = random
										religion = primordial
										culture = efreet
										dynasty = none
										immortal_age = 30
									}
								}
								1 = {
									create_character = {
										age = 500
										attributes = {
											diplomacy = 7
											martial = 7
											stewardship = 6
											intrigue = 8
											learning = 7
										}
										trait = creature_genie
										random_traits = yes
										female = random
										religion = primordial
										culture = marid
										dynasty = none
										immortal_age = 30
									}
								}
							}
							new_character = {
								opinion = {
									modifier = planar_binding_mod
									who = ROOT
									years = 10
								}
								character_event = { id = spellaux.43 years = 20 }
							}
						}
					}
				}
				character_event = { id = generalmisc.52 }
			}
			ai_will_do = {
				factor = 0.05
				mult_modifier = {
					factor = 0
					free_court_slots <= 5
				}
				mult_modifier = {
					factor = 4
					can_grant_title = title_commander
				}
			}
		}

		spell_controlweather_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open

				OR = {
					trait = origin_storm
					trait = origin_wild_magic
					race_has_storm_magic = yes
					race_has_wild_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

	# Wild Magic

		spell_find_familiar_sorc = {
			ai_check_interval = 48
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }

					NOT = { has_artifact = wiz_familiar_artf }
				}

				OR = {
					trait = origin_wild_magic
					trait = origin_divine_soul
					trait = origin_storm
					trait = origin_draconic
					trait = origin_aberrant_mind
					race_has_wild_magic = yes
					race_has_divine_magic = yes
					race_has_storm_magic = yes
					race_has_draconic_magic = yes
					race_has_aberrant_magic = yes
				}

				trigger_if = {
					limit = { ai = no }
					
					has_character_flag = sorc_spellbook_open
				}
			}
			allow = {
				wild_magic_recovery = yes
				NOT = { has_artifact = wiz_familiar_artf }
				custom_tooltip = {
					text = HAS7SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 7 }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_find_familiar_cooldown }
							had_character_flag = { flag = spell_find_familiar_cooldown months = 1 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_find_familiar_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -7 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					hidden_tooltip = {
						if = {
							limit = {
								trait = origin_wild_magic
							}
							random = {
								chance = 5
								character_event = { id = spellaux.4 }
								break = yes
							}
						}
					}
					add_artifact = wiz_familiar_artf
				}
			}
			ai_will_do = {
				factor = 0.5
				mult_modifier = {
					factor = 2
					trait = diligent
				}
				mult_modifier = {
					factor = 0.5
					trait = slothful
				}
			}
		}

		#This probably could be available to the ai with an interval around 12, but I left it as ai = no to preserve existing balance
		reckless_dweomer = {
			ai = no
			ai_check_interval = 6000
			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open
				OR = {
					trait = origin_wild_magic
					race_has_wild_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_nahals_reckless_dweomer_cooldown }
							had_character_flag = { flag = spell_nahals_reckless_dweomer_cooldown years = 2 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				set_character_flag = spell_nahals_reckless_dweomer_cooldown
				#set_character_flag = spell_clone_cooldown
				#hidden_tooltip = { change_variable = { which = sorcspellpoints value = -30 } }
				hidden_tooltip = { # 
					if = {
						limit = {
							trait = origin_wild_magic
						}
						random = {
							chance = 50
							set_character_flag = dweomer_surge
							wild_magic_surge_effect = yes
						}
					}
				}
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					hidden_tooltip = {
						random_list = {
							10 = {
								change_variable = { which = sorcspellpoints value = 5 }
							}
							5 = {
								change_variable = { which = sorcspellpoints value = 10 }
							}
							1 = {
								change_variable = { which = sorcspellpoints value = 15 }
							}
						}
					}
				}
			}

			ai_will_do = {
				factor = 0
			}
		}

		spell_rage_sorc = {
			ai_check_interval = 6
			only_playable = yes
			potential = {
				trigger_if = {
					limit = { ai = yes }

					in_command = yes
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}
				
				z_sorcerer = yes

				OR = {
					trait = origin_wild_magic
					race_has_wild_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				in_command = yes
				custom_tooltip = {
					text = HAS5SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 5 }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_rage_cooldown }
							had_character_flag = { flag = spell_rage_cooldown months = 18 }
						}
					}
				}
				NOT = { has_character_modifier = spell_rage_mod }
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_rage_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -5 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					add_character_modifier = {
						modifier = spell_rage_mod
						years = 2
					}
				}
			}
			ai_will_do = {
				factor = 0.5
				mult_modifier = {
					factor = 2
					trait = diligent
				}
				mult_modifier = {
					factor = 0.5
					trait = slothful
				}
			}
		}

		spell_fabricate_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open
				OR = {
					trait = origin_wild_magic
					race_has_wild_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

		animate_objects = {
			only_playable = yes
			ai_check_interval = 6
			potential = {
				trigger_if = {
					limit = { ai = yes }

					war = yes
					OR = {
						NOT = { has_character_flag = spell_phantasmal_force_cooldown }
						had_character_flag = { flag = spell_phantasmal_force_cooldown months = 18 }
					}
				}
				trigger_else = {
					limit = { has_character_flag = sorc_spellbook_open }
				}
				z_sorcerer = yes

				OR = {
					trait = origin_wild_magic
					race_has_wild_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS10SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 10 }
					}
				}
				war = yes
				custom_tooltip = {
					text = NOSUMMONEDDEMONS
					hidden_tooltip = {
						NOT = { has_earmarked_regiments = sorc_objects }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_phantasmal_force_cooldown }
							had_character_flag = { flag = spell_phantasmal_force_cooldown months = 18 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_phantasmal_force_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -10 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					if = {
						limit = {
							OR = {
								trait = sorcerer
								trait = trained_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_objects
									troops = {
										animated_objects = { 150 150 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = journeyman_sorcerer
								trait = expert_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_objects
									troops = {
										animated_objects = { 300 300 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							OR = {
								trait = master_sorcerer
								trait = renowned_sorcerer
							}
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_objects
									troops = {
										animated_objects = { 450 450 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					else_if = {
						limit = {
							trait = legendary_sorcerer
						}
						location = {
							ROOT = {
								spawn_unit = {
									province = PREV
									home = PREV
									owner = ROOT
									leader = ROOT
									earmark = sorc_objects
									troops = {
										animated_objects = { 600 600 }
									}
									attrition = 0
									maintenance_multiplier = 0
									cannot_inherit = yes
									disband_on_peace = yes
									can_toggle_looting = no
									is_looter = no
									reinforces = no
								}
							}
						}
					}
					hidden_tooltip = { character_event = { id = spellaux.27 months = 12 } }
				}
			}
			ai_will_do = {
				factor = 1
				mult_modifier = {
					factor = 0
					war = no
				}
			}
		}

		# spell_controlweather_fake

	# Divine Soul

		# find_familiar

		spell_lesser_restoration_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open
				OR = {
					trait = origin_divine_soul
					race_has_divine_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

		spell_heal_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				OR = {
					AND = {
						z_sorcerer = yes
						OR = {
							trait = origin_divine_soul
							race_has_divine_magic = yes
						}
					}

					AND = {
						z_psion = yes
						has_character_flag = psi_spellbook_open
					}
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

		planar_binding_sorc_divine = {
			ai_check_interval = 24
			only_playable = yes
			potential = {
				z_sorcerer = yes

				trigger_if = {
					limit = { ai = yes }
					
					OR = {
						NOT = { has_character_flag = spell_planar_binding_cooldown }
						had_character_flag = { flag = spell_planar_binding_cooldown years = 3 }
					}
				}
				trigger_else = {
					has_character_flag = sorc_spellbook_open
				}

				OR = {
					trait = origin_divine_soul
					race_has_divine_magic = yes
				}
			}
			allow = {
				wild_magic_recovery = yes
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = EXPERTSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_planar_binding_cooldown }
							had_character_flag = { flag = spell_planar_binding_cooldown years = 3 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
				prisoner = no
				is_incapable = no
			}
			effect = {
				wild_magic_surge_effect = yes
				set_character_flag = spell_planar_binding_cooldown
				hidden_tooltip = { change_variable = { which = sorcspellpoints value = -20 } }
				if = {
					limit = {
						wild_magic_recovery = yes
					}
					custom_tooltip = {
						text = OUTSIDERSUMMONED
						hidden_tooltip = {
							random_list = {
								1 = {
									create_character = {
										age = 1000
										attributes = {
											diplomacy = 8
											martial = 5
											stewardship = 7
											intrigue = 4
											learning = 8
										}
										female = random
										trait = creature_angel
										random_traits = yes
										religion = triadic
										culture = angel
										dynasty = none
										immortal_age = 30
									}
								}
							}
							new_character = {
								opinion = {
									modifier = planar_binding_mod
									who = ROOT
									years = 10
								}
								character_event = { id = spellaux.43 years = 20 }
							}
						}
					}
					character_event = { id = generalmisc.52 }
				}
			}
			ai_will_do = {
				factor = 0.05
				mult_modifier = {
					factor = 0
					free_court_slots <= 5
				}
				mult_modifier = {
					factor = 4
					can_grant_title = title_commander
				}
			}
		}

		spell_greater_restoration_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000

			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open
				OR = {
					trait = origin_divine_soul
					race_has_divine_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

		spell_regenerate_sorc_fake = { # This is basically a reminder that you have this spell and who you can use it on
			ai = no
			ai_check_interval = 6000
			potential = {
				z_sorcerer = yes
				has_character_flag = sorc_spellbook_open
				OR = {
					trait = origin_divine_soul
					race_has_divine_magic = yes
				}
			}

			allow = {
				always = no
			}

			effect = {
				break = yes # doesn't matter
			}

			ai_will_do = {
				factor = 0 # Just to be sure
			}
		}

	gather_raiders = {
		ai = no
		potential = {
			z_barbarian = yes
			is_incapable = no
			not_casting = yes
			is_allowed_to_loot = yes
		}
		allow = {
			prestige = 350
			custom_tooltip = {
				text = BARBARMYCD
				OR = {
					NOT = { has_character_flag = spawned_barb_raiders }
					had_character_flag = {
						flag = spawned_barb_raiders
						years = 1
					}
				}
			}
			custom_tooltip = {
				text = BARBHASARMY
				NOT = {
					has_earmarked_regiments = barbarian_raiders
				}
			}
		}
		effect = {
			prestige = -350
			capital_scope = {
				ROOT = {
					trigger_switch = {
						on_trigger = trait
						barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 350 350 }
									archers = { 100 100 }
									heavy_infantry = { 30 30 }
								}
								cannot_inherit = yes
								maintenance_multiplier = 0.75
								reinforces = no
								can_toggle_looting = no
								is_looter = yes
							}
						}
						trained_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 400 400 }
									archers = { 120 120 }
									heavy_infantry = { 40 40 }
								}
								cannot_inherit = yes
								maintenance_multiplier = 0.75
								reinforces = no
								can_toggle_looting = no
								is_looter = yes
							}
						}
						journeyman_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 500 500 }
									archers = { 140 140 }
									heavy_infantry = { 40 40 }
								}
								cannot_inherit = yes
								maintenance_multiplier = 0.75
								reinforces = no
								can_toggle_looting = no
								is_looter = yes
							}
						}
						expert_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 700 700 }
									archers = { 180 180 }
									heavy_infantry = { 50 50 }
								}
								cannot_inherit = yes
								maintenance_multiplier = 0.75
								reinforces = no
								can_toggle_looting = no
								is_looter = yes
							}
						}
						master_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 900 900 }
									archers = { 250 250 }
									heavy_infantry = { 60 60 }
								}
								cannot_inherit = yes
								maintenance_multiplier = 0.75
								reinforces = no
								can_toggle_looting = no
								is_looter = yes
							}
						}
						renowned_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 1100 1100 }
									archers = { 300 300 }
									heavy_infantry = { 80 80 }
								}
								cannot_inherit = yes
								maintenance_multiplier = 0.75
								reinforces = no
								can_toggle_looting = no
								is_looter = yes
							}
						}
						legendary_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 1300 1300 }
									archers = { 350 350 }
									heavy_infantry = { 100 100 }
								}
								cannot_inherit = yes
								maintenance_multiplier = 0.75
								reinforces = no
								can_toggle_looting = no
								is_looter = yes
							}
						}
					}
				}
			}
		}
	}

	gather_warriors = {
		ai_check_interval = 12
		only_playable = yes
		potential = {
			z_barbarian = yes
			is_incapable = no
			not_casting = yes
		}
		allow = {
			hidden_tooltip = {
				OR = {
					ai = no
					AND = {
						ai = yes
						OR = {
							location = {
								is_island = no
							}
							any_demesne_title = {
								tier = COUNT
								count = 3
							}
						}
					}
				}
			}
			prestige = 350
			custom_tooltip = {
				text = BARBARMYCD
				OR = {
					NOT = { has_character_flag = spawned_barb_army }
					had_character_flag = {
						flag = spawned_barb_army
						years = 1
					}
				}
			}
			custom_tooltip = {
				text = BARBHASARMY
				NOT = {
					has_earmarked_regiments = barbarian_raiders
				}
			}
			war = yes
		}
		effect = {
			prestige = -350
			capital_scope = {
				ROOT = {
					trigger_switch = {
						on_trigger = trait
						barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 350 350 }
									archers = { 100 100 }
									heavy_infantry = { 30 30 }
								}
								cannot_inherit = yes
								disband_on_peace = yes
								maintenance_multiplier = 1
								reinforces = no
								can_toggle_looting = no
								is_looter = no
							}
						}
						trained_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 400 400 }
									archers = { 120 120 }
									heavy_infantry = { 40 40 }
								}
								cannot_inherit = yes
								disband_on_peace = yes
								maintenance_multiplier = 1
								reinforces = no
								can_toggle_looting = no
								is_looter = no
							}
						}
						journeyman_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 500 500 }
									archers = { 140 140 }
									heavy_infantry = { 40 40 }
								}
								cannot_inherit = yes
								disband_on_peace = yes
								maintenance_multiplier = 1
								reinforces = no
								can_toggle_looting = no
								is_looter = no
							}
						}
						expert_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 700 700 }
									archers = { 180 180 }
									heavy_infantry = { 50 50 }
								}
								cannot_inherit = yes
								disband_on_peace = yes
								maintenance_multiplier = 1
								reinforces = no
								can_toggle_looting = no
								is_looter = no
							}
						}
						master_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 900 900 }
									archers = { 250 250 }
									heavy_infantry = { 60 60 }
								}
								cannot_inherit = yes
								disband_on_peace = yes
								maintenance_multiplier = 1
								reinforces = no
								can_toggle_looting = no
								is_looter = no
							}
						}
						renowned_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 1100 1100 }
									archers = { 300 300 }
									heavy_infantry = { 80 80 }
								}
								cannot_inherit = yes
								disband_on_peace = yes
								maintenance_multiplier = 1
								reinforces = no
								can_toggle_looting = no
								is_looter = no
							}
						}
						legendary_barbarian = {
							spawn_unit = {
								province = PREV
								owner = ROOT
								earmark = barbarian_raiders
								troops = {
									light_infantry = { 1300 1300 }
									archers = { 350 350 }
									heavy_infantry = { 100 100 }
								}
								cannot_inherit = yes
								disband_on_peace = yes
								maintenance_multiplier = 1
								reinforces = no
								can_toggle_looting = no
								is_looter = no
							}
						}
					}
				}
			}
		}

		ai_will_do = {
			factor = 0.4
			mult_modifier = {
				factor = 0.5
				olrox_is_good_religion_trigger = yes
			}
			mult_modifier = {
				factor = 2
				is_evil_religion = yes
			}
			mult_modifier = {
				factor = 2
				trait = brave
			}
			mult_modifier = {
				factor = 0.5
				trait = content
			}
			mult_modifier = {
				factor = 2
				OR = {
					government = nomadic_tribal_government
					government = tribal_government
				}
			}
			mult_modifier = {
				factor = 0.1
				location = { is_island = yes }
			}
		}
	}

	lay_on_hands = {
		ai_check_interval = 24
		potential = {
			z_paladin = yes
			not_casting = yes
		}
		allow = {
			wild_magic_recovery = yes
			trait = wounded
			OR = {
				AND = {
					trait = paladin
					piety = 80
				}
				AND = {
					trait = trained_paladin
					piety = 70
				}
				AND = {
					trait = journeyman_paladin
					piety = 60
				}
				AND = {
					trait = expert_paladin
					piety = 50
				}
				AND = {
					trait = master_paladin
					piety = 40
				}
				AND = {
					trait = renowned_paladin
					piety = 30
				}
				AND = {
					trait = legendary_paladin
					piety = 20
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				if = {
					limit = {
						trait = paladin
					}
					piety = -80
				}
				else_if = {
					limit = {
						trait = trained_paladin
					}
					piety = -70
				}
				else_if = {
					limit = {
						trait = journeyman_paladin
					}
					piety = -60
				}
				else_if = {
					limit = {
						trait = expert_paladin
					}
					piety = -50
				}
				else_if = {
					limit = {
						trait = master_paladin
					}
					piety = -40
				}
				else_if = {
					limit = {
						trait = renowned_paladin
					}
					piety = -30
				}
				else = {
					piety = -20
				}
				remove_trait = wounded
				remove_character_modifier = badly_bruised
				remove_character_modifier = black_eye
				remove_character_modifier = swollen_ankle
				remove_character_modifier = swollen_wrist
				remove_character_modifier = sore_muscles
				remove_character_modifier = cracked_ribs
				remove_character_modifier = concussion
			}
		}
		ai_will_do = {
			factor = 1
		}
	}

	paladin_oaths = {
		ai_check_interval = 36
		potential = {
			z_paladin = yes
			not_casting = yes
			NOR = {
				has_character_modifier = oath_of_the_ancients
				has_character_modifier = oath_of_conquest
				has_character_modifier = oath_of_the_crown
				has_character_modifier = oath_of_devotion
				has_character_modifier = oath_of_redemption
				has_character_modifier = oath_of_vengeance
			}
		}
		allow = {
			always = yes
		}
		effect = {
			character_event = { id = generalmisc.5 }
		}
		ai_will_do = {
			factor = 1
		}
	}

	buy_instrument = {
		ai_check_interval = 48
		potential = {
			z_bard = yes
			not_casting = yes
			NOT = {
				any_artifact = {
					has_artifact_flag = instrument
				}
			}
		}
		allow = {
			wealth = 10
		}
		effect = {
			wealth = -10
			random_list = {
				10 = {
					add_artifact = bandore
				}
				10 = {
					add_artifact = harp
				}
				1 = {
					add_artifact = kazoo
				}
				10 = {
					add_artifact = lute
				}
				10 = {
					add_artifact = mandolin
				}
				10 = {
					add_artifact = cittern
				}
				10 = {
					add_artifact = lyre
				}
			}
		}
		ai_will_do = {
			factor = 0.7
		}
	}

	ranger_pick_terrain = {
		ai_check_interval = 48
		potential = {
			z_ranger = yes
			can_have_more_leadership_traits = yes
			not_casting = yes
			NAND = {
				trait = desert_terrain_leader
				trait = flat_terrain_leader
				trait = jungle_terrain_leader
				trait = mountain_terrain_leader
				trait = rough_terrain_leader
				trait = winter_soldier
			}
			NOT = { has_character_flag = picked_favoured_terrain }
		}
		allow = {
			always = yes
		}
		effect = {
			character_event = { id = generalmisc.7 days = 3  }
			set_character_flag = picked_favoured_terrain
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 1.5
				trait = brave
			}
			mult_modifier = {
				factor = 0.5
				trait = craven
			}
		}
	}

	get_animal_companion = {
		ai_check_interval = 48
		potential = {
			OR = {
				z_ranger = yes
				z_druid = yes
			}
			not_casting = yes
			NOT = {
				any_artifact = {
					has_artifact_flag = animal_companion
				}
			}
		}
		allow = {
			piety = 50
		}
		effect = {
			piety = -50
			add_artifact = animal_companion
		}
		ai_will_do = {
			factor = 0.8
		}
	}

	monk_contemplate = {
		ai = no # They can't handle it
		ai_check_interval = 1000
		potential = {
			z_monk = yes
			is_incapable = no
			not_casting = yes
		}
		allow = {
			custom_tooltip = {
				text = CONTEMPLATECD
				OR = {
					NOT = { has_character_flag = monkcont }
					had_character_flag = {
						flag = monkcont
						years = 1
					}
				}
			}
		}
		effect = {
			clr_character_flag = monkcont
			set_character_flag = monkcont
			character_event = { id = generalmisc.9 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	monk_abandon_focus = {
		ai = no # They can't handle it
		ai_check_interval = 1000
		potential = {
			z_monk = yes
			OR = {
				has_character_modifier = monk_diplo
				has_character_modifier = monk_martial
				has_character_modifier = monk_stewardship
				has_character_modifier = monk_intrigue
				has_character_modifier = monk_learning
			}
			not_casting = yes
		}
		allow = {
			always = yes
		}
		effect = {
			remove_character_modifier = monk_diplo
			remove_character_modifier = monk_martial
			remove_character_modifier = monk_stewardship
			remove_character_modifier = monk_intrigue
			remove_character_modifier = monk_learning
		}
		ai_will_do = {
			factor = 0
		}
	}

	monk_longevity = {
		ai_check_interval = 150
		potential = {
			z_monk = yes
			NOR = {
				trait = longevity
				faerun_immortal_race_trigger = yes
			}
			not_casting = yes
		}
		allow = {
			OR = {
				trait = master_monk
				trait = renowned_monk
				trait = legendary_monk
			}
			OR = {
				AND = {
					trait = master_monk
					piety = 800
				}
				AND = {
					trait = renowned_monk
					piety = 600
				}
				AND = {
					trait = legendary_monk
					piety = 300
				}
			}
			is_incapable = no
		}
		effect = {
			if = {
				limit = {
					trait = master_monk
				}
				piety = -800
			}
			else_if = {
				limit = {
					trait = renowned_monk
				}
				piety = -600
			}
			else_if = {
				limit = {
					trait = legendary_monk
					piety = -300
				}
			}
			add_trait = longevity
			if = {
				limit = {
					trait = infirm
				}
				remove_trait = infirm
			}
		}
		ai_will_do = {
			factor = 1
			mult_modifier = {
				factor = 0.01
				trait = depressed
			}
		}
	}

	monk_mob = {
		ai_check_interval = 50
		only_playable = yes
		potential = {
			z_monk = yes
			not_casting = yes
		}
		allow = {
			is_primary_war_defender = yes
			piety = 70
			custom_tooltip = {
				text = MONKMOB_CD
				OR = {
					NOT = { has_character_flag = monkmob }
					had_character_flag = { flag = monkmob years = 1 }
				}
			}
		}
		effect = {
			clr_character_flag = monkmob
			set_character_flag = monkmob
			piety = -70
			capital_scope = {
				ROOT = {
					spawn_unit = {
						province = PREV
						home = PREV
						owner = ROOT
						earmark = monkmob
						troops = {
							mob_troops = { 1000 1000 }
						}
						disband_on_peace = yes
						attrition = 1
						maintenance_multiplier = 1
						can_toggle_looting = no
						cannot_inherit = yes
						reinforces = no
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.7
		}
	}

	hire_brigands = {
		ai = no
		potential = {
			z_rogue = yes
			is_incapable = no
			not_casting = yes
		}
		allow = {
			wealth = 70
			prestige = 150
			custom_tooltip = {
				text = BARBARMYCD
				OR = {
					NOT = { has_character_flag = spawned_rogue_raiders }
					had_character_flag = {
						flag = spawned_rogue_raiders
						years = 1
					}
				}
			}
			custom_tooltip = {
				text = BARBHASARMY
				NOT = {
					has_earmarked_regiments = rogue_raiders
				}
			}
		}
		effect = {
			wealth = -70
			prestige = -150
			capital_scope = {
				if = {
					limit = {
						ROOT = {
							is_allowed_to_loot = yes
						}
					}
					ROOT = {
						trigger_switch = {
							on_trigger = trait
							rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 350 350 }
										archers = { 100 100 }
										mob_troops = { 400 400 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = yes
								}
							}
							trained_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 400 400 }
										archers = { 120 120 }
										mob_troops = { 500 500 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = yes
								}
							}
							journeyman_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 500 500 }
										archers = { 140 140 }
										mob_troops = { 600 600 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = yes
								}
							}
							expert_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 700 700 }
										archers = { 180 180 }
										mob_troops = { 700 700 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = yes
								}
							}
							master_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 900 900 }
										archers = { 250 250 }
										mob_troops = { 800 800 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = yes
								}
							}
							renowned_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 1100 1100 }
										archers = { 300 300 }
										mob_troops = { 900 900 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = yes
								}
							}
							legendary_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 1300 1300 }
										archers = { 350 350 }
										mob_troops = { 1000 1000 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = yes
								}
							}
						}
					}
				}
				else_if = {
					limit = {
						ROOT = { is_allowed_to_loot = no }
					}
					ROOT = {
						trigger_switch = {
							on_trigger = trait
							rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 350 350 }
										archers = { 100 100 }
										mob_troops = { 400 400 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = no
								}
							}
							trained_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 400 400 }
										archers = { 120 120 }
										mob_troops = { 500 500 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = no
								}
							}
							journeyman_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 500 500 }
										archers = { 140 140 }
										mob_troops = { 600 600 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = no
								}
							}
							expert_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 700 700 }
										archers = { 180 180 }
										mob_troops = { 700 700 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = no
								}
							}
							master_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 900 900 }
										archers = { 250 250 }
										mob_troops = { 800 800 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = no
								}
							}
							renowned_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 1100 1100 }
										archers = { 300 300 }
										mob_troops = { 900 900 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = no
								}
							}
							legendary_rogue = {
								spawn_unit = {
									province = PREV
									owner = ROOT
									earmark = rogue_raiders
									troops = {
										light_infantry = { 1300 1300 }
										archers = { 350 350 }
										mob_troops = { 1000 1000 }
									}
									cannot_inherit = yes
									maintenance_multiplier = 0.75
									reinforces = no
									can_toggle_looting = no
									is_looter = no
								}
							}
						}
					}
				}
			}
		}
	}

	increase_alertness = {
		ai_check_interval = 120
		potential = {
			z_shadow = yes
			not_casting = yes
		}
		allow = {
			piety = 35
			prestige = 35
			custom_tooltip = {
				text = ALERTCD
				OR = {
					NOT = { has_character_flag = alertness }
					had_character_flag = {
						flag = alertness
						years = 7
					}
				}
			}
		}
		effect = {
			clr_character_flag = alertness
			set_character_flag = alertness
			piety = -35
			prestige = -35
			add_character_modifier = {
				name = shadow_alertness
				years = 5
			}
			random = {
				chance = 20
				add_trait = stressed
			}
			random = {
				chance = 2
				if = {
					limit = {
						trait = trusting
					}
					remove_trait = trusting
				}
				else = {
					add_trait = paranoid
				}
			}
		}
		ai_will_do = {
			factor = 0.4
			mult_modifier = {
				factor = 0.5
				trait = trusting
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 2
				trait = paranoid
			}
			mult_modifier = {
				factor = 1.5
				trait = diligent
			}
		}
	}

	launder_cash = {
		ai_check_interval = 72
		only_playable = yes
		potential = {
			z_shadow = yes
			not_casting = yes
		}
		allow = {
			prestige = 100
			custom_tooltip = {
				text = LAUNDERCD
				OR = {
					NOT = { has_character_flag = laundered_cash }
					had_character_flag = {
						flag = laundered_cash
						years = 5
					}
				}
			}
		}
		effect = {
			clr_character_flag = laundered_cash
			set_character_flag = laundered_cash
			prestige = -100
			if = {
				limit = {
					trait = shadow
				}
				wealth = 35
			}
			else_if = {
				limit = {
					trait = trained_shadow
				}
				wealth = 45
			}
			else_if = {
				limit = {
					trait = journeyman_shadow
				}
				wealth = 70
			}
			else_if = {
				limit = {
					trait = expert_shadow
				}
				wealth = 85
			}
			else_if = {
				limit = {
					trait = master_shadow
				}
				wealth = 100
			}
			else_if = {
				limit = {
					trait = renowned_shadow
				}
				wealth = 125
			}
			else_if = {
				limit = {
					trait = legendary_shadow
				}
				wealth = 150
			}
			random = {
				chance = 50
				mult_modifier = {
					factor = 0
					NOT = { trait = just }
				}
				remove_trait = just
			}
			random = {
				chance = 100
				mult_modifier = { # these are meant to stack!
					factor = 0.7
					intrigue = 5
				}
				mult_modifier = {
					factor = 0.7
					intrigue = 8
				}
				mult_modifier = {
					factor = 0.6
					intrigue = 10
				}
				mult_modifier = {
					factor = 0.6
					intrigue = 13
				}
				mult_modifier = {
					factor = 0.6
					intrigue = 15
				}
				mult_modifier = {
					factor = 0.4
					intrigue = 20
				}
				add_character_modifier = {
					name = corrupt_ruler
					years = 10
					stacking = yes
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			mult_modifier = {
				factor = 3
				trait = greedy
			}
			mult_modifier = {
				factor = 1.5
				trait = arbitrary
			}
		}
	}

	spell_heal_cleric_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				z_cleric = yes
				z_paladin = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_lesser_restoration_cleric_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				z_cleric = yes
				z_paladin = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_restoration_prov_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				z_cleric = yes
				z_paladin = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_greater_restoration_cleric_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				z_cleric = yes
				z_paladin = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_regenerate_cleric_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				z_cleric = yes
				z_bard = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_conjure_natural_allies = {
		only_playable = yes
		ai_check_interval = 6
		potential = {
			OR = {
				z_druid = yes
				trigger_if = {
					limit = { z_warlock = yes }

					trait = warlock_fey
				}
			}
			trigger_if = {
				limit = { ai = no }
				
				has_character_flag = rituals_open
			}
		}
		allow = {
			wild_magic_recovery = yes
			war = yes
			custom_tooltip = {
				text = SUMMONEDCD
				hidden_tooltip = {
					NOT = { has_character_flag = druid_summoned_nat_allies }
				}
			}
			OR = {
				AND = {
					OR = {
						trait = druid
						trait = warlock
					}
					wealth = 200
				}
				AND = {
					OR = {
						trait = trained_druid
						trait = trained_warlock
					}
					wealth = 150
				}
				AND = {
					OR = {
						trait = journeyman_druid
						trait = journeyman_warlock
					}
					wealth = 125
				}
				AND = {
					OR = {
						trait = expert_druid
						trait = expert_warlock
					}
					wealth = 100
				}
				AND = {
					OR = {
						trait = master_druid
						trait = master_warlock
					}
					wealth = 75
				}
				AND = {
					OR = {
						trait = renowned_druid
						trait = renowned_warlock
					}
					wealth = 55
				}
				AND = {
					OR = {
						trait = legendary_druid
						trait = legendary_warlock
					}
					wealth = 35
				}
			}
		}
		effect = {
			wild_magic_surge_effect = yes
			trigger_switch = {
				on_trigger = trait
				legendary_druid = {
					wealth = -35
				}
				legendary_warlock = {
					wealth = -35
				}
				renowned_druid = {
					wealth = -55
				}
				renowned_warlock = {
					wealth = -55
				}
				master_druid = {
					wealth = -75
				}
				master_warlock = {
					wealth = -75
				}
				expert_druid = {
					wealth = -100
				}
				expert_warlock = {
					wealth = -100
				}
				journeyman_druid = {
					wealth = -125
				}
				journeyman_warlock = {
					wealth = -125
				}
				trained_druid = {
					wealth = -150
				}
				trained_warlock = {
					wealth = -150
				}
				druid = {
					wealth = -200
				}
				warlock = {
					wealth = -200
				}
			}
			if = {
				limit = {
					wild_magic_recovery = yes
				}
				add_character_modifier = {
					name = summoned_cooldown
					years = 2
				}
				character_event = { id = druidinit.3 }
			}
		}
		ai_will_do = {
			factor = 0.75
		}
	}

	spell_heal_druid_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				z_druid = yes
				z_ranger = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_lesser_restoration_druid_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			OR = {
				z_druid = yes
				z_ranger = yes
			}
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_restoration_prov_druid_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			z_druid = yes
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_greater_restoration_druid_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			z_druid = yes
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	spell_regenerate_druid_fake = { # This is basically a reminder that you have this spell and who you can use it on
		ai = no
		ai_check_interval = 6000
		potential = {
			z_druid = yes
			NOT = { not_casting = yes }
			has_character_flag = rituals_open
		}

		allow = {
			always = no
		}

		effect = {
			break = yes # doesn't matter
		}

		ai_will_do = {
			factor = 0 # Just to be sure
		}
	}

	engage_in_training = {
		only_playable = yes
		ai_check_interval = 72
		potential = {
			OR = {
				z_fighter = yes
				AND = {
					is_allowed_to_loot = no
					z_barbarian = yes
				}
			}
			not_casting = yes
		}
		allow = {
			custom_tooltip = {
				text = FIGHTABILITYNOCD
				hidden_tooltip = {
					OR = {
						NOT = { has_character_flag = fighttrain }
						had_character_flag = {
							flag = fighttrain
							years = 5
						}
					}
				}
			}
			NOT = { has_severe_disability_trigger = yes }
			NOT = { is_sick_or_injured_trigger = yes }
		}
		effect = {
			hidden_tooltip = {
				set_character_flag = fighttrain
				random_list = {
					1 = { # increase non congenital strength
						modifier = {
							factor = 0

							is_strong_non_congenital_trait_upgradeable_trigger = no
						}
						character_event = { id = fighterevt.1 }
					}
					1 = { # Gain Sturdy
						mult_modifier = {
							factor = 0
							OR = {
								is_strong_non_congenital_trait_upgradeable_trigger = yes
								trait = sturdy
							}
						}
						character_event = { id = fighterevt.2 }
					}
					1 = { # Lose Fat
						mult_modifier = {
							factor = 0
							NOT = { trait = is_fat }
						}
						character_event = { id = fighterevt.4 }
					}
					1 = { # Temp +5 Combat
						character_event = { id = fighterevt.5 }
					}
					1 = { # Temp +1 Martial
						character_event = { id = fighterevt.6 }
					}
					1 = { # Temp +10 Combat
						character_event = { id = fighterevt.7 }
					}
					1 = { # Temp +1 Health
						character_event = { id = fighterevt.8 }
					}
					1 = { # Temp +2 Health
						character_event = { id = fighterevt.9 }
					}
					1 = { # Lose -5 Combat (small injury)
						character_event = { id = fighterevt.10 }
					}
					1 = { # Lose Stressed
						mult_modifier = {
							factor = 0
							NOT = { trait = stressed }
						}
						character_event = { id = fighterevt.11 }
					}
					1 = { # Gain Wounded (big injury)
						mult_modifier = {
							factor = 0
							has_injury_trigger = yes
						}
						character_event = { id = fighterevt.12 }
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 1.5
				trait = diligent
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
		}
	}

	organize_levy_reminder = {
		ai = no
		potential = {
			z_fighter = yes
			not_casting = yes
		}

		allow = {
			custom_tooltip = {
				text = THISISSETTLEMENT
				always = no
			}
		}
		effect = {
			custom_tooltip = {
				text = THISISSETTLEMENT
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	pick_wiz_spec = {
		is_high_prio = yes
		ai = no
		potential = {
			z_wizard = yes
			NOT = { has_wiz_spec = yes }
			not_casting = yes
		}
		allow = {
			always = yes
		}
		effect = {
			character_event = { id = wizinit.3 }
		}
		ai_will_do = {
			factor = 1
		}
	}

}

targeted_decisions = {

	ritual_charm_person = { # This will be a player-only spell because the AI can't really deal with the strategy
		filter = realm
		ai_target_filter = none # So the AI will never see this
		ai = no
		ai_check_interval = 6000

		from_potential = {
			OR = {
				AND = {
					trait = warlock_fey
					z_warlock = yes
				}
				AND = {
					trait = warlock_old_one
					z_warlock = yes
				}
				AND = {
					trait = warlock_fiend
					z_warlock = yes
				}
				AND = {
					trait = warlock_elemental
					z_warlock = yes
				}
				AND = {
					trait = wiz_enchantment
					z_wizard = yes
				}
				z_bard = yes
			}
			ai = no
		}

		potential = {
			ai = yes
		}

		allow = {
			FROM = { wild_magic_recovery = yes }
			NOR = {
				mind_control_immune_trigger = yes
				has_opinion_modifier = {
					who = FROM
					name = charm_person_spell
				}
				has_opinion_modifier = {
					who = FROM
					name = charm_person_spell_after
				}
			}
			FROM = {
				NOT = { is_foe = ROOT }
				OR = {
					custom_tooltip = {
						text = notbard
						OR = {
							z_bard = no
							AND = {
								z_bard = yes
								z_warlock = yes
							}
						}
					}
					custom_tooltip = {
						text = bardhasinstrument
						z_bard = yes
						any_artifact = {
							has_artifact_flag = instrument
						}
					}
				}
				OR = {
					AND = {
						custom_tooltip = {
							text = BASECASTER
							OR = {
								trait = wizard
								trait = warlock
								trait = bard
							}
						}
						wealth = 40
					}
					AND = {
						custom_tooltip = {
							text = TRAINEDCASTER
							OR = {
								trait = trained_wizard
								trait = trained_warlock
								trait = trained_bard
							}
						}
						wealth = 35
					}
					AND = {
						custom_tooltip = {
							text = JOURNCASTER
							OR = {
								trait = journeyman_wizard
								trait = journeyman_warlock
								trait = journeyman_bard
							}
						}
						wealth = 30
					}
					AND = {
						custom_tooltip = {
							text = EXPCASTER
							OR = {
								trait = expert_wizard
								trait = expert_warlock
								trait = expert_bard
							}
						}
						wealth = 25
					}
					AND = {
						custom_tooltip = {
							text = MASTCASTER
							OR = {
								trait = master_wizard
								trait = master_warlock
								trait = master_bard
							}
						}
						wealth = 20
					}
					AND = {
						custom_tooltip = {
							text = RENOWNCASTER
							OR = {
								trait = renowned_wizard
								trait = renowned_warlock
								trait = renowned_bard
							}
						}
						wealth = 15
					}
					AND = {
						custom_tooltip = {
							text = LEGENDCASTER
							OR = {
								trait = legendary_wizard
								trait = legendary_warlock
								trait = legendary_bard
							}
						}
						wealth = 10
					}
				}
			}
		}

		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = {
				trigger_switch = {
					on_trigger = trait
					legendary_wizard = {
						wealth = -10
					}
					legendary_warlock = {
						wealth = -10
					}
					legendary_bard = {
						wealth = -10
					}
					renowned_wizard = {
						wealth = -15
					}
					renowned_warlock = {
						wealth = -15
					}
					renowned_bard = {
						wealth = -15
					}
					master_wizard = {
						wealth = -20
					}
					master_warlock = {
						wealth = -20
					}
					master_bard = {
						wealth = -20
					}
					expert_wizard = {
						wealth = -25
					}
					expert_warlock = {
						wealth = -25
					}
					expert_bard = {
						wealth = -25
					}
					journeyman_wizard = {
						wealth = -30
					}
					journeyman_warlock = {
						wealth = -30
					}
					journeyman_bard = {
						wealth = -30
					}
					trained_wizard = {
						wealth = -35
					}
					trained_warlock = {
						wealth = -35
					}
					trained_bard = {
						wealth = -35
					}
					wizard = {
						wealth = -40
					}
					warlock = {
						wealth = -40
					}
					bard = {
						wealth = -40
					}
				}
			}
			
			FROM = {
				show_scope_change = no
				ROOT = {
					show_scope_change = no
					charm_resistance_check_against_PREV = yes
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				opinion = {
					modifier = charm_person_spell
					who = FROM
					years = 1
				}
				repeat_event = { id = spellaux.2 days = 90 }
			}
		}
	}

	ritual_dominate_person = {
		only_playable = yes
		ai_check_interval = 36
		filter = realm
		ai_target_filter = sub_realm

		from_potential = {
			OR = {
				z_bard = yes
				trigger_if = {
					limit = { z_warlock = yes }

					OR = {
						trait = warlock_fey
						trait = warlock_old_one
					}
				}
				trigger_if = {
					limit = { z_wizard = yes }

					trait = wiz_enchantment
				}
			}
			is_landed = yes
			is_inaccessible_or_incapable_trigger = no
		}
		potential = {
			ai = yes
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			NOR = {
				mind_control_immune_trigger = yes
				has_opinion_modifier = {
					who = FROM
					modifier = mind_control
				}
			}
			FROM = {
				OR = {
					custom_tooltip = {
						text = notbard
						OR = {
							z_bard = no
							AND = {
								z_bard = yes
								OR = {
									z_wizard = yes
									z_warlock = yes
								}
							}
						}
					}
					custom_tooltip = {
						text = bardhasinstrument
						z_bard = yes
						any_artifact = {
							has_artifact_flag = instrument
						}
					}
				}
				OR = {
					AND = {
						custom_tooltip = {
							text = JOURNCASTER
							OR = {
								trait = journeyman_wizard
								trait = journeyman_warlock
								trait = journeyman_bard
							}
						}
						wealth = 110
					}
					AND = {
						custom_tooltip = {
							text = EXPCASTER
							OR = {
								trait = expert_wizard
								trait = expert_warlock
								trait = expert_bard
							}
						}
						wealth = 90
					}
					AND = {
						custom_tooltip = {
							text = MASTCASTER
							OR = {
								trait = master_wizard
								trait = master_warlock
								trait = master_bard
							}
						}
						wealth = 70
					}
					AND = {
						custom_tooltip = {
							text = RENOWNCASTER
							OR = {
								trait = renowned_wizard
								trait = renowned_warlock
								trait = renowned_bard
							}
						}
						wealth = 50
					}
					AND = {
						custom_tooltip = {
							text = LEGENDCASTER
							OR = {
								trait = legendary_wizard
								trait = legendary_warlock
								trait = legendary_bard
							}
						}
						wealth = 30
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_dominate_person_cooldown }
							had_character_flag = { flag = spell_dominate_person_cooldown years = 4 }
						}
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = {
				trigger_switch = {
					on_trigger = trait
					legendary_wizard = {
						wealth = -30
					}
					legendary_warlock = {
						wealth = -30
					}
					legendary_bard = {
						wealth = -30
					}
					renowned_wizard = {
						wealth = -50
					}
					renowned_warlock = {
						wealth = -50
					}
					renowned_bard = {
						wealth = -50
					}
					master_wizard = {
						wealth = -70
					}
					master_warlock = {
						wealth = -70
					}
					master_bard = {
						wealth = -70
					}
					expert_wizard = {
						wealth = -90
					}
					expert_warlock = {
						wealth = -90
					}
					expert_bard = {
						wealth = -90
					}
					journeyman_wizard = {
						wealth = -110
					}
					journeyman_warlock = {
						wealth = -110
					}
					journeyman_bard = {
						wealth = -110
					}
				}
			}
			FROM = {
				show_scope_change = no
				ROOT = {
					show_scope_change = no
					dominate_resistance_check_against_PREV = yes
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				opinion = {
					modifier = mind_control who = FROM years = 2
				}
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 0.1
				FROM = { trait = kind }
			}
			mult_modifier = {
				factor = 0
				OR = {
					is_friend = FROM
					opinion = { who = FROM value >= 50 }
					AND = {
						host = { NOT = { character = FROM } }
						liege = { NOT = { character = FROM } }
					}
				}
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			mult_modifier = {
				factor = 2
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
					}
				}
			}
			mult_modifier = {
				factor = 0.5
				opinion = { who = FROM value >= 25 }
			}
			mult_modifier = {
				factor = 2
				opinion = { who = FROM value <= 0 }
			}
		}
	}

	heal_mind = {
		ai = no
		ai_check_interval = 6000
		filter = realm_including_me
		ai_target_filter = none

		from_potential = {
			z_psion = yes
		}
		potential = {
			OR = {
				trait = stressed
				trait = lunatic
				trait = depressed
				trait = drunkard
			}
		}
		allow = {
			FROM = {
				z_psion = yes
				NOT = { trait = stressed }
				custom_tooltip = {
					text = EXPERTPSIHIGHER
					hidden_tooltip = {
						OR = {
							trait = expert_psion
							trait = master_psion
							trait = renowned_psion
							trait = legendary_psion
						}
					}
				}
			}
		}
		effect = {
			FROM = {
				custom_tooltip = {
					text = heavypsi_tt
					big_psi_stress = yes
				}
			}
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { character = FROM }
					}
					opinion = {
						modifier = cured_me
						who = FROM
						years = 5
					}
					if = {
						limit = {
							ai = no
						}
						repeat_event = { id = spellaux.45 }
					}
				}
				else_if = {
					limit = {
						ai = no
						character = FROM
					}
					character_event = { id = spellaux.46 }
				}
			}
			custom_tooltip = {
				text = ALLMENTALBADCURED
				hidden_tooltip = {
					remove_trait = stressed
					remove_trait = drunkard
					remove_trait = depressed
					remove_trait = lunatic
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 100
				character = ROOT
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 10
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = envious
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}

		}
	}

	spell_forget_past_sorc = { # This will be a player-only spell because the AI can't really deal with the strategy
		filter = realm
		ai_target_filter = none # So the AI will never see this
		ai = no #was only_playable
		ai_check_interval = 6000

		from_potential = {
			OR = {
				AND = {
					z_sorcerer = yes
					OR = {
						trait = origin_aberrant_mind
						race_has_aberrant_magic = yes
					}
				}
				z_psion = yes
			}
			ai = no
		}

		potential = {
			OR = {
				is_ruler = yes
				same_realm = FROM
			}
			ai = yes
		}

		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				OR = {
					AND = {
						z_sorcerer = yes
						custom_tooltip = {
							text = JOURNEYMANSORCHIGHER
							hidden_tooltip = {
								OR = {
									trait = journeyman_sorcerer
									trait = expert_sorcerer
									trait = master_sorcerer
									trait = renowned_sorcerer
									trait = legendary_sorcerer
								}
							}
						}
						custom_tooltip = {
							text = HAS15SPELLPOINTS
							hidden_tooltip = {
								check_variable = { which = sorcspellpoints value = 15 }
							}
						}
					}
					AND = {
						z_psion = yes
						custom_tooltip = {
							text = JOURNEYMANPSIHIGHER
							hidden_tooltip = {
								OR = {
									trait = journeyman_psion
									trait = expert_psion
									trait = master_psion
									trait = renowned_psion
									trait = legendary_psion
								}
							}
						}
						NOT = { trait = stressed }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_forget_past_cooldown }
							had_character_flag = { flag = spell_forget_past_cooldown years = 1 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}

		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_forget_past_cooldown }
			FROM = {
				if = {
					limit = {
						z_sorcerer = yes
					}
					hidden_tooltip = { change_variable = { which = sorcspellpoints value = -15 } }
				}
				else_if = {
					limit = {
						z_psion = yes
					}
					custom_tooltip = {
						text = heavypsi_tt
						big_psi_stress = yes
					}
				}
			}
			FROM = {
				show_scope_change = no
				ROOT = {
					show_scope_change = no
					spell_resistance_check_against_PREV = yes
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				custom_tooltip = {
					text = REMOVEOPINIONS
					hidden_tooltip = {
						remove_friend = FROM
						remove_lover = FROM
						remove_rival = FROM
						remove_all_opinions_to_from = yes
					}
				}
			}
		}
	}

	spell_charm_person_sorc = { # This will be a player-only spell because the AI can't really deal with the strategy
		filter = realm
		ai_target_filter = none # So the AI will never see this
		ai = no #was only_playable = yes
		ai_check_interval = 6000

		from_potential = {
			OR = {
				AND = {
					z_sorcerer = yes
					OR = {
						trait = origin_shadow
						trait = origin_aberrant_mind
						race_has_shadow_magic = yes
						race_has_aberrant_magic = yes
					}
				}
				z_psion = yes
			}
			ai = no
		}

		potential = {
			ai = yes
		}

		allow = {
			FROM = { wild_magic_recovery = yes }
			NOR = {
				mind_control_immune_trigger = yes
				has_opinion_modifier = {
					who = FROM
					name = charm_person_spell
				}
				has_opinion_modifier = {
					who = FROM
					name = charm_person_spell_after
				}
			}
			FROM = {
				OR = {
					AND = {
						z_sorcerer = yes
						custom_tooltip = {
							text = HAS5SPELLPOINTS
							hidden_tooltip = {
								check_variable = { which = sorcspellpoints value = 5 }
							}
						}
					}
					AND = {
						z_psion = yes
						NOT = { trait = stressed }
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_charm_person_cooldown }
							had_character_flag = { flag = spell_charm_person_cooldown years = 3 }
						}
					}
				}
				NOT = { is_foe = ROOT }
				NOT = { has_character_modifier = burn_path_mod }
			}
		}

		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_charm_person_cooldown }
			FROM = {
				if = {
					limit = {
						z_sorcerer = yes
					}
					hidden_tooltip = { change_variable = { which = sorcspellpoints value = -5 } }
					hidden_tooltip = {
						if = {
							limit = {
								trait = origin_wild_magic
							}
							random = {
								chance = 5
								character_event = { id = spellaux.4 }
								break = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						z_psion = yes
					}
					custom_tooltip = {
						text = mediumpsi_tt
						med_psi_stress = yes
					}
				}
			}
			FROM = {
				show_scope_change = no
				ROOT = {
					show_scope_change = no
					charm_resistance_check_against_PREV = yes
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				opinion = {
					modifier = charm_person_spell
					who = FROM
					years = 1
				}
				repeat_event = { id = spellaux.2 days = 90 }
			}
		}
	}

	dominate_person_sorc = {
		only_playable = yes
		ai_check_interval = 36
		filter = realm
		ai_target_filter = sub_realm

		from_potential = {
			z_sorcerer = yes

			trigger_if = {
				limit = { ai = yes }
				
				OR = {
					NOT = { has_character_flag = spell_dominate_person_cooldown }
					had_character_flag = { flag = spell_dominate_person_cooldown years = 4 }
				}
			}

			OR = {
				trait = origin_aberrant_mind
				race_has_aberrant_magic = yes
			}
			
			is_landed = yes
			is_inaccessible_or_incapable_trigger = no
		}
		potential = {
			ai = yes
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			NOR = {
				mind_control_immune_trigger = yes
				has_opinion_modifier = {
					who = FROM
					modifier = mind_control
				}
			}
			FROM = {
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = MASTERSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_dominate_person_cooldown }
							had_character_flag = { flag = spell_dominate_person_cooldown years = 4 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_dominate_person_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -20 } } }
			hidden_tooltip = {
				FROM = {
					if = {
						limit = {
							trait = origin_wild_magic
						}
						random = {
							chance = 5
							character_event = { id = spellaux.4 }
							break = yes
						}
					}
				}
			}
			FROM = {
				show_scope_change = no
				ROOT = {
					show_scope_change = no
					dominate_resistance_check_against_PREV = yes
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				opinion = {
					modifier = mind_control who = FROM years = 2
				}
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 0.1
				FROM = { trait = kind }
			}
			mult_modifier = {
				factor = 0
				OR = {
					is_friend = FROM
					opinion = { who = FROM value >= 50 }
					AND = {
						host = { NOT = { character = FROM } }
						liege = { NOT = { character = FROM } }
					}
				}
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			mult_modifier = {
				factor = 2
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
					}
				}
			}
			mult_modifier = {
				factor = 0.5
				opinion = { who = FROM value >= 25 }
			}
			mult_modifier = {
				factor = 2
				opinion = { who = FROM value <= 0 }
			}
		}
	}

	spell_lesser_restoration_sorc = {
		ai_check_interval = 24
		filter = all_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_divine_soul
				race_has_divine_magic = yes
			}
		}
		potential = {
			OR = {
				is_ill = yes
				trait = lovers_pox
			}
			NOR = { #if it's this bad they need greater restoration
				trait = incapable
				trait = sick_incapable
			}
			is_within_diplo_range = FROM
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				custom_tooltip = {
					text = HAS10SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 10 }
					}
				}
				custom_tooltip = {
					text = JOURNEYMANSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = journeyman_sorcerer
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_remove_disease_cooldown }
							had_character_flag = { flag = spell_remove_disease_cooldown months = 6 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_remove_disease_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -10 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				magic_restoration_effect = yes
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 100
				character = ROOT
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 10
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = envious
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			mult_modifier = {
				factor = 0.01
				trait = patron_talona
			}
		}
	}

	spell_greater_restoration_sorc = {
		ai_check_interval = 24
		filter = realm_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_divine_soul
				race_has_divine_magic = yes
			}
		}
		potential = {
			OR = {
				is_ill = yes
				trait = possessed
				trait = lovers_pox
			}
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				custom_tooltip = {
					text = HAS15SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 15 }
					}
				}
				custom_tooltip = {
					text = MASTERSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_remove_disease_cooldown }
							had_character_flag = { flag = spell_remove_disease_cooldown years = 1 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_remove_disease_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -10 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				custom_tooltip = {
					text = ALLDISEASECURED
					hidden_tooltip = {
						remove_trait = possessed
						#Greater restoration clears every disease
						BR_remove_any_disease = yes
						#lastly remove incapable
						remove_trait = incapable
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 100
				character = ROOT
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 10
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = envious
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			mult_modifier = {
				factor = 0.01
				trait = patron_talona
			}
		}
	}

	spell_heal_sorc = {
		ai = no
		ai_check_interval = 6000
		filter = realm_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			OR = {
				AND = {
					z_sorcerer = yes
					OR = {
						trait = origin_divine_soul
						race_has_divine_magic = yes
					}
				}
				z_psion = yes
			}
		}
		potential = {
			OR = {
				trait = wounded
				trait = severely_injured
				trait = mangled
			}
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				OR = {
					AND = {
						custom_tooltip = {
							text = HAS15SPELLPOINTS
							hidden_tooltip = {
								check_variable = { which = sorcspellpoints value = 15 }
							}
						}
						custom_tooltip = {
							text = EXPERTSORCHIGHER
							hidden_tooltip = {
								OR = {
									trait = expert_sorcerer
									trait = master_sorcerer
									trait = renowned_sorcerer
									trait = legendary_sorcerer
								}
							}
						}
					}
					AND = {
						z_psion = yes
						NOT = { trait = stressed }
						custom_tooltip = {
							text = EXPERTPSIHIGHER
							hidden_tooltip = {
								OR = {
									trait = expert_psion
									trait = master_psion
									trait = renowned_psion
									trait = legendary_psion
								}
							}
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_healing_cooldown }
							had_character_flag = { flag = spell_healing_cooldown months = 6 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_healing_cooldown }
			FROM = {
				if = {
					limit = {
						z_sorcerer = yes
					}
					hidden_tooltip = { change_variable = { which = sorcspellpoints value = -15 } }
				}
				else_if = {
					limit = {
						z_psion = yes
					}
					custom_tooltip = {
						text = mediumpsi_tt
						med_psi_stress = yes
					}
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				custom_tooltip = {
					text = ALLINJURIESCURED
					hidden_tooltip = {
						remove_trait = wounded
						remove_trait = mangled
						remove_trait = severely_injured
						remove_character_modifier = badly_bruised
						remove_character_modifier = black_eye
						remove_character_modifier = swollen_ankle
						remove_character_modifier = swollen_wrist
						remove_character_modifier = sore_muscles
						remove_character_modifier = cracked_ribs
						remove_character_modifier = concussion
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 100
				character = ROOT
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 10
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = envious
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}

		}
	}

	spell_regenerate_sorc = {
		ai = no
		ai_check_interval = 24
		filter = all_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_divine_soul
				race_has_divine_magic = yes
			}
		}
		potential = {
			OR = {
				trait = wounded
				trait = mangled
				trait = severely_injured
				trait = disfigured
				trait = one_eyed
				trait = one_handed
				trait = one_legged
				trait = grounded
				trait = blinded
			}
			is_within_diplo_range = FROM
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				custom_tooltip = {
					text = HAS30SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 30 }
					}
				}
				custom_tooltip = {
					text = RENOWNEDSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_healing_cooldown }
							had_character_flag = { flag = spell_healing_cooldown years = 1 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_healing_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -30 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				custom_tooltip = {
					text = ALLREGENERATED
					hidden_tooltip = {
						remove_trait = wounded
						remove_trait = mangled
						remove_trait = severely_injured
						remove_trait = disfigured
						remove_trait = one_legged
						remove_trait = one_handed
						remove_trait = grounded
						remove_trait = eunuch
						remove_character_modifier = phantom_pain
						remove_character_modifier = badly_bruised
						remove_character_modifier = black_eye
						remove_character_modifier = swollen_ankle
						remove_character_modifier = swollen_wrist
						remove_character_modifier = sore_muscles
						remove_character_modifier = cracked_ribs
						remove_character_modifier = concussion
						if = {
							limit = {
								trait = creature_beholder
								OR = {
									z_wizard = yes
									z_bard = yes
									z_warlock = yes
								}
							}
							remove_trait = blinded
							add_trait = one_eyed
						}
						else = {
							remove_trait = one_eyed
							remove_trait = blinded
						}
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 100
				character = ROOT
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 10
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = envious
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}
		}
	}

	mind_control_dec = {
		only_playable = yes
		ai_check_interval = 24
		filter = sub_realm
		ai_target_filter = sub_realm

		from_potential = {
			OR = {
				race_is_illithid = yes
				trait = creature_yikarian
				AND = {
					z_psion = yes
					OR = {
						ai = yes
						has_character_flag = psi_spellbook_open
					}
				}
			}
			is_landed = yes
			is_inaccessible_or_incapable_trigger = no
		}
		potential = {
			is_adult = yes
			ai = yes
			is_incapable = no
			OR = {
				host = { character = FROM }
				liege = { character = FROM }
			}
			NOR = {
				race_is_illithid = yes
				trait = creature_yikarian
				z_psion = yes
			}
			NOT = { character = FROM }
		}
		allow = {
			FROM = {
				OR = {
					AND = {
						piety = 350
						OR = {
							race_is_illithid = yes
							trait = creature_yikarian
						}
					}
					trait = expert_psion
					trait = master_psion
					trait = renowned_psion
					trait = legendary_psion
				}
			}
			NOT = {
				has_opinion_modifier = { who = FROM modifier = mind_control }
			}
		}
		effect = {
			FROM = {
				if = {
					limit = {
						OR = {
							trait = expert_psion
							trait = master_psion
							trait = renowned_psion
							trait = legendary_psion
						}
					}
					custom_tooltip = {
						text = heavypsi_tt
						big_psi_stress = yes
					}
				}
				else = {
					piety = -350
				}
			}
			opinion = {
				modifier = mind_control who = FROM years = 7 # Need to balance
			}
		}
		ai_will_do = {
			factor = 0.25
			mult_modifier = {
				factor = 0.1
				ROOT = { is_landed = no }
			}
			mult_modifier = {
				factor = 2
				ROOT = { opinion = { who = FROM value < 20 } }
			}
			mult_modifier = {
				factor = 1.5
				olrox_is_good_religion_trigger = no
			}
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			mult_modifier = {
				factor = 0.3
				olrox_is_good_religion_trigger = yes
			}
		}
	}

	spell_heal = {
		ai_check_interval = 24
		filter = realm_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			OR = {
				z_cleric = yes
				z_druid = yes
				z_ranger = yes
				z_paladin = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
		}
		potential = {
			OR = {
				trait = wounded
				trait = mangled
				trait = severely_injured
			}
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				OR = {
					custom_tooltip = {
						text = notbard
						OR = {
							z_bard = no
							AND = {
								z_bard = yes
								OR = {
									z_cleric = yes
									z_druid = yes
									z_ranger = yes
									z_paladin = yes
									z_warlock = yes
								}
							}
						}
					}
					custom_tooltip = {
						text = bardhasinstrument
						z_bard = yes
						any_artifact = {
							has_artifact_flag = instrument
						}
					}
				}
				OR = {
					AND = {
						custom_tooltip = {
							text = BASECASTER
							OR = {
								trait = druid
								trait = cleric
								trait = warlock
								trait = bard
								trait = journeyman_ranger
								trait = journeyman_paladin
							}
						}
						wealth = 80
					}
					AND = {
						custom_tooltip = {
							text = TRAINEDCASTER
							OR = {
								trait = trained_druid
								trait = trained_cleric
								trait = trained_warlock
								trait = trained_bard
								trait = expert_ranger
								trait = expert_paladin
							}
						}
						wealth = 70
					}
					AND = {
						custom_tooltip = {
							text = JOURNCASTER
							OR = {
								trait = journeyman_druid
								trait = journeyman_cleric
								trait = journeyman_warlock
								trait = journeyman_bard
								trait = master_ranger
								trait = master_paladin
							}
						}
						wealth = 60
					}
					AND = {
						custom_tooltip = {
							text = EXPCASTER
							OR = {
								trait = expert_druid
								trait = expert_cleric
								trait = expert_warlock
								trait = expert_bard
								trait = renowned_ranger
								trait = renowned_paladin
							}
						}
						wealth = 50
					}
					AND = {
						custom_tooltip = {
							text = MASTCASTER
							OR = {
								trait = master_druid
								trait = master_cleric
								trait = master_warlock
								trait = master_bard
								trait = legendary_ranger
								trait = legendary_paladin
							}
						}
						wealth = 40
					}
					AND = {
						custom_tooltip = {
							text = RENOWNCASTER
							OR = {
								trait = renowned_druid
								trait = renowned_cleric
								trait = renowned_warlock
								trait = renowned_bard
							}
						}
						wealth = 30
					}
					AND = {
						custom_tooltip = {
							text = LEGENDCASTER
							OR = {
								trait = legendary_druid
								trait = legendary_cleric
								trait = legendary_warlock
								trait = legendary_bard
							}
						}
						wealth = 20
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_healing_cooldown }
							had_character_flag = { flag = spell_healing_cooldown months = 6 }
						}
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = {
				set_character_flag = spell_healing_cooldown
				trigger_switch = {
					on_trigger = trait
					legendary_druid = {
						wealth = -20
					}
					legendary_cleric = {
						wealth = -20
					}
					legendary_warlock = {
						wealth = -20
					}
					legendary_bard = {
						wealth = -20
					}
					renowned_druid = {
						wealth = -30
					}
					renowned_cleric = {
						wealth = -30
					}
					renowned_warlock = {
						wealth = -30
					}
					renowned_bard = {
						wealth = -30
					}
					master_druid = {
						wealth = -40
					}
					master_cleric = {
						wealth = -40
					}
					master_warlock = {
						wealth = -40
					}
					master_bard = {
						wealth = -40
					}
					legendary_ranger = {
						wealth = -40
					}
					legendary_paladin = {
						wealth = -40
					}
					expert_druid = {
						wealth = -50
					}
					expert_cleric = {
						wealth = -50
					}
					expert_warlock = {
						wealth = -50
					}
					expert_bard = {
						wealth = -50
					}
					renowned_ranger = {
						wealth = -50
					}
					renowned_paladin = {
						wealth = -50
					}
					journeyman_druid = {
						wealth = -60
					}
					journeyman_cleric = {
						wealth = -60
					}
					journeyman_warlock = {
						wealth = -60
					}
					journeyman_bard = {
						wealth = -60
					}
					master_ranger = {
						wealth = -60
					}
					master_paladin = {
						wealth = -60
					}
					trained_druid = {
						wealth = -70
					}
					trained_cleric = {
						wealth = -70
					}
					trained_warlock = {
						wealth = -70
					}
					trained_bard = {
						wealth = -70
					}
					expert_ranger = {
						wealth = -70
					}
					expert_paladin = {
						wealth = -70
					}
					druid = {
						wealth = -80
					}
					cleric = {
						wealth = -80
					}
					warlock = {
						wealth = -80
					}
					bard = {
						wealth = -80
					}
					journeyman_ranger = {
						wealth = -80
					}
					journeyman_paladin = {
						wealth = -80
					}
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				custom_tooltip = {
					text = ALLINJURIESCURED
					hidden_tooltip = {
						remove_trait = wounded
						remove_trait = mangled
						remove_trait = severely_injured
						remove_character_modifier = badly_bruised
						remove_character_modifier = black_eye
						remove_character_modifier = swollen_ankle
						remove_character_modifier = swollen_wrist
						remove_character_modifier = sore_muscles
						remove_character_modifier = cracked_ribs
						remove_character_modifier = concussion
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.1
			mult_modifier = {
				factor = 100000
				character = ROOT
			}
			mult_modifier = {
				factor = 0.1
				NOT = { wealth = 500 }
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 3
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 3
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
					trait = greedy
				}
			}
		}
	}

	spell_lesser_restoration = {
		ai_check_interval = 24
		filter = all_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			OR = {
				z_cleric = yes
				z_druid = yes
				z_ranger = yes
				z_paladin = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
		}
		potential = {
			OR = {
				is_ill = yes
				trait = lovers_pox
			}
			NOR = { #if it's this bad they need greater restoration
				trait = incapable
				trait = sick_incapable
			}
			is_within_diplo_range = FROM
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				OR = {
					custom_tooltip = {
						text = notbard
						OR = {
							z_bard = no
							AND = {
								z_bard = yes
								OR = {
									z_cleric = yes
									z_druid = yes
									z_ranger = yes
									z_paladin = yes
									z_warlock = yes
								}
							}
						}
					}
					custom_tooltip = {
						text = bardhasinstrument
						z_bard = yes
						any_artifact = {
							has_artifact_flag = instrument
						}
					}
				}
				OR = {
					AND = {
						custom_tooltip = {
							text = JOURNCASTER
							OR = {
								trait = journeyman_druid
								trait = journeyman_cleric
								trait = journeyman_warlock
								trait = journeyman_bard
								trait = master_ranger
								trait = master_paladin
							}
						}
						wealth = 125
					}
					AND = {
						custom_tooltip = {
							text = EXPCASTER
							OR = {
								trait = expert_druid
								trait = expert_cleric
								trait = expert_warlock
								trait = expert_bard
								trait = renowned_ranger
								trait = renowned_paladin
							}
						}
						wealth = 100
					}
					AND = {
						custom_tooltip = {
							text = MASTCASTER
							OR = {
								trait = master_druid
								trait = master_cleric
								trait = master_warlock
								trait = master_bard
								trait = legendary_ranger
								trait = legendary_paladin
							}
						}
						wealth = 75
					}
					AND = {
						custom_tooltip = {
							text = RENOWNCASTER
							OR = {
								trait = renowned_druid
								trait = renowned_cleric
								trait = renowned_warlock
								trait = renowned_bard
							}
						}
						wealth = 55
					}
					AND = {
						custom_tooltip = {
							text = LEGENDCASTER
							OR = {
								trait = legendary_druid
								trait = legendary_cleric
								trait = legendary_warlock
								trait = legendary_bard
							}
						}
						wealth = 35
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_remove_disease_cooldown }
							had_character_flag = { flag = spell_remove_disease_cooldown months = 6 }
						}
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = {
				set_character_flag = spell_remove_disease_cooldown
				trigger_switch = {
					on_trigger = trait
					legendary_druid = {
						wealth = -35
					}
					legendary_cleric = {
						wealth = -35
					}
					legendary_warlock = {
						wealth = -35
					}
					legendary_bard = {
						wealth = -35
					}
					renowned_druid = {
						wealth = -55
					}
					renowned_cleric = {
						wealth = -55
					}
					renowned_warlock = {
						wealth = -55
					}
					renowned_bard = {
						wealth = -55
					}
					master_druid = {
						wealth = -75
					}
					master_cleric = {
						wealth = -75
					}
					master_warlock = {
						wealth = -75
					}
					master_bard = {
						wealth = -75
					}
					legendary_ranger = {
						wealth = -75
					}
					legendary_paladin = {
						wealth = -75
					}
					expert_druid = {
						wealth = -100
					}
					expert_cleric = {
						wealth = -100
					}
					expert_warlock = {
						wealth = -100
					}
					expert_bard = {
						wealth = -100
					}
					renowned_ranger = {
						wealth = -100
					}
					renowned_paladin = {
						wealth = -100
					}
					journeyman_druid = {
						wealth = -125
					}
					journeyman_cleric = {
						wealth = -125
					}
					journeyman_warlock = {
						wealth = -125
					}
					journeyman_bard = {
						wealth = -125
					}
					master_ranger = {
						wealth = -125
					}
					master_paladin = {
						wealth = -125
					}
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				magic_restoration_effect = yes
			}
		}
		ai_will_do = {
			factor = 0.1
			mult_modifier = {
				factor = 100000
				character = ROOT
			}
			mult_modifier = {
				factor = 0.1
				NOT = { wealth = 500 }
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 3
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 3
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
					trait = greedy
				}
			}
			mult_modifier = {
				factor = 0.01
				trait = patron_talona
			}
		}
	}

	spell_greater_restoration = {
		ai_check_interval = 24
		filter = realm_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			OR = {
				z_cleric = yes
				z_druid = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
		}
		potential = {
			OR = {
				is_ill = yes
				trait = possessed
				trait = lovers_pox
			}
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				OR = {
					custom_tooltip = {
						text = notbard
						OR = {
							z_bard = no
							AND = {
								z_bard = yes
								OR = {
									z_cleric = yes
									z_druid = yes
									z_warlock = yes
								}
							}
						}
					}
					custom_tooltip = {
						text = bardhasinstrument
						z_bard = yes
						any_artifact = {
							has_artifact_flag = instrument
						}
					}
				}
				OR = {
					AND = {
						custom_tooltip = {
							text = MASTCASTER
							OR = {
								trait = master_druid
								trait = master_cleric
								trait = master_warlock
								trait = master_bard
							}
						}
						wealth = 100
					}
					AND = {
						custom_tooltip = {
							text = RENOWNCASTER
							OR = {
								trait = renowned_druid
								trait = renowned_cleric
								trait = renowned_warlock
								trait = renowned_bard
							}
						}
						wealth = 75
					}
					AND = {
						custom_tooltip = {
							text = LEGENDCASTER
							OR = {
								trait = legendary_druid
								trait = legendary_cleric
								trait = legendary_warlock
								trait = legendary_bard
							}
						}
						wealth = 50
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_remove_disease_cooldown }
							had_character_flag = { flag = spell_remove_disease_cooldown years = 1 }
						}
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = {
				set_character_flag = spell_remove_disease_cooldown
				trigger_switch = {
					on_trigger = trait
					legendary_druid = {
						wealth = -50
					}
					legendary_cleric = {
						wealth = -50
					}
					legendary_warlock = {
						wealth = -50
					}
					legendary_bard = {
						wealth = -50
					}
					renowned_druid = {
						wealth = -75
					}
					renowned_cleric = {
						wealth = -75
					}
					renowned_warlock = {
						wealth = -75
					}
					renowned_bard = {
						wealth = -75
					}
					master_druid = {
						wealth = -100
					}
					master_cleric = {
						wealth = -100
					}
					master_warlock = {
						wealth = -100
					}
					master_bard = {
						wealth = -100
					}
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				custom_tooltip = {
					text = ALLDISEASECURED
					hidden_tooltip = {
						remove_trait = possessed
						#Greater restoration clears every disease
						BR_remove_any_disease = yes
						#lastly remove incapable
						remove_trait = incapable
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.1
			mult_modifier = {
				factor = 100000
				character = ROOT
			}
			mult_modifier = {
				factor = 0.1
				NOT = { wealth = 500 }
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 3
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 3
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
					trait = greedy
				}
			}
			mult_modifier = {
				factor = 0.01
				trait = patron_talona
			}
		}
	}

	spell_regenerate = {
		ai_check_interval = 24
		filter = all_including_me
		ai_target_filter = home_court_including_me

		from_potential = {
			OR = {
				z_cleric = yes
				z_druid = yes
				z_bard = yes
			}
		}
		potential = {
			OR = {
				trait = wounded
				trait = mangled
				trait = severely_injured
				trait = disfigured
				trait = one_eyed
				trait = one_handed
				trait = one_legged
				trait = grounded
				trait = blinded
				trait = eunuch
			}
			is_within_diplo_range = FROM
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				OR = {
					custom_tooltip = {
						text = notbard
						OR = {
							z_bard = no
							AND = {
								z_bard = yes
								OR = {
									z_cleric = yes
									z_druid = yes
								}
							}
						}
					}
					custom_tooltip = {
						text = bardhasinstrument
						z_bard = yes
						any_artifact = {
							has_artifact_flag = instrument
						}
					}
				}
				OR = {
					AND = {
						custom_tooltip = {
							text = RENOWNCASTER
							OR = {
								trait = renowned_druid
								trait = renowned_cleric
								trait = renowned_bard
							}
						}
						wealth = 150
					}
					AND = {
						custom_tooltip = {
							text = LEGENDCASTER
							OR = {
								trait = legendary_druid
								trait = legendary_cleric
								trait = legendary_bard
							}
						}
						wealth = 100
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_healing_cooldown }
							had_character_flag = { flag = spell_healing_cooldown years = 1 }
						}
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = {
				set_character_flag = spell_healing_cooldown
				trigger_switch = {
					on_trigger = trait
					legendary_druid = {
						wealth = -100
					}
					legendary_cleric = {
						wealth = -100
					}
					legendary_bard = {
						wealth = -100
					}
					renowned_druid = {
						wealth = -150
					}
					renowned_cleric = {
						wealth = -150
					}
					renowned_bard = {
						wealth = -150
					}
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							NOT = { character = FROM }
						}
						opinion = {
							modifier = cured_me
							who = FROM
							years = 5
						}
						if = {
							limit = {
								ai = no
							}
							repeat_event = { id = spellaux.7 }
						}
					}
					else_if = {
						limit = {
							ai = no
							character = FROM
						}
						character_event = { id = spellaux.8 }
					}
				}
				custom_tooltip = {
					text = ALLREGENERATED
					hidden_tooltip = {
						remove_trait = wounded
						remove_trait = mangled
						remove_trait = severely_injured
						remove_trait = disfigured
						remove_trait = one_legged
						remove_trait = one_handed
						remove_trait = grounded
						remove_trait = eunuch
						remove_character_modifier = phantom_pain
						remove_character_modifier = badly_bruised
						remove_character_modifier = black_eye
						remove_character_modifier = swollen_ankle
						remove_character_modifier = swollen_wrist
						remove_character_modifier = sore_muscles
						remove_character_modifier = cracked_ribs
						remove_character_modifier = concussion
						if = {
							limit = {
								trait = creature_beholder
								OR = {
									z_wizard = yes
									z_bard = yes
									z_warlock = yes
								}
							}
							remove_trait = blinded
							add_trait = one_eyed
						}
						else = {
							remove_trait = one_eyed
							remove_trait = blinded
						}
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.1
			mult_modifier = {
				factor = 100000
				character = ROOT
			}
			mult_modifier = {
				factor = 0.1
				NOT = { wealth = 500 }
			}
			mult_modifier = {
				factor = 0
				is_foe = ROOT
			}
			mult_modifier = {
				factor = 3
				trait = kind
			}
			mult_modifier = {
				factor = 10
				is_friend = ROOT
			}
			mult_modifier = {
				factor = 3
				opinion = {
					who = ROOT
					value = 50
				}
			}
			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
			mult_modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
					trait = greedy
				}
			}
		}
	}

}

settlement_decisions = {

	spell_fabricate_sorc = {
		only_playable = yes
		ai_check_interval = 24
		filter = owned #was realm_owned but the potential block means owned
		ai_target_filter = owned #was realm_owned

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_wild_magic
				race_has_wild_magic = yes
			}
		}
		potential = {
			location = {
				holder_scope = {
					character = FROM
				}
			}
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			location = {
				NOT = { has_province_modifier = spell_fabricate_mod }
			}
			FROM = {
				custom_tooltip = {
					text = HAS10SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 10 }
					}
				}
				custom_tooltip = {
					text = JOURNEYMANSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = journeyman_sorcerer
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_fabricate_cooldown }
							had_character_flag = { flag = spell_fabricate_cooldown years = 5 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_fabricate_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -10 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				location = {
					add_province_modifier = {
						name = spell_fabricate_mod
						months = 30
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 0
				FROM = { NOT = { wealth = 100 } }
			}
			mult_modifier = {
				factor = 10
				FROM = { trait = diligent }
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			mult_modifier = {
				factor = 20
				FROM = { trait = patron_gond }
			}
		}
	}
	spell_wall_of_stone_sorc = {
		only_playable = yes
		ai_check_interval = 24
		filter = owned #was realm_owned
		ai_target_filter = owned #was realm_owned

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_draconic
				race_has_draconic_magic = yes
			}
		}
		potential = {
			location = {
				holder_scope = {
					character = FROM
				}
			}
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			ROOT = {
				has_siege = yes
				location = { NOT = { has_province_modifier = spell_wall_of_stone_mod } }
			}
			FROM = {
				custom_tooltip = {
					text = HAS10SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 10 }
					}
				}
				custom_tooltip = {
					text = JOURNEYMANSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = journeyman_sorcerer
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_wall_of_stone_cooldown }
							had_character_flag = { flag = spell_wall_of_stone_cooldown years = 4 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_wall_of_stone_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -10 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				location = {
					add_province_modifier = {
						name = spell_wall_of_stone_mod
						years = 2
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 10
				FROM = { trait = diligent }
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
		}
	}

	spell_blight_sorc = {
		ai = no
		filter = all
		ai_target_filter = none

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_shadow
				race_has_shadow_magic = yes
			}
		}
		potential = {
			OR = {
				location = {
					any_neighbor_province = {
						holder_scope = { same_realm = FROM }
					}
				}
				location = {
					FROM = {
						at_location = PREV
					}
				}
			}
			location = { NOT = { has_disease = yes } }
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = MASTERSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_blight_cooldown }
							had_character_flag = { flag = spell_blight_cooldown years = 10 }
						}
					}
				}
				#NOT = { has_character_modifier = burn_path_mod }
			}
			location = { holder_scope = { is_foe = FROM } }
			location = {
				holder_scope = {
					reverse_opinion = {
						who = FROM
						value <= -50
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_blight_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -20 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							location = {
								holder_scope = {
									ai = no
								}
							}
						}
						location = {
							holder_scope = {
								opinion = {
									modifier = cast_spell_on_me
									who = FROM
									years = 1
								}
								repeat_event = { id = spellaux.39 }
							}
						}
					}
				}
				location = {
					random_list = {
						1 = {
							spawn_disease = tuberculosis
						}
						1 = {
							spawn_disease = typhoid_fever
						}
						1 = {
							spawn_disease = typhus
						}
						1 = {
							spawn_disease = measles
						}
						1 = {
							spawn_disease = small_pox
						}
						1 = {
							spawn_disease = syphilis
						}
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 10
				location = {
					holder_scope = {
						is_foe = FROM
					}
				}
			}
			mult_modifier = {
				factor = 0.1
				FROM = { trait = kind }
			}
			mult_modifier = {
				factor = 0
				location = {
					holder_scope = {
						is_friend = FROM
					}
				}
			}
			mult_modifier = {
        factor = 0.1
				location = {
					holder_scope = {
						opinion = { who = FROM value >= 50 }
					}
				}
      }
			mult_modifier = {
        factor = 0.5
				location = {
					holder_scope = {
						opinion = { who = FROM value >= 25 }
					}
				}
      }
			mult_modifier = {
        factor = 2
				location = {
					holder_scope = {
						opinion = { who = FROM value <= 0 }
					}
				}
      }
			mult_modifier = {
				factor = 2
				FROM = { trait = envious }
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			mult_modifier = {
				factor = 10
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
					}
				}
			}
			mult_modifier = {
				factor = 20
				FROM = { trait = patron_talona }
			}
		}
	}
	spell_controlweather_sorc = {
		ai = no
		filter = all
		ai_target_filter = none

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_wild_magic
				trait = origin_storm
				race_has_wild_magic = yes
				race_has_storm_magic = yes
			}
		}
		potential = {
			OR = {
				location = {
					any_neighbor_province = {
						holder_scope = { same_realm = FROM }
					}
				}
				location = {
					holder_scope = {
						character = FROM
					}
				}
				location = {
					FROM = {
						at_location = PREV
					}
				}
			}
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = MASTERSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_controlweather_cooldown }
							had_character_flag = { flag = spell_controlweather_cooldown months = 30 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
			OR = {
				location = {
					holder_scope = {
						reverse_opinion = {
							who = FROM
							value <= -40
						}
					}
				}
				location = { holder_scope = { is_foe = FROM } }
				location = {
					holder_scope = {
						character = FROM
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_controlweather_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -20 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				hidden_tooltip = {
					if = {
						limit = {
							location = {
								holder_scope = {
									ai = no
								}
							}
						}
						location = {
							holder_scope = {
								opinion = {
									modifier = cast_spell_on_me
									who = FROM
									years = 1
								}
								repeat_event = { id = spellaux.41 }
							}
						}
					}
				}
				hidden_tooltip = {
					if = {
						limit = {
							location = {
								holder_scope = {
									NOT = {
										character = FROM
									}
								}
							}
						}
						#Insert Control Weather CB here
					}
				}
				location = {
					if = {
						limit = {
							location = {
								holder_scope = {
									character = FROM
								}
							}
						}
						add_province_modifier = {
							name = africa_light_rain
							months = 18
						}
					}
					if = {
						limit = {
							location = {
								holder_scope = {
									NOT = {
										character = FROM
									}
								}
							}
						}
						random_list = {
							1 = {
								add_province_modifier = {
									name = africa_heavy_rain
									months = 6
								}
							}
							1 = {
								add_province_modifier = {
									name = africa_drought_risk
									months = 18
								}
							}
							1 = {
								add_province_modifier = {
									name = africa_drought
									months = 12
								}
							}
						}
					}


				}
				any_neighbor_independent_ruler = {
					any_realm_province = {
						random_list = {
							1 = {
								add_province_modifier = {
									name = africa_heavy_rain
									months = 6
								}
							}
							1 = {
								add_province_modifier = {
									name = africa_drought_risk
									months = 18
								}
							}
							1 = {
								add_province_modifier = {
									name = africa_drought
									months = 12
								}
							}
						}
					}
					#Insert Control Weather CB here

				}
				random = {
					chance = 50
					any_neighbor_independent_ruler = {
						any_realm_province = {
							random_list = {
								1 = {
									add_province_modifier = {
										name = africa_heavy_rain
										months = 6
									}
								}
								1 = {
									add_province_modifier = {
										name = africa_drought_risk
										months = 18
									}
								}
								1 = {
									add_province_modifier = {
										name = africa_drought
										months = 12
									}
								}
							}
						}
						#Insert Control Weather CB here
					}
				}
			}

		}
		ai_will_do = {
			factor = 0.3
			mult_modifier = {
				factor = 10
				location = {
					holder_scope = {
						is_foe = FROM
					}
				}
			}
			mult_modifier = {
				factor = 0.1
				FROM = { trait = kind }
			}
			mult_modifier = {
				factor = 0
				location = {
					holder_scope = {
						is_friend = FROM
					}
				}
			}
			mult_modifier = {
        factor = 0.1
				location = {
					holder_scope = {
						opinion = { who = FROM value >= 50 }
					}
				}
      }
			mult_modifier = {
        factor = 0.5
				location = {
					holder_scope = {
						opinion = { who = FROM value >= 25 }
					}
				}
      }
			mult_modifier = {
        factor = 2
				location = {
					holder_scope = {
						opinion = { who = FROM value <= 0 }
					}
				}
      }
			mult_modifier = {
				factor = 2
				FROM = { trait = envious }
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			mult_modifier = {
				factor = 10
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
					}
				}
			}
			mult_modifier = {
				factor = 20
				FROM = { trait = patron_talos }
			}
			mult_modifier = {
				factor = 20
				FROM = { trait = patron_umberlee }
			}
			mult_modifier = {
				factor = 3
				FROM = { culture = shadovar } #Shadovar canonically caused a war with Cormyr through use of weather manipulation
			}
			mult_modifier = {
				factor = 10
				FROM = { culture = thayan } #Thay is pretty notorious canonically for doing this, and dgaf about neighbors caring
			}
		}
	}
	spell_restoration_prov_sorc = {
		ai_check_interval = 24
		filter = realm_owned
		ai_target_filter = sub_realm_owned

		from_potential = {
			z_sorcerer = yes
			OR = {
				trait = origin_divine_soul
				race_has_divine_magic = yes
			}
		}
		potential = {
			location = { has_disease = yes }
		}
		allow = {
			FROM = {
				FROM = { wild_magic_recovery = yes }
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = sorcspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = EXPERTSORCHIGHER
					hidden_tooltip = {
						OR = {
							trait = expert_sorcerer
							trait = master_sorcerer
							trait = renowned_sorcerer
							trait = legendary_sorcerer
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_remove_disease_cooldown }
							had_character_flag = { flag = spell_remove_disease_cooldown years = 1 }
						}
					}
				}
				NOT = { has_character_modifier = burn_path_mod }
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = { set_character_flag = spell_remove_disease_cooldown }
			FROM = { hidden_tooltip = { change_variable = { which = sorcspellpoints value = -20 } } }
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				random_list = {
					1 = {
						location = {
							reduce_disease = -0.99 # maybe this will fix the display bug?
						}
						hidden_tooltip = {
							if = {
								limit = {
									location = {
										holder_scope = {
											NOT = { character = FROM }
										}
									}
								}
								location = {
									holder_scope = {
										opinion = {
											modifier = cured_my_lands
											who = FROM
											years = 5
										}
										if = {
											limit = {
												ai = no
											}
											repeat_event = { id = spellaux.9 }
										}
									}
								}
							}
							else_if = {
								limit = {
									location = {
										holder_scope = {
											ai = no
											character = FROM
										}
									}
								}
								location = {
									FROM = { character_event = { id = spellaux.10 } }
								}
							}
						}
					}
					1 = {
						FROM = {
							if = {
								limit = {
									ai = no
								}
								character_event = { id = spellaux.11 }
							}
						}
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.1
			mult_modifier = {
				factor = 10000
				location = {
					holder_scope = {
						character = ROOT
					}
				}
			}
			mult_modifier = {
				factor = 0
				location = {
					holder_scope = {
						is_foe = FROM
					}
				}
			}
			mult_modifier = {
				factor = 3
				FROM = { trait = kind }
			}
			mult_modifier = {
				factor = 10
				location = {
					holder_scope = {
						is_friend = FROM
					}
				}
			}
			mult_modifier = {
				factor = 3
				location = {
					holder_scope = {
						opinion = {
							who = FROM
							value = 50
						}
					}
				}
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = envious }
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			mult_modifier = {
				factor = 0.1
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
					}
				}
			}
			mult_modifier = {
				factor = 0.01
				FROM = { trait = patron_talona }
			}
		}
	}

	rogue_take_over_crime = {
		is_high_prio = yes
		ai_check_interval = 60
		only_playable = yes
		filter = sub_realm_owned
		ai_target_filter = sub_realm_owned

		from_potential = {
			z_rogue = yes
		}
		potential = {
			location = {
				OR = {
					has_province_modifier = thieves_guild
					has_province_modifier = smugglers_ring
					has_province_modifier = highway_robber_band
				}
				holder_scope = {
					character = FROM
				}
			}
		}
		allow = {
			FROM = { prestige = 50 }
		}
		effect = {
			FROM = {
				prestige = -50
				wealth = 50
			}
			location = {
				add_province_modifier = {
					name = organized_crime
					months = 4
				}
				if = {
					limit = {
						has_province_modifier = thieves_guild
					}
					remove_province_modifier = thieves_guild
				}
				if = {
					limit = {
						has_province_modifier = smugglers_ring
					}
					remove_province_modifier = smugglers_ring
				}
				if = {
					limit = {
						has_province_modifier = highway_robber_band
					}
					remove_province_modifier = highway_robber_band
				}
			}
		}
		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 0.01
				FROM = { trait = just }
			}
			mult_modifier = {
				factor = 1.7
				FROM = { trait = greedy }
			}
			mult_modifier = {
				factor = 1.5
				FROM = { trait = arbitrary }
			}
		}
	}

	spell_restoration_prov = {
		ai_check_interval = 24
		filter = realm_owned
		ai_target_filter = sub_realm_owned

		from_potential = {
			OR = {
				z_cleric = yes
				z_druid = yes
				AND = {
					trait = warlock_celestial
					z_warlock = yes
				}
				z_bard = yes
			}
		}
		potential = {
			location = { has_disease = yes }
		}
		allow = {
			FROM = { wild_magic_recovery = yes }
			FROM = {
				OR = {
					custom_tooltip = {
						text = notbard
						OR = {
							z_bard = no
							AND = {
								z_bard = yes
								OR = {
									z_cleric = yes
									z_druid = yes
									z_warlock = yes
								}
							}
						}
					}
					custom_tooltip = {
						text = bardhasinstrument
						z_bard = yes
						any_artifact = {
							has_artifact_flag = instrument
						}
					}
				}
				OR = {
					AND = {
						custom_tooltip = {
							text = EXPCASTER
							OR = {
								trait = expert_druid
								trait = expert_cleric
								trait = expert_warlock
								trait = expert_bard
							}
						}
						wealth = 250
					}
					AND = {
						custom_tooltip = {
							text = MASTCASTER
							OR = {
								trait = master_druid
								trait = master_cleric
								trait = master_warlock
								trait = master_bard
							}
						}
						wealth = 200
					}
					AND = {
						custom_tooltip = {
							text = RENOWNCASTER
							OR = {
								trait = renowned_druid
								trait = renowned_cleric
								trait = renowned_warlock
								trait = renowned_bard
							}
						}
						wealth = 150
					}
					AND = {
						custom_tooltip = {
							text = LEGENDCASTER
							OR = {
								trait = legendary_druid
								trait = legendary_cleric
								trait = legendary_warlock
								trait = legendary_bard
							}
						}
						wealth = 100
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_remove_disease_cooldown }
							had_character_flag = { flag = spell_remove_disease_cooldown years = 1 }
						}
					}
				}
			}
		}
		effect = {
			FROM = { wild_magic_surge_effect = yes }
			FROM = {
				set_character_flag = spell_remove_disease_cooldown
				trigger_switch = {
					on_trigger = trait
					legendary_druid = {
						wealth = -100
					}
					legendary_cleric = {
						wealth = -100
					}
					legendary_warlock = {
						wealth = -100
					}
					legendary_bard = {
						wealth = -100
					}
					renowned_druid = {
						wealth = -150
					}
					renowned_cleric = {
						wealth = -150
					}
					renowned_warlock = {
						wealth = -150
					}
					renowned_bard = {
						wealth = -150
					}
					master_druid = {
						wealth = -200
					}
					master_cleric = {
						wealth = -200
					}
					master_warlock = {
						wealth = -200
					}
					master_bard = {
						wealth = -200
					}
					expert_druid = {
						wealth = -250
					}
					expert_cleric = {
						wealth = -250
					}
					expert_warlock = {
						wealth = -250
					}
					expert_bard = {
						wealth = -250
					}
				}
			}
			if = {
				limit = {
					FROM = { wild_magic_recovery = yes }
				}
				location = {
					reduce_disease = -0.99 # maybe this will fix the display bug?
				}
				hidden_tooltip = {
					if = {
						limit = {
							location = {
								holder_scope = {
									NOT = { character = FROM }
								}
							}
						}
						location = {
							holder_scope = {
								opinion = {
									modifier = cured_my_lands
									who = FROM
									years = 5
								}
								if = {
									limit = {
										ai = no
									}
									repeat_event = { id = spellaux.9 }
								}
							}
						}
					}
					else_if = {
						limit = {
							location = {
								holder_scope = {
									ai = no
									character = FROM
								}
							}
						}
						location = {
							FROM = { character_event = { id = spellaux.10 } }
						}
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.1
			mult_modifier = {
				factor = 10000
				location = {
					holder_scope = {
						character = FROM
					}
				}
			}
			mult_modifier = {
				factor = 0.1
				FROM = { NOT = { wealth = 500 } }
			}
			mult_modifier = {
				factor = 0
				location = {
					holder_scope = {
						is_foe = FROM
					}
				}
			}
			mult_modifier = {
				factor = 3
				FROM = { trait = kind }
			}
			mult_modifier = {
				factor = 10
				location = {
					holder_scope = {
						is_friend = FROM
					}
				}
			}
			mult_modifier = {
				factor = 3
				location = {
					holder_scope = {
						opinion = {
							who = FROM
							value = 50
						}
					}
				}
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			mult_modifier = {
				factor = 0.1
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
						trait = greedy
					}
				}
			}
			mult_modifier = {
				factor = 0.01
				FROM = { trait = patron_talona }
			}
		}
	}

	organize_levy = {
		filter = owned
		ai_target_filter = owned

		ai_check_interval = 60

		only_playable = yes

		from_potential = {
			z_fighter = yes
		}

		potential = {
			location = {
				holder_scope = {
					character = FROM
				}
			}
		}

		allow = {
			location = {
				NOT = { has_province_modifier = organized_levies }
			}
			custom_tooltip = {
				text = ORGLEVYCD
				FROM = {
					OR = {
						NOT = { has_character_flag = organized_levy }
						had_character_flag = {
							flag = organized_levy
							years = 4
						}
					}
				}
			}
			FROM = {
				scaled_wealth = {
					value = 0.08
					min = 15
				}
			}
		}

		effect = {
			FROM = {
				scaled_wealth = {
					value = -0.08
					min = -15
				}
			}
			location = {
				add_province_modifier = {
					name = organized_levies
					years = 2
				}
			}
		}

		ai_will_do = {
			factor = 0.5
			mult_modifier = {
				factor = 1.5
				FROM = { trait = diligent }
			}
			mult_modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
		}
	}

}

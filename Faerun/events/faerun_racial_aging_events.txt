namespace = racial_aging

#This first is hidden and triggers for the long lived races and flag them eligible for racial_aging.4 where they become infirm at a certain age based on their health
character_event = {
	id = racial_aging.0
	min_age = 100
	hide_window = yes

	is_triggered_only = yes #from on_decade pulse

	trigger = {
		NOR = { 
			has_character_flag = racial_aging0
			has_character_flag = racial_aging1
		}
		is_old_enough_to_die_trigger = yes
	}
	
	immediate = {
		set_character_flag = racial_aging0
	}
}


#This event makes the long lived races infirm for a period, before flagging them eligible for racial_aging.2 where they die of old age
character_event = {
	id = racial_aging.1
	desc = racial_aging1desc
	picture = GFX_evt_feast

	is_triggered_only = yes #from racial_aging.4

	option = {
		name = "OK"
		trigger = {
			NOR = { 
				faerun_immortal_race_trigger = yes
				faerun_secret_immortal_race_trigger = yes
			}
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
			set_character_flag = racial_aging1
		}
		add_trait = infirm
	}
	option = {
		name = EVTOPTB_racial_aging_1
		trigger = {
			AND = {
				faerun_immortal_race_trigger = yes
				faerun_secret_immortal_race_trigger = no
			}
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
		}
		
	}
	option = {
		name = EVTOPTB_racial_aging_2
		trigger = {
			faerun_secret_immortal_race_trigger = yes
		}
		hidden_effect = {
			clr_character_flag = racial_aging0
		}
		character_event = { id = secret_identity.0 }
	}
}

# old infirm character dies
character_event = {
	id = racial_aging.2
	hide_window = yes

	is_triggered_only = yes #from on_decade_pulse

	has_character_flag = racial_aging1

	immediate = {
		hidden_effect = {
			clr_character_flag = racial_aging1
		}
		remove_trait = infirm
		if = {
			limit = {
				NOT = { faerun_immortal_race_trigger = yes }
			}
			death = { death_reason = death_longlived }
		}
	}

	weight_multiplier = {
		factor = 1
		death_of_old_age_score = yes

		additive_modifier = {
			value = 10000
			
			is_too_old_to_live_trigger = yes
		}
	}
}

# Toggle creature traits to get long-lived races to grow into old age.
character_event = {
	id = racial_aging.3
	hide_window = yes
	is_triggered_only = yes # on_decade_pulse
	#max_age = 256 # Integer overflow

	trigger = {
		immortal = yes
		practical_age < 200 # There is no point in ageing the portrait if already old
		OR = {
			age < 30
			has_character_flag = racial_aging0
			has_character_flag = racial_aging1

			trigger_if = {
				limit = {
					age >= 40
					age < 50
				}

				NOR = {
					trait = immortal
					trait = avatar
				}
			}
		}
	}

	immediate = {
		if = {
			limit = { age >= 256 }

			export_to_variable = {
				which = local_age_to_add
				value = age
			}
			subtract_variable = {
				which = local_age_to_add
				value = 200
			}
			set_variable = {
				which = local_age_to_subtract
				which = local_age_to_add
			}
			multiply_variable = {
				which = local_age_to_subtract
				value = -1
			}

			add_age = local_age_to_subtract
			set_character_flag = temp_flag
		}

		refresh_immortal_age_effect = yes

		if = {
			limit = { has_character_flag = temp_flag }

			add_age = local_age_to_add
			clr_character_flag = temp_flag
		}
	}
}


character_event = {
	id = racial_aging.4
	is_triggered_only = yes # from on_decade pulse
	hide_window = yes

	has_character_flag = racial_aging0

	trigger = {
		is_old_enough_to_die_trigger = yes
	}

	immediate = {
		character_event = {
			id = racial_aging.1
		}
	}

	weight_multiplier = {
		factor = 1
		death_of_old_age_score = yes

		additive_modifier = {
			value = 10000
			
			is_too_old_to_live_trigger = yes
		}
	}
}

# Correcting the portrait age on the start of the game
character_event = {
	id = racial_aging.5
	hide_window = yes
	is_triggered_only = yes # on_startup

	min_age = 50

	trigger = { immortal = yes }

	immediate = {
		character_event = { id = racial_aging.0 }
		if = { # Cap elderly at 200 immortal age
			limit = { has_character_flag = racial_aging0 }
			character_event = { id = racial_aging.3 }
		}
		else_if = { # Cap others at 40-50 immortal age
			limit = {
				OR = {
					practical_age < 16
					NOR = {
						trait = immortal
						trait = longevity
						trait = avatar
						evilcat_is_chosen = yes
					}
				}
			}
			export_to_variable = {
				which = local_age_to_add
				value = age
			}
			subtract_variable = {
				which = local_age_to_add
				value = 40
			}
			set_variable = {
				which = local_age_to_subtract
				which = local_age_to_add
			}
			multiply_variable = {
				which = local_age_to_subtract
				value = -1
			}

			add_age = local_age_to_subtract # setting char's real age to 40
			refresh_immortal_age_effect = yes # setting immortal_age to 40
			add_age = local_age_to_add # setting real age back
		}
	}
}

# Assign a lifespan trait.
character_event = {
	id = racial_aging.6
	hide_window = yes
	is_triggered_only = yes
	min_age = 16

	immediate = {
		if = {
			limit = {
				faerun_immortal_race_trigger = yes
			}
			add_trait = lifespan_ageless
		}
		else_if = {
			limit = {
				is_race_lifespan_1000_trigger = yes
			}
			add_trait = lifespan_1000
		}
		else_if = {
			limit = {
				is_race_lifespan_800_trigger = yes
			}
			add_trait = lifespan_800
		}
		else_if = {
			limit = {
				is_race_lifespan_600_trigger = yes
			}
			add_trait = lifespan_600
		}
		else_if = {
			limit = {
				is_race_lifespan_500_trigger = yes
			}
			add_trait = lifespan_500
		}
		else_if = {
			limit = {
				is_race_lifespan_400_trigger = yes
			}
			add_trait = lifespan_400
		}
		else_if = {
			limit = {
				is_race_lifespan_350_trigger = yes
			}
			add_trait = lifespan_350
		}
		else_if = {
			limit = {
				is_race_lifespan_300_trigger = yes
			}
			add_trait = lifespan_300
		}
		else_if = {
			limit = {
				is_race_lifespan_250_trigger = yes
			}
			add_trait = lifespan_250
		}
		else_if = {
			limit = {
				is_race_lifespan_200_trigger = yes
			}
			add_trait = lifespan_200
		}
		else_if = {
			limit = {
				is_race_lifespan_180_trigger = yes
			}
			add_trait = lifespan_180
		}
		else_if = {
			limit = {
				is_race_lifespan_160_trigger = yes
			}
			add_trait = lifespan_160
		}
		else_if = {
			limit = {
				is_race_lifespan_150_trigger = yes
			}
			add_trait = lifespan_150
		}
	}
}
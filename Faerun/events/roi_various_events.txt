# partially removed

namespace = RoI

###########################################
# Reincarnation Events
###########################################
# by Henrik FÃ¥hraeus
###########################################

# [on_birth] Child might be a reincarnation
character_event = {
	id = RoI.10000
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			religion = draconic_pantheon
			religion = elven_panthon
			religion = natural
		}
		OR = {
			has_dlc = "Rajas of India"
			has_dlc = "Jade Dragon"
			has_dlc = "Holy Fury"
			has_dlc = "The Sword of Islam"
		}
		OR = {
			father = {
				ai = no
				is_reincarnated = no
				father_even_if_dead = {
					OR = {
						is_alive = no
						father_even_if_dead = {
							is_alive = no
						}
					}
				}
				NOT = {
					any_sibling = {
						is_reincarnated = yes
					}
				}
			}
			mother = {
				ai = n
				is_reincarnated = no
				father_even_if_dead = {
					OR = {
						is_alive = no
						father_even_if_dead = {
							is_alive = no
						}
					}
				}
				NOT = {
					any_sibling = {
						is_reincarnated = yes
					}
				}
			}
		}
		NOT = {
			any_sibling = {
				is_reincarnated = yes
			}
		}
	}
	
	option = {
		if = {
			limit = {
				father = { 
					ai = no
				}
			}
			if = {
				limit = {
					father = {
						father_even_if_dead = {
							father_even_if_dead = {
								is_alive = no
							}
						}
					}
				}
				father = {
					father_even_if_dead = {
						father_even_if_dead = {
							ROOT = {
								set_reincarnation = PREV
							}
						}
					}
				}
			}
			if = {
				limit = {
					is_reincarnated = no
				}
				father = {
					father_even_if_dead = {
						ROOT = {
							set_reincarnation = PREV
						}
					}
				}
			}
			
			father = {
				character_event = {
					id = RoI.10001
					days = 3
				}
			}
		}
		if = {
			limit = {
				mother = { ai = no }
				is_reincarnated = no
			}
			if = {
				limit = {
					mother = {
						father_even_if_dead = {
							father_even_if_dead = {
								is_alive = no
							}
						}
					}
				}
				mother = {
					father_even_if_dead = {
						father_even_if_dead = {
							ROOT = {
								set_reincarnation = PREV
							}
						}
					}
				}
			}
			if = {
				limit = {
					is_reincarnated = no
				}
				mother = {
					father_even_if_dead = {
						ROOT = {
							set_reincarnation = PREV
						}
					}
				}
			}
			
			mother = {
				character_event = {
					id = RoI.10001
					days = 3
				}
			}
		}
	}
}

# Reincarnation: Player notices the similarities
character_event = {
	id = RoI.10001
	desc = EVTDESC_RoI_10001
	picture = GFX_evt_reincarnation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_RoI_10001 # Yes, clearly
		
		hidden_tooltip = {
			FROM = {
				add_trait = reincarnation
				character_event = {
					id = RoI.10002
					days = 912
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_RoI_10001 # Nonsense!
		
		hidden_tooltip = {
			FROM = {
				set_reincarnation = 0
			}
		}
	}
}

# Reincarnation: Toddler thinks of the past life
character_event = {
	id = RoI.10002
	desc = EVTDESC_RoI_10002
	picture = GFX_evt_reincarnation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_RoI_10002
		hidden_tooltip = {
			FROM = {
				character_event = {
					id = RoI.10003
					days = 2
				}
			}
		}
	}
}

# Reincarnation: Toddler speaks of the past life
character_event = {
	id = RoI.10003
	desc = EVTDESC_RoI_10003
	picture = GFX_evt_reincarnation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_RoI_10003
		hidden_tooltip = {
			FROM = {
				set_character_flag = reincarnation_education
			}
		}
	}
	option = {
		name = EVTOPTB_RoI_10003
	}
}

# [on_yearly_childhood_pulse] Reincarnation: Youth picks up a personality trait from the previous life
character_event = {
	id = RoI.10010
	desc = EVTDESC_RoI_10010
	picture = GFX_evt_reincarnation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			religion = elven_panthon
			religion = draconic_pantheon
			religion = natural
		}
		has_dlc = "Rajas of India"
		has_character_flag = reincarnation_education
		NOT = { personality_traits = 5 }
		reincarnation_scope = {
			ROOT = {
				can_copy_personality_trait_from = PREV
			}
		}
	}
	
	option = {
		name = EVTOPTA_RoI_10010
		reincarnation_scope = {
			ROOT = {
				copy_random_personality_trait = PREV
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					father = {
						ai = no
					}
				}
				father = {
					character_event = {
						id = RoI.10011
						days = 2
					}
				}
			}
			if = {
				limit = {
					mother = {
						ai = no
					}
				}
				mother = {
					character_event = {
						id = RoI.10011
						days = 2
					}
				}
			}
			if = {
				limit = {
					guardian = {
						ai = no
					}
				}
				guardian = {
					character_event = {
						id = RoI.10011
						days = 2
					}
				}
			}
		}
	}
}

# Reincarnation: Notification of a youth picking up a personality trait from the previous life
character_event = {
	id = RoI.10011
	desc = EVTDESC_RoI_10011
	picture = GFX_evt_reincarnation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_RoI_10011
	}
}

# [on_yearly_pulse] Reincarnation: Reincarnated player remembers his murderer
character_event = {
	id = RoI.10020
	desc = EVTDESC_RoI_10020
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	ai = no
	min_age = 14
	
	trigger = {
		is_reincarnated = yes
		trait = reincarnation
		has_dlc = "Rajas of India"
		reincarnation_scope = {
			OR = {
				death_murder_trigger = yes
				death_execution_trigger = yes
			}
			killer = {
				always = yes
			}
		}
		NOT = { has_character_flag = reinc_remembered_killer }
	}
	
	option = {
		name = EVTOPTA_RoI_10020
		
		set_character_flag = reinc_remembered_killer
		
		if = {
			limit = {
				reincarnation_scope = {
					killer = {
						is_alive = yes
					}
				}
			}
			reincarnation_scope = {
				killer = {
					reverse_opinion = {
						who = ROOT
						years = 100
						modifier = opinion_dishonorable
					}
				}
			}
		}
	}
}

# [on_yearly_pulse] Reincarnation: Reincarnated player remembers spouse
character_event = {
	id = RoI.10021
	desc = EVTDESC_RoI_10021
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	ai = no
	min_age = 14
	
	trigger = {
		is_reincarnated = yes
		trait = reincarnation
		has_dlc = "Rajas of India"
		reincarnation_scope = {
			spouse_even_if_dead = {
				always = yes
			} 
		}
		NOT = { has_character_flag = reinc_remembered_spouse }
	}
	
	option = {
		name = EVTOPTA_RoI_10021
		
		set_character_flag = reinc_remembered_spouse
	}
}

# [on_yearly_pulse] Reincarnation: Reincarnated player remembers child
character_event = {
	id = RoI.10022
	desc = EVTDESC_RoI_10022
	picture = GFX_evt_child_play
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	ai = no
	min_age = 14
	
	trigger = {
		is_reincarnated = yes
		trait = reincarnation
		has_dlc = "Rajas of India"
		reincarnation_scope = {
			num_of_children = 1
			any_child = {
				always = yes
			}
		}
		NOT = { has_character_flag = reinc_remembered_child }
	}

	immediate = {
		reincarnation_scope = {
			random_child = {
				save_event_target_as = target_child
			}
		}
	}
	
	option = {
		name = EVTOPTA_RoI_10022
		
		set_character_flag = reinc_remembered_child
	}
}
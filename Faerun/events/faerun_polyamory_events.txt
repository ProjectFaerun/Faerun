# Faerun - polyamory events - by neutrondecay & teneb

namespace = polyam

# Meet the lover - two metamours are introduced as such for the first time

# ROOT is partner to introduce lover to, FROM is lover to introduce
character_event = {
	id = polyam.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		character = yes
		is_alive = yes
		is_adult = yes
		event_target:introducing_partner = { 
			character = yes 
			is_alive = yes
			is_partner_of_PREV = yes # check that they're still partners
		}
		event_target:lover_to_introduce = { 
			character = yes 
			is_alive = yes
			is_metamour_of_PREV = no # check that the new lover wasn't introduced already
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { has_character_flag = polyamour_getting_introduced_to@event_target:lover_to_introduce }

			clr_character_flag = polyamour_getting_introduced_to@event_target:lover_to_introduce
		}
	}

	immediate = {
		if = {
			limit = { # if someone is inaccessible, exit and repeat the event after a while
				OR = {
					is_inaccessible_or_incapable_trigger = yes
					event_target:lover_to_introduce = { is_inaccessible_or_incapable_trigger = yes }
				}
			} 

			repeat_event = { id = polyam.1 days = 120 random = 120 }
		}
		else = {
			if = {
				limit = { has_character_flag = polyamour_getting_introduced_to@event_target:lover_to_introduce }
	
				clr_character_flag = polyamour_getting_introduced_to@event_target:lover_to_introduce
			}

			save_event_target_as = partner_to_introduce_lover_to

			repeat_event = { # repeat_event so the scopes remain the same
				id = polyam.2
			}
		}
	}

}

# ROOT is partner to introduce lover to, FROM is lover to introduce
character_event = { # polyam.2
	id = polyam.2
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_2
		trigger = {
			NOR = {
				is_friend = event_target:lover_to_introduce
				is_lover = event_target:lover_to_introduce
				is_consort = event_target:lover_to_introduce
				event_target:lover_to_introduce = { is_consort = ROOT }
				is_married = event_target:lover_to_introduce
			}
		}
	}
	desc = {
		text = EVTDESC_POLYAM_2_FRIENDS
		trigger = {
			is_friend = event_target:lover_to_introduce
			NOR = { 
				is_lover = event_target:lover_to_introduce 
				is_consort = event_target:lover_to_introduce
				event_target:lover_to_introduce = { is_consort = ROOT }
				is_married =  event_target:lover_to_introduce
			}
		}
	}
	desc = {
		text = EVTDESC_POLYAM_2_LOVERS
		trigger = {
			is_lover = event_target:lover_to_introduce
			NOR = {
				is_consort = event_target:lover_to_introduce
				event_target:lover_to_introduce = { is_consort = ROOT }
				is_married =  event_target:lover_to_introduce
			}
		}
	}
	desc = {
		text = EVTDESC_POLYAM_2_CONSORT
		trigger = {
			OR = {
				is_consort = event_target:lover_to_introduce
				event_target:lover_to_introduce = { is_consort = ROOT }
			}
			NOT = { is_married =  event_target:lover_to_introduce }
		}
	}
	desc = {
		text = EVTDESC_POLYAM_2_SPOUSE
		trigger = {
			is_married =  event_target:lover_to_introduce
		}
	}
	picture = GFX_evt_gossip_1
	portrait = event_target:lover_to_introduce

	trigger = {
		trigger_if = {
			limit = { ai = no }

			NOR = {
				has_character_flag = polyamour_autorespond_positively
				has_character_flag = polyamour_autorespond_neutrally
				has_character_flag = polyamour_autorespond_negatively
				has_character_flag = polyamour_autorespond_automatically
			}
		}
	}
	
	fail_trigger_effect = { # we go here only if ROOT is player who disabled notifications
		repeat_event = {
			id = polyam.16
		}
	}


	# immediate = {
	# 	log = "[partner_to_introduce_lover_to.GetBestName] is flagged as a metamour of [lover_to_introduce.GetBestName]."	
	# }
	option = {
		name = EVTOPTA_POLYAM_2 # Terrible news!
		trigger = {
			OR = {
				religion_has_polyamory = no
				NOR = {
					is_friend = event_target:lover_to_introduce
					is_lover = event_target:lover_to_introduce
					is_consort = event_target:lover_to_introduce
					event_target:lover_to_introduce = { is_consort = ROOT }
					is_married = event_target:lover_to_introduce
				}
			}
			trigger_if = {
				limit = { is_close_relative = event_target:lover_to_introduce }

				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 10.0
			mult_modifier = {
				factor = 3.0
				opinion = {
					who = event_target:lover_to_introduce
					value <= -25
				}
			}
			mult_modifier = {
				factor = 0.2
				event_target:lover_to_introduce = { 
					OR = {
						trait = kind 
						trait = temperate
					}
				}
			}
			mult_modifier = {
				factor = 3.0
				event_target:lover_to_introduce = { 
					OR = {
						trait = envious
						trait = proud
					}
				}
			}
			mult_modifier = {
				factor = 5.0
				event_target:lover_to_introduce = { 
					OR = {
						trait = wroth
						trait = cruel
					}
				}
			}
			mult_modifier = {
				factor = 0.2
				trait = kind
			}
			mult_modifier = {
				factor = 10.0
				is_rival = event_target:lover_to_introduce
			}
			mult_modifier = {
				factor = 3.5
				OR = {
					trait = envious
					trait = proud
				}
			}
			mult_modifier = {
				factor = 4.0
				religion_has_polyamory = no
			}
		}

		opinion = {
			name = opinion_unpopular_metamour
			who = event_target:lover_to_introduce
		}
		event_target:introducing_partner = {
			character_event = { id = polyam.3 }
		}
	}
	option = {
		name = EVTOPTB_POLYAM_2 # This is fine.
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:lover_to_introduce }
				
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 50.0
			mult_modifier = {
				factor = 3.0
				AND = {
					opinion = {
						who = event_target:lover_to_introduce
						value >= -25
					}
					opinion = {
						who = event_target:lover_to_introduce
						value <= 25
					}
				}
			}
			mult_modifier = {
				factor = 0.3
				trait = wroth
			}
			mult_modifier = {
				factor = 2.5
				trait = content
			}
		}

		opinion = {
			name = opinion_accepted_metamour
			who = event_target:lover_to_introduce
		}
		event_target:introducing_partner = {
			character_event = { id = polyam.4 }
		}
	}
	option = {
		name = EVTOPTC_POLYAM_2 # A good choice!
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:lover_to_introduce }

				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 10.0

			mult_modifier = {
				factor = 3.0

				opinion = {
					who = event_target:lover_to_introduce
					value >= 25
				}
			}
			mult_modifier = {
				factor = 5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2.5

				event_target:lover_to_introduce = { 
					OR = {
						trait = kind 
						trait = temperate
					}
				}
			}
			mult_modifier = {
				factor = 0.3

				event_target:lover_to_introduce = { 
					OR = {
						trait = envious
						trait = proud
					}
				}
			}
			mult_modifier = {
				factor = 0.02

				event_target:lover_to_introduce = { 
					OR = {
						trait = wroth
						trait = cruel
					}
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.3

				trait = proud
			}
			mult_modifier = {
				factor = 1.5

				trait = lustful
			}



			mult_modifier = {
				factor = 10.0

				OR = {
					is_lover = event_target:lover_to_introduce
					is_consort = event_target:lover_to_introduce
					event_target:lover_to_introduce = { is_consort = ROOT }
					is_married = event_target:lover_to_introduce
				}
				
			}
			mult_modifier = {
				factor = 5.0

				is_friend = event_target:lover_to_introduce
			}
			mult_modifier = {
				factor = 1.5

				trait = charitable
			}
		}

		opinion = {
			name = opinion_popular_metamour
			who = event_target:lover_to_introduce
		}
		event_target:introducing_partner = {
			character_event = { id = polyam.5 }
		}
	}
	option = {
		name = EVTOPTD_POLYAM_2 # That's my kin
		trigger = {
			is_close_relative = event_target:lover_to_introduce
			NOR = {
				religion_has_incest = yes
				trait = lustful
				trait = hedonist
				trait = seducer
				trait = seductress
			}
		}

		opinion = {
			name = opinion_related_metamour
			who = event_target:lover_to_introduce
		}
		event_target:introducing_partner = {
			character_event = { id = polyam.3 }
		}
	}

	option = {
		name = EVTOPTE_POLYAM_2 # offer to disable notifications
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = EVTOPTE_TOOLTIP_POLYAM_2
			set_character_flag = polyamour_current_event_2
			repeat_event = {
				id = polyam.15
			}
		}
	}
}

# ROOT is introducing partner, FROM is partner to introduce lover to, FROMFROM is lover to introduce
character_event = { # polyam.3 
	id = polyam.3 # Bad initial reaction reported to central partner
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_3
	}
	picture = GFX_evt_quarrel
	portrait = event_target:partner_to_introduce_lover_to

	trigger = {
		trigger_if = {
			limit = { ai = no }

			NOR = {
				has_character_flag = polyamour_autorespond_positively
				has_character_flag = polyamour_autorespond_neutrally
				has_character_flag = polyamour_autorespond_negatively
				has_character_flag = polyamour_autorespond_automatically
			}
		}
	}
	
	fail_trigger_effect = { # we go here only if ROOT is player who disabled notifications
		event_target:lover_to_introduce = {
			character_event = { id = polyam.6 }
		}
	}

	option = {
		name = EVTOPTA_POLYAM_3
		event_target:lover_to_introduce = {
			character_event = { id = polyam.6 }
		}
	}

	option = {
		name = EVTOPTE_POLYAM_2 # offer to disable notifications
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = EVTOPTE_TOOLTIP_POLYAM_2
			set_character_flag = polyamour_current_event_3
			repeat_event = {
				id = polyam.15
			}
		}
	}
}

# ROOT is introducing partner, FROM is partner to introduce lover to, FROMFROM is lover to introduce
character_event = { # polyam.4
	id = polyam.4 # Neutral reaction reported to central partner
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_4
	}
	picture = GFX_evt_gossip_1
	portrait = event_target:partner_to_introduce_lover_to

	trigger = {
		trigger_if = {
			limit = { ai = no }

			NOR = {
				has_character_flag = polyamour_autorespond_positively
				has_character_flag = polyamour_autorespond_neutrally
				has_character_flag = polyamour_autorespond_negatively
				has_character_flag = polyamour_autorespond_automatically
			}
		}
	}
	
	fail_trigger_effect = {  # we go here only if ROOT is player who disabled notifications
		event_target:lover_to_introduce = {
			character_event = { id = polyam.7 }
		}
	}

	option = {
		name = EVTOPTA_POLYAM_4
		event_target:lover_to_introduce = {
			character_event = { id = polyam.7 }
		}
	}

	option = {
		name = EVTOPTE_POLYAM_2 # offer to disable notifications
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = EVTOPTE_TOOLTIP_POLYAM_2
			set_character_flag = polyamour_current_event_4
			repeat_event = {
				id = polyam.15
			}
		}
	}
}

# ROOT is introducing partner, FROM is partner to introduce lover to, FROMFROM is lover to introduce
character_event = { # polyam.5
	id = polyam.5 # Positive reaction reported to central partner
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_5
	}
	picture = GFX_evt_lovers
	portrait = event_target:partner_to_introduce_lover_to

	trigger = {
		trigger_if = {
			limit = { ai = no }

			NOR = {
				has_character_flag = polyamour_autorespond_positively
				has_character_flag = polyamour_autorespond_neutrally
				has_character_flag = polyamour_autorespond_negatively
				has_character_flag = polyamour_autorespond_automatically
			}
		}
	}
	
	fail_trigger_effect = {  # we go here only if ROOT is player who disabled notifications
		event_target:lover_to_introduce = {
			character_event = { id = polyam.8 }
		}
	}

	option = {
		name = EVTOPTA_POLYAM_5
		event_target:lover_to_introduce = {
			character_event = { id = polyam.8 }
		}
	}

	option = {
		name = EVTOPTE_POLYAM_2 # offer to disable notifications
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = EVTOPTE_TOOLTIP_POLYAM_2
			set_character_flag = polyamour_current_event_5
			repeat_event = {
				id = polyam.15
			}
		}
	}
}

# ROOT is lover to introduce, FROM is introducing partner, FROMFROM is partner to introduce lover to
character_event = { # polyam.6
	id = polyam.6 # Negative reaction reported to newcomer
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_6
	}
	picture = GFX_evt_quarrel
	portrait = event_target:partner_to_introduce_lover_to

	trigger = {
		trigger_if = {
			limit = { ai = no }

			NOR = {
				has_character_flag = polyamour_autorespond_positively
				has_character_flag = polyamour_autorespond_neutrally
				has_character_flag = polyamour_autorespond_negatively
				has_character_flag = polyamour_autorespond_automatically
			}
		}
	}
	
	fail_trigger_effect = {  # we go here only if ROOT is player who disabled notifications
		repeat_event = { id = polyam.17 }
	}

	option = { # screw you too
		name = EVTOPTA_POLYAM_6
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }

				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 75.0
			mult_modifier = {
				factor = 3.0
				opinion = {
					who = event_target:partner_to_introduce_lover_to
					value <= -25
				}
			}
			mult_modifier = {
				factor = 0.5
				OR = {
					trait = kind
					trait = patient
				}
			}
			mult_modifier = {
				factor = 0.01
				reverse_has_opinion_modifier = {
					name = opinion_related_metamour
					who = event_target:lover_to_introduce
				}
			}
			mult_modifier = {
				factor = 5.0
				OR = {
					trait = wroth
					trait = envious
					trait = proud
				}
			}
			mult_modifier = {
				factor = 4.0
				religion_has_polyamory = no
			}
		}

		opinion = {
			name = opinion_unpopular_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # we can keep the peace
		name = EVTOPTB_POLYAM_6
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 10.0
			mult_modifier = {
				factor = 1.5
				OR = {
					trait = content
					trait = temperate
				}
			}
		}

		opinion = {
			name = opinion_accepted_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # I shall be good
		name = EVTOPTC_POLYAM_6
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 0 # Never ever
		}

		opinion = {
			name = opinion_popular_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # That's awkward
		name = EVTOPTD_POLYAM_6
		trigger = {
			is_close_relative = event_target:partner_to_introduce_lover_to
			NOR = {
				religion_has_incest = yes
				trait = lustful
				trait = hedonist
				trait = seducer
				trait = seductress
			}
		}

		opinion = {
			name = opinion_related_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = {
		name = EVTOPTE_POLYAM_2 # offer to disable notifications
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = EVTOPTE_TOOLTIP_POLYAM_2
			set_character_flag = polyamour_current_event_6
			repeat_event = {
				id = polyam.15
			}
		}
	}
}

# ROOT is lover to introduce, FROM is introducing partner, FROMFROM is partner to introduce lover to
character_event = { # polyam.7
	id = polyam.7 # Neutral reaction reported to newcomer
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_7
	}
	picture = GFX_evt_gossip_1
	portrait = event_target:partner_to_introduce_lover_to

	trigger = {
		trigger_if = {
			limit = { ai = no }

			NOR = {
				has_character_flag = polyamour_autorespond_positively
				has_character_flag = polyamour_autorespond_neutrally
				has_character_flag = polyamour_autorespond_negatively
				has_character_flag = polyamour_autorespond_automatically
			}
		}
	}
	
	fail_trigger_effect = { # we go here only if ROOT is player who disabled notifications
		repeat_event = { id = polyam.17 }
	}

	option = { # Not to my taste
		name = EVTOPTA_POLYAM_7
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 10.0
			mult_modifier = {
				factor = 3.0
				opinion = {
					who = event_target:partner_to_introduce_lover_to
					value <= -25
				}
			}
			mult_modifier = {
				factor = 0.2
				OR = {
					trait = kind
					trait = patient
				}
			}
			mult_modifier = {
				factor = 5.0
				OR = {
					trait = wroth
					trait = envious
					trait = proud
				}
			}
			mult_modifier = {
				factor = 4.0
				religion_has_polyamory = no
			}
		}
		
		opinion = {
			name = opinion_unpopular_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # We shall do well
		name = EVTOPTB_POLYAM_7
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 60.0
			mult_modifier = {
				factor = 1.5
				OR = {
					trait = content
					trait = patient
					trait = kind
				}
			}
		}

		opinion = {
			name = opinion_accepted_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # I can do better
		name = EVTOPTC_POLYAM_7
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 15.0
			mult_modifier = {
				factor = 3.0
				opinion = {
					who = event_target:partner_to_introduce_lover_to
					value >= 25
				}
			}
			mult_modifier = {
				factor = 5.0
				OR = {
					trait = charitable
					trait = temperate
				}
			}
			mult_modifier = {
				factor = 5
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 5
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_1_trigger = yes
				}
			}
		}
		
		opinion = {
			name = opinion_popular_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # That's awkward
		name = EVTOPTD_POLYAM_7
		trigger = {
			is_close_relative = event_target:partner_to_introduce_lover_to
			NOR = {
				religion_has_incest = yes
				trait = lustful
				trait = hedonist
				trait = seducer
				trait = seductress
			}
		}

		opinion = {
			name = opinion_related_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = {
		name = EVTOPTE_POLYAM_2 # offer to disable notifications
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = EVTOPTE_TOOLTIP_POLYAM_2
			set_character_flag = polyamour_current_event_7
			repeat_event = {
				id = polyam.15
			}
		}
	}
}

# ROOT is lover to introduce, FROM is introducing partner, FROMFROM is partner to introduce lover to
character_event = { # polyam.8
	id = polyam.8 # Positive reaction reported to newcomer
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_8
	}
	picture = GFX_evt_lovers
	portrait = event_target:partner_to_introduce_lover_to

	trigger = {
		trigger_if = {
			limit = { ai = no }

			NOR = {
				has_character_flag = polyamour_autorespond_positively
				has_character_flag = polyamour_autorespond_neutrally
				has_character_flag = polyamour_autorespond_negatively
				has_character_flag = polyamour_autorespond_automatically
			}
		}
	}
	
	fail_trigger_effect = { # we go here only if ROOT is player who disabled notifications
		repeat_event = { id = polyam.17 }
	}

	option = { # Throw it back
		name = EVTOPTA_POLYAM_8
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 25.0
			mult_modifier = {
				factor = 0
				religion_has_polyamory = yes
			}
		}

		opinion = {
			name = opinion_unpopular_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # They're fine, I suppose
		name = EVTOPTB_POLYAM_8
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 15.0
			mult_modifier = {
				factor = 2.5
				OR = {
					trait = arbitrary
					trait = chaste
					trait = cynical
				}
			}
		}

		opinion = {
			name = opinion_accepted_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # We shall be bosom friends
		name = EVTOPTC_POLYAM_8
		trigger = {
			trigger_if = {
				limit = { is_close_relative = event_target:partner_to_introduce_lover_to }
	
				OR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}
		}
		ai_chance = {
			factor = 50.0

			mult_modifier = {
				factor = 3.0
				opinion = {
					who = event_target:partner_to_introduce_lover_to
					value >= 25
				}
			}
			mult_modifier = {
				factor = 2.0

				OR = {
					trait = lustful
					trait = gregarious
				}
			}
			mult_modifier = {
				factor = 10.0

				OR = {
					is_lover = event_target:partner_to_introduce_lover_to
					is_consort = event_target:partner_to_introduce_lover_to
					event_target:partner_to_introduce_lover_to = { is_consort = ROOT }
					is_married = event_target:partner_to_introduce_lover_to
				}
			}
			mult_modifier = {
				factor = 5.0

				is_friend = event_target:partner_to_introduce_lover_to
			}
			mult_modifier = {
				factor = 5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_1_trigger = yes
				}
			}				
		}

		opinion = {
			name = opinion_popular_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = { # That's awkward
		name = EVTOPTD_POLYAM_8
		trigger = {
			is_close_relative = event_target:partner_to_introduce_lover_to
			NOR = {
				religion_has_incest = yes
				trait = lustful
				trait = hedonist
				trait = seducer
				trait = seductress
			}
		}

		opinion = {
			name = opinion_related_metamour
			who = event_target:partner_to_introduce_lover_to
		}
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}

	option = {
		name = EVTOPTE_POLYAM_2 # offer to disable notifications
		trigger = {
			ai = no
		}
		custom_tooltip = {
			text = EVTOPTE_TOOLTIP_POLYAM_2
			set_character_flag = polyamour_current_event_8
			repeat_event = {
				id = polyam.15
			}
		}
	}
}

# metamour reactions
# ROOT is partner to introduce lover to
character_event = { # polyam.9
	id = polyam.9
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		character = yes
		is_alive = yes
		event_target:introducing_partner = {
			character = yes
			is_alive = yes
			is_partner_of_PREV = yes # still partners
			event_target:lover_to_introduce = {
				is_partner_of_PREV = yes # still partners
			}
		}
		event_target:lover_to_introduce = {
			character = yes
			is_alive = yes
			is_metamour_of_PREV = yes # still have relation modifiers
		}
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					is_inaccessible_or_incapable_trigger = yes
					event_target:lover_to_introduce = {
						is_inaccessible_or_incapable_trigger = yes
					}
				}
			}

			repeat_event = { id = polyam.9 days = 120 random = 120 }

			break = yes
		}
		if = {
			limit = {
				has_opinion_modifier = {
					name = opinion_unpopular_metamour
					who = event_target:lover_to_introduce
				}
				NOT = { is_rival = event_target:lover_to_introduce }
			}
			repeat_event = { id = polyam.10 }
		}
		else_if = {
			limit = {
				has_opinion_modifier = {
					name = opinion_popular_metamour
					who = event_target:lover_to_introduce
				}
			}
			if = {
				limit = {
					event_target:lover_to_introduce = {
						ROOT = { attracted_to_prev_trigger = yes }
						NOT = { is_lover = ROOT }
					}
				}
				repeat_event = { id = polyam.12 }
			}
			else_if = {
				limit = {
					event_target:lover_to_introduce = {
						NOT = { is_friend = ROOT }
					}
				}
				repeat_event = { id = polyam.11 }
			}
		}
	}
}

# ROOT is partner to introduce lover to
character_event = { # polyam.10
	id = polyam.10
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_10 # can't stand them, etc etc
	}
	picture = GFX_evt_quarrel
	portrait = event_target:lover_to_introduce
	
	option = {
		name = EVTOPTA_POLYAM_10 # something rivalryesque
		ai_chance = {
			factor = 50
			mult_modifier = {
				factor = 0
				is_close_relative = event_target:lover_to_introduce
				NOR = {
					trait = wroth
					is_any_kinslayer_trigger = yes
					religion_tolerates_kinslaying = yes
				}
			}
			mult_modifier = {
				factor = 0.1
				NAND = {
					has_opinion_modifier = {
						who = event_target:lover_to_introduce
						name = opinion_unpopular_metamour
					}
					event_target:lover_to_introduce = {
						has_opinion_modifier = {
							who = ROOT
							name = opinion_unpopular_metamour
						}
					}
				}
			}
			mult_modifier = {
				factor = 5
				trait = patron_hoar
			}
		}
		add_rival = event_target:lover_to_introduce
	}
	option = {
		name = EVTOPTB_POLYAM_10 # I sheath my sword
		ai_chance = {
			factor = 50
		}
		if = {
			limit = {
				NOT = { trait = stressed }
			}
			random = {
				chance = 30
				add_trait = stressed
			}
		}			
	}
}

# ROOT is partner to introduce lover to
character_event = { # polyam.11
	id = polyam.11
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_11 # something about becoming friend, etc etc
	}
	picture = GFX_evt_gossip_1	
	portrait = event_target:lover_to_introduce

	option = {
		name = EVTOPTA_POLYAM_11 # something friendlyesque
		ai_chance = {
			factor = 50
			mult_modifier = {
				factor = 0.2
				trait = shy
			}
			mult_modifier = {
				factor = 4
				trait = gregarious
			}
			mult_modifier = {
				factor = 0.1
				NAND = {
					has_opinion_modifier = {
						who = event_target:lover_to_introduce
						name = opinion_popular_metamour
					}
					event_target:lover_to_introduce = {
						has_opinion_modifier = {
							who = ROOT
							name = opinion_popular_metamour
						}
					}
				}
			}
		}
		add_friend = event_target:lover_to_introduce
	}
	option = {
		name = EVTOPTB_POLYAM_11 # let's not go overboard
		# nothing happens
		ai_chance = {
			factor = 50
		}
	}
}

# ROOT is partner to introduce lover to
character_event = { # polyam.12
	id = polyam.12
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_12 # something about becoming lovers, etc etc
	}
	picture = GFX_evt_gossip_1
	portrait = event_target:lover_to_introduce

	option = {
		name = EVTOPTA_POLYAM_12 # something loveryesque
		ai_chance = {
			factor = 75
			mult_modifier = {
				factor = 0
				trait = chaste
			}
			mult_modifier = {
				factor = 3
				trait = lustful
			}
			mult_modifier = {
				factor = 2
				trait = hedonist
			}
			mult_modifier = {
				factor = 5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:lover_to_introduce = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0
				is_close_relative = event_target:lover_to_introduce
				OR = {
					religion_has_incest = no
					event_target:lover_to_introduce = { religion_has_incest = no }
				}
			}	
			mult_modifier = {
				factor = 0.1
				NAND = {
					has_opinion_modifier = {
						who = event_target:lover_to_introduce
						name = opinion_popular_metamour
					}
					event_target:lover_to_introduce = {
						has_opinion_modifier = {
							who = ROOT
							name = opinion_popular_metamour
						}
					}
				}
			}
		}
		event_target:lover_to_introduce = { character_event = { id = polyam.13 } }
	}
	option = {
		name = EVTOPTB_POLYAM_12 # not lovers, but friends
		ai_chance = {
			factor = 15
			mult_modifier = {
				factor = 0.1
				trait = shy
			}
			mult_modifier = {
				factor = 2
				trait = gregarious
			}
			mult_modifier = {
				factor = 1.5
				trait = loyal
			}
			mult_modifier = {
				factor = 0.1
				NAND = {
					has_opinion_modifier = {
						who = event_target:lover_to_introduce
						name = opinion_popular_metamour
					}
					event_target:lover_to_introduce = {
						has_opinion_modifier = {
							who = ROOT
							name = opinion_popular_metamour
						}
					}
				}
			}
		}
		trigger = {
			NOT = { is_friend = event_target:lover_to_introduce }
		}	
		add_friend = event_target:lover_to_introduce
	}
	option = {
		name = EVTOPTC_POLYAM_12 # not striking enough to tempt me
		ai_chance = {
			factor = 10
		}
		# nothing happens
	}
}

# ROOT is lover to introduce
character_event = { # polyam.13
	id = polyam.13
	is_triggered_only = yes
	desc = {
		text = EVTDESC_POLYAM_13 # My metamour wants to be my lover
	}
	picture = GFX_evt_lovers
	portrait = event_target:partner_to_introduce_lover_to

	option = {
		name = EVTOPTA_POLYAM_13 # Accept
		ai_chance = {
			factor = 50
			mult_modifier = {
				factor = 0
				OR = { 
					trait = chaste
					trait = loyal
				}
			}
			mult_modifier = {
				factor = 0
				AND = {
					event_target:partner_to_introduce_lover_to = {
						ROOT = { attracted_to_prev_trigger = no }				
					}
					NOT = { trait = hedonist }
				}
			}
			mult_modifier = {
				factor = 3
				trait = lustful
			}
			mult_modifier = {
				factor = 5
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 5
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 3
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 2
				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_fair_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.2

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_3_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.35

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_2_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:partner_to_introduce_lover_to = { 
					ROOT = { attracted_to_prev_trigger = yes }
					has_ugly_trait_non_congenital_tier_1_trigger = yes
				}
			}
			mult_modifier = {
				factor = 0.1
				NAND = {
					has_opinion_modifier = {
						who = event_target:partner_to_introduce_lover_to
						name = opinion_popular_metamour
					}
					event_target:partner_to_introduce_lover_to = {
						has_opinion_modifier = {
							who = ROOT
							name = opinion_popular_metamour
						}
					}
				}
			}
		}

		event_target:introducing_partner = {
			if = {
				limit = { 
					event_target:partner_to_introduce_lover_to = {
						is_metamour_of_PREV = no
					}
				}

				opinion = {
					name = opinion_popular_metamour
					who = event_target:partner_to_introduce_lover_to
				}
				reverse_opinion = {
					name = opinion_popular_metamour
					who = event_target:partner_to_introduce_lover_to
				}
			}
			if = {
				limit = { 
					event_target:lover_to_introduce = {
						is_metamour_of_PREV = no
					}
				}

				opinion = {
					name = opinion_popular_metamour
					who = event_target:lover_to_introduce
				}
				reverse_opinion = {
					name = opinion_popular_metamour
					who = event_target:lover_to_introduce
				}
			}

			character_event = { id = polyam.14 }
		}
		event_target:partner_to_introduce_lover_to = { save_event_target_as = new_lover }
		clear_event_target = lover_to_introduce
		clear_event_target = partner_to_introduce_lover_to
		clear_event_target = introducing_partner
		new_lover_effect = yes
	}
	option = {
		name = EVTOPTB_POLYAM_13 # friends
		ai_chance = {
			factor = 25
			mult_modifier = {
				factor = 0.1
				trait = shy
			}
			mult_modifier = {
				factor = 2
				trait = gregarious
			}
			mult_modifier = {
				factor = 0.1
				NAND = {
					has_opinion_modifier = {
						who = event_target:partner_to_introduce_lover_to
						name = opinion_popular_metamour
					}
					event_target:partner_to_introduce_lover_to = {
						has_opinion_modifier = {
							who = ROOT
							name = opinion_popular_metamour
						}
					}
				}
			}
		}
		add_friend = event_target:partner_to_introduce_lover_to
	}
	option = {
		name = EVTOPTC_POLYAM_13 # Decline
		ai_chance = {
			factor = 25
		}
		reverse_opinion = {
			name = opinion_rejected_friend
			who = event_target:partner_to_introduce_lover_to
			months = 6
		}
	}
}

character_event = { # polyam.14
	id = polyam.14
	is_triggered_only = yes
	picture = GFX_evt_lovers
	desc = EVTDESC_POLYAM_14
	portrait = event_target:lover_to_introduce

	ai = no

	option = {
		name = EVTOPTA_POLYAM_14
		event_target:partner_to_introduce_lover_to = { # for portrait to show
			save_event_target_as = partner_to_introduce_lover_to
		}
	}
}

character_event = { # autorespond event for players
	id = polyam.15
	is_triggered_only = yes
	picture = GFX_evt_lovers
	desc = EVTDESC_POLYAM_15
	
	option = {
		name = EVTOPTA_POLYAM_15
		
		hidden_effect = {
			set_character_flag = polyamour_autorespond_positively
		}
	}
	option = {
		name = EVTOPTB_POLYAM_15

		hidden_effect = {
			set_character_flag = polyamour_autorespond_neutrally
		}
	}
	option = {
		name = EVTOPTC_POLYAM_15

		hidden_effect = {
			set_character_flag = polyamour_autorespond_negatively
		}
	}
	option = {
		name = EVTOPTD_POLYAM_15

		custom_tooltip = {
			text = EVTOPTD_TOOLTIP_POLYAM_15

			set_character_flag = polyamour_autorespond_automatically
		}
	}

	after = {
		hidden_effect = {
			trigger_switch = {
				on_trigger = has_character_flag

				polyamour_current_event_2 = { clr_character_flag = polyamour_current_event_2 repeat_event = { id = polyam.2 } }
				polyamour_current_event_3 = { clr_character_flag = polyamour_current_event_3 repeat_event = { id = polyam.3 } }
				polyamour_current_event_4 = { clr_character_flag = polyamour_current_event_4 repeat_event = { id = polyam.4 } }
				polyamour_current_event_5 = { clr_character_flag = polyamour_current_event_5 repeat_event = { id = polyam.5 } }
				polyamour_current_event_6 = { clr_character_flag = polyamour_current_event_6 repeat_event = { id = polyam.6 } }
				polyamour_current_event_7 = { clr_character_flag = polyamour_current_event_7 repeat_event = { id = polyam.7 } }
				polyamour_current_event_8 = { clr_character_flag = polyamour_current_event_8 repeat_event = { id = polyam.8 } }
			}
			
		}
	}
}

# ROOT is partner to introduce lover to, FROM is lover to introduce
character_event = { # polyam.2 autorespond variant
	id = polyam.16
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { 
				is_close_relative = event_target:lover_to_introduce
				NOR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}

			opinion = {
				name = opinion_related_metamour
				who = event_target:lover_to_introduce
			}
			event_target:introducing_partner = {
				character_event = { id = polyam.3 }
			}
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_negatively }

			opinion = {
				name = opinion_unpopular_metamour
				who = event_target:lover_to_introduce
			}
			event_target:introducing_partner = {
				character_event = { id = polyam.3 }
			}
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_neutrally }

			opinion = {
				name = opinion_accepted_metamour
				who = event_target:lover_to_introduce
			}
			event_target:introducing_partner = {
				character_event = { id = polyam.4 }
			}
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_positively }

			opinion = {
				name = opinion_popular_metamour
				who = event_target:lover_to_introduce
			}
			event_target:introducing_partner = {
				character_event = { id = polyam.5 }
			}
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_automatically }

			random_list = {
				10 = {
					trigger = {
						OR = {
							religion_has_polyamory = no
							NOR = {
								is_friend = event_target:lover_to_introduce
								is_lover = event_target:lover_to_introduce
								is_consort = event_target:lover_to_introduce
								event_target:lover_to_introduce = { is_consort = ROOT }
								is_married = event_target:lover_to_introduce
							}
						}
					}
					mult_modifier = {
						factor = 3.0

						opinion = {
							who = event_target:lover_to_introduce
							value <= -25
						}
					}
					mult_modifier = {
						factor = 0.2

						event_target:lover_to_introduce = { 
							OR = {
								trait = kind 
								trait = temperate
							}
						}
					}
					mult_modifier = {
						factor = 3.0

						event_target:lover_to_introduce = { 
							OR = {
								trait = envious
								trait = proud
							}
						}
					}
					mult_modifier = {
						factor = 5.0

						event_target:lover_to_introduce = { 
							OR = {
								trait = wroth
								trait = cruel
							}
						}
					}
					mult_modifier = {
						factor = 0.2

						trait = kind
					}
					mult_modifier = {
						factor = 10.0

						is_rival = event_target:lover_to_introduce
					}
					mult_modifier = {
						factor = 3.5

						OR = {
							trait = envious
							trait = proud
						}
					}
					mult_modifier = {
						factor = 4.0

						religion_has_polyamory = no
					}

					opinion = {
						name = opinion_unpopular_metamour
						who = event_target:lover_to_introduce
					}
					event_target:introducing_partner = {
						character_event = { id = polyam.3 }
					}
				}
				50 = {
					mult_modifier = {
						factor = 3.0

						AND = {
							opinion = {
								who = event_target:lover_to_introduce
								value >= -25
							}
							opinion = {
								who = event_target:lover_to_introduce
								value <= 25
							}
						}
					}
					mult_modifier = {
						factor = 0.3

						trait = wroth
					}
					mult_modifier = {
						factor = 2.5

						trait = content
					}

					opinion = {
						name = opinion_accepted_metamour
						who = event_target:lover_to_introduce
					}
					event_target:introducing_partner = {
						character_event = { id = polyam.4 }
					}
				}
				10 = {
					mult_modifier = {
						factor = 3.0

						opinion = {
							who = event_target:lover_to_introduce
							value >= 25
						}
					}
					mult_modifier = {
						factor = 5
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 3
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 2
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_congenital_tier_1_trigger = yes
						}
					}
					mult_modifier = {
						factor = 5
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_non_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 3
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_non_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 2
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_non_congenital_tier_1_trigger = yes
						}
					}
					mult_modifier = {
						factor = 2.5

						event_target:lover_to_introduce = { 
							OR = {
								trait = kind 
								trait = temperate
							}
						}
					}
					mult_modifier = {
						factor = 0.3

						event_target:lover_to_introduce = { 
							OR = {
								trait = envious
								trait = proud
							}
						}
					}
					mult_modifier = {
						factor = 0.02

						event_target:lover_to_introduce = { 
							OR = {
								trait = wroth
								trait = cruel
							}
						}
					}
					mult_modifier = {
						factor = 0.2
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.35
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.5
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_congenital_tier_1_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.2
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_non_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.35
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_non_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.5
		
						event_target:lover_to_introduce = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_non_congenital_tier_1_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.3

						trait = proud
					}
					mult_modifier = {
						factor = 1.5

						trait = lustful
					}
					mult_modifier = {
						factor = 10.0

						OR = {
							is_lover = event_target:lover_to_introduce
							is_consort = event_target:lover_to_introduce
							event_target:lover_to_introduce = { is_consort = ROOT }
							is_married = event_target:lover_to_introduce
						}
					}
					mult_modifier = {
						factor = 5.0

						is_friend = event_target:lover_to_introduce
					}
					mult_modifier = {
						factor = 1.5

						trait = charitable
					}

					opinion = {
						name = opinion_popular_metamour
						who = event_target:lover_to_introduce
					}
					event_target:introducing_partner = {
						character_event = { id = polyam.5 }
					}
				}
			}
		}
		
	}
}


# ROOT is lover to introduce, FROM is introducing partner, FROMFROM is partner to introduce lover to
character_event = { # polyam.6, polyam.7, polyam.8 autorespond variant
	id = polyam.17
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { 
				is_close_relative = event_target:partner_to_introduce_lover_to
				NOR = {
					religion_has_incest = yes
					trait = lustful
					trait = hedonist
					trait = seducer
					trait = seductress
				}
			}

			opinion = {
				name = opinion_related_metamour
				who = event_target:partner_to_introduce_lover_to
			}
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_negatively }

			opinion = {
				name = opinion_unpopular_metamour
				who = event_target:partner_to_introduce_lover_to
			}
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_neutrally }

			opinion = {
				name = opinion_accepted_metamour
				who = event_target:partner_to_introduce_lover_to
			}
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_positively }

			opinion = {
				name = opinion_popular_metamour
				who = event_target:partner_to_introduce_lover_to
			}
			
		}
		else_if = {
			limit = { has_character_flag = polyamour_autorespond_automatically }

			random_list = {
				10 = {
					mult_modifier = {
						factor = 3.0

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_unpopular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						opinion = {
							who = event_target:partner_to_introduce_lover_to
							value <= -25
						}
					}
					mult_modifier = {
						factor = 0.5

						reverse_has_opinion_modifier = {
							name = opinion_unpopular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = kind
							trait = patient
						}
					}
					mult_modifier = {
						factor = 5.0

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_unpopular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						OR = {
							trait = wroth
							trait = envious
							trait = proud
						}
					}
					mult_modifier = {
						factor = 4.0

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_unpopular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						religion_has_polyamory = no
					}
					mult_modifier = {
						factor = 0.2

						reverse_has_opinion_modifier = {
							name = opinion_accepted_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = kind
							trait = patient
						}
					}

					mult_modifier = {
						factor = 2.5

						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
					}
					mult_modifier = {
						factor = 0

						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						religion_has_polyamory = yes
					}

					mult_modifier = {
						factor = 0.01

						reverse_has_opinion_modifier = {
							name = opinion_related_metamour
							who = event_target:partner_to_introduce_lover_to
						}
					}

					opinion = {
						name = opinion_unpopular_metamour
						who = event_target:partner_to_introduce_lover_to
					}
				}
				10 = {
					mult_modifier = {
						factor = 1.5

						reverse_has_opinion_modifier = {
							name = opinion_unpopular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = content
							trait = temperate
						}
					}

					mult_modifier = {
						factor = 3.0

						reverse_has_opinion_modifier = {
							name = opinion_accepted_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						opinion = {
							who = event_target:partner_to_introduce_lover_to
							value <= -25
						}
					}
					mult_modifier = {
						factor = 0.2

						reverse_has_opinion_modifier = {
							name = opinion_accepted_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = kind
							trait = patient
						}
					}
					mult_modifier = {
						factor = 5.0

						reverse_has_opinion_modifier = {
							name = opinion_accepted_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = wroth
							trait = envious
							trait = proud
						}
					}
					mult_modifier = {
						factor = 4.0

						reverse_has_opinion_modifier = {
							name = opinion_accepted_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						religion_has_polyamory = no
					}

					mult_modifier = {
						factor = 1.5
						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
					}
					mult_modifier = {
						factor = 2.5
						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = arbitrary
							trait = chaste
							trait = cynical
						}
					}

					opinion = {
						name = opinion_accepted_metamour
						who = event_target:partner_to_introduce_lover_to
					}
				}
				10 = {
					mult_modifier = {
						factor = 0

						reverse_has_opinion_modifier = {
							name = opinion_unpopular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
					}

					mult_modifier = {
						factor = 1.5

						reverse_has_opinion_modifier = {
							name = opinion_accepted_metamour
							who = event_target:partner_to_introduce_lover_to
						}
					}
					mult_modifier = {
						factor = 3.0

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						opinion = {
							who = event_target:partner_to_introduce_lover_to
							value >= 25
						}
					}
					mult_modifier = {
						factor = 5.0

						reverse_has_opinion_modifier = {
							name = opinion_accepted_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = charitable
							trait = temperate
						}
					}
					mult_modifier = {
						factor = 5

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 3

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 2

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_congenital_tier_1_trigger = yes
						}
					}
					mult_modifier = {
						factor = 5

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_non_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 3

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_non_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 2

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_fair_trait_non_congenital_tier_1_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.2

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.35

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.5

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_congenital_tier_1_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.2

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_non_congenital_tier_3_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.35

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_non_congenital_tier_2_trigger = yes
						}
					}
					mult_modifier = {
						factor = 0.5

						OR = {
							reverse_has_opinion_modifier = {
								name = opinion_accepted_metamour
								who = event_target:partner_to_introduce_lover_to
							}
							reverse_has_opinion_modifier = {
								name = opinion_popular_metamour
								who = event_target:partner_to_introduce_lover_to
							}
						}
						event_target:partner_to_introduce_lover_to = { 
							ROOT = { attracted_to_prev_trigger = yes }
							has_ugly_trait_non_congenital_tier_1_trigger = yes
						}
					}

					mult_modifier = {
						factor = 5

						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
					}
					mult_modifier = {
						factor = 2.0

						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							trait = lustful
							trait = gregarious
						}
					}
					mult_modifier = {
						factor = 10.0

						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						OR = {
							is_lover = event_target:partner_to_introduce_lover_to
							is_consort = event_target:partner_to_introduce_lover_to
							event_target:partner_to_introduce_lover_to = { is_consort = ROOT }
							is_married = event_target:partner_to_introduce_lover_to
						}
					}
					mult_modifier = {
						factor = 5.0

						reverse_has_opinion_modifier = {
							name = opinion_popular_metamour
							who = event_target:partner_to_introduce_lover_to
						}
						is_friend = event_target:partner_to_introduce_lover_to
					}

					opinion = {
						name = opinion_popular_metamour
						who = event_target:partner_to_introduce_lover_to
					}

				}
			}
		}
	}

	after = {
		event_target:partner_to_introduce_lover_to = {
			character_event = {
				id = polyam.9
				days = 30
				random = 90
			}
		}
	}
}


character_event = { # a child is born in polyamorous relationship, a landed spouse decide if they want to adopt the child
	id = polyam.100
	picture = GFX_evt_born_purple_byzantine
	is_triggered_only = yes # from event 300

	trigger = {
		FROM = {
			mother_even_if_dead = {
				OR = {
					is_married = ROOT
					is_consort = ROOT
				}
			}
		}
	}
	
	immediate = {
		FROM = { save_event_target_as = newborn }
		FROM = { mother_even_if_dead = { save_event_target_as = polyamory_mother } }
		FROM = { father_even_if_dead = { save_event_target_as = true_father } }
		ROOT = { save_event_target_as = polyamory_spouse }
	}

	desc = {
		trigger = {
			FROM = { father_even_if_dead = { always = yes } }
		}
		text = EVTDESC_POLYAM_100_CASE_1
	}

	desc = {
		trigger = {
			NOT = { FROM = { father_even_if_dead = { always = yes } } } # the true father is a non-existent character
		}
		text = EVTDESC_POLYAM_100_CASE_2
	}

	option = {
		name = EVTOPTA_POLYAM_100
		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 0

				num_of_children >= 30 # avoiding char panel lag
			}

			mult_modifier = {
				factor = 4

				trait = charitable
			}
			mult_modifier = {
				factor = 4

				trait = kind
			}
			mult_modifier = {
				factor = 4

				trait = content
			}
			mult_modifier = {
				factor = 2

				opinion = {
					who = event_target:polyamory_mother
					value >= 50
				}
			}
			mult_modifier = {
				factor = 3

				opinion = {
					who = event_target:polyamory_mother
					value >= 75
				}
			}
			mult_modifier = {
				factor = 4

				opinion = {
					who = event_target:polyamory_mother
					value >= 95
				}
			}
			mult_modifier = {
				factor = 2

				event_target:newborn = { is_smart_congenital_trigger = yes }
			}
			mult_modifier = {
				factor = 2

				event_target:newborn = { is_strong_congenital_trigger = yes }
			}
			mult_modifier = {
				factor = 2

				event_target:newborn = { has_fair_trait_congenital_trigger = yes }
			}
			mult_modifier = {
				factor = 2

				event_target:newborn = { trait = half_dragon }
			}
			mult_modifier = {
				factor = 4

				event_target:newborn = { trait = half_fiend }
				is_evil_religion = yes
			}
			mult_modifier = {
				factor = 4

				event_target:newborn = { trait = half_celestial }
				olrox_is_good_religion_trigger = yes
			}
			mult_modifier = {
				factor = 10

				NOT = {
					any_child = {
						is_alive = yes
						count >= 3
					}
				}
				OR = {
					fertility < 0.25
					is_old_enough_to_die_trigger = yes
				}
			}
			mult_modifier = {
				factor = 20

				num_of_children == 0
				OR = {
					fertility < 0.25
					is_old_enough_to_die_trigger = yes
				}
			}


			mult_modifier = {
				factor = 0.25

				trait = greedy
			}
			mult_modifier = {
				factor = 0.25

				trait = cruel
			}
			mult_modifier = {
				factor = 0.25

				trait = ambitious
			}
			mult_modifier = {
				factor = 0.25

				trait = envious
			}
			mult_modifier = {
				factor = 0.5

				opinion = {
					who = event_target:polyamory_mother
					value < 0
				}
			}
			mult_modifier = {
				factor = 0.33

				opinion = {
					who = event_target:polyamory_mother
					value < -25
				}
			}
			mult_modifier = {
				factor = 0.25

				opinion = {
					who = event_target:polyamory_mother
					value < -50
				}
			}
			mult_modifier = {
				factor = 0.5

				event_target:newborn = { is_dumb_congenital_trigger = yes }
			}
			mult_modifier = {
				factor = 0.5

				event_target:newborn = { is_weak_congenital_trigger = yes }
			}
			mult_modifier = {
				factor = 0.5

				event_target:newborn = { has_ugly_trait_congenital_trigger = yes }
			}
			mult_modifier = {
				factor = 0.25

				event_target:newborn = { trait = half_fiend }
				olrox_is_good_religion_trigger = yes
				
			}
			mult_modifier = {
				factor = 0.25

				event_target:newborn = { trait = half_celestial }
				is_evil_religion = yes
			}
			mult_modifier = {
				factor = 0.25

				event_target:newborn = { trait = half_troll }
				NOR = {
					trait = creature_troll
					trait = half_troll
					culture = troll
					religion = vaprak
				}
			}
		}

		event_target:newborn = {
			show_portrait = yes
			if = {
				limit = { 
					OR = { # change the dynasty to father's when it makes sense
						event_target:polyamory_mother = { is_married_matrilineally = no }
						NOT = { dynasty = event_target:polyamory_mother }
						trigger_if = {
							limit = { event_target:polyamory_mother = { is_lowborn = yes } }

							ROOT = { is_lowborn = no }
						}
					}
				}

				dynasty = ROOT
			}
			set_father = ROOT
			if = {
				limit = { event_target:true_father = { always = yes } }
	
				set_real_father = event_target:true_father
			}
			ROOT = { recalc_succession = yes }
		}
		event_target:polyamory_mother = {
			show_portrait = yes
			opinion = {
				name = opinion_accepted_anothers_child
				who = ROOT
				years = 10
			}
		}
		if = {
			limit = { event_target:true_father = { always = yes } }

			event_target:true_father = { 
				show_portrait = yes
				character_event = { id = polyam.101 }
			}
		}
	}

	option = {
		name = EVTOPTB_POLYAM_100
		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 0

				event_target:polyamory_mother = { same_sex = ROOT } # same sex female spouse always adopts the child
				num_of_children < 30 # unless is close to lagging the char panel
			}
		}
		if = {
			limit = { event_target:true_father = { always = yes } }

			event_target:true_father = { 
				show_portrait = yes
				character_event = { id = polyam.102 }
			}
		}
	}
}

character_event = { # the true father gets a notification about adoption
	id = polyam.101
	picture = GFX_evt_born_purple_byzantine
	desc = EVTDESC_POLYAM_101
	is_triggered_only = yes

	option = {
		name = EVTOPTA_POLYAM_101
		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 4

				trait = charitable
			}
			mult_modifier = {
				factor = 4

				trait = kind
			}
			mult_modifier = {
				factor = 4

				trait = content
			}
			mult_modifier = {
				factor = 4

				religion_has_polyamory = yes
			}
			mult_modifier = {
				factor = 4

				has_opinion_modifier = {
					name = opinion_accepted_metamour
					who = event_target:polyamory_spouse
				}
			}
			mult_modifier = {
				factor = 10

				has_opinion_modifier = {
					name = opinion_popular_metamour
					who = event_target:polyamory_spouse
				}
			}
			mult_modifier = {
				factor = 15

				is_friend = event_target:polyamory_spouse
			}
		}
		event_target:polyamory_mother = {
			show_portrait = yes
		}
		event_target:newborn = {
			show_portrait = yes
		}
	}
	option = {
		name = EVTOPTB_POLYAM_101
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0

				OR = {
					is_lowborn = yes
					trait = content
					NOR = {
						trait = envious
						trait = ambitious
						trait = greedy
					}
				}
			}
			mult_modifier = {
				factor = 4

				trait = greedy
			}
			mult_modifier = {
				factor = 4

				trait = cruel
			}
			mult_modifier = {
				factor = 4

				trait = ambitious
			}
			mult_modifier = {
				factor = 4

				trait = envious
			}
			mult_modifier = {
				factor = 4

				has_opinion_modifier = {
					name = opinion_unpopular_metamour
					who = event_target:polyamory_spouse
				}
			}
		}

		opinion = {
			name = opinion_adopted_my_child
			who = event_target:polyamory_spouse
			years = 10
		}

		if = {
			limit = { is_friend = event_target:polyamory_spouse }

			remove_friend = event_target:polyamory_spouse
		}
		else_if = {
			limit = { 
				has_opinion_modifier = {
					name = opinion_popular_metamour
					who = event_target:polyamory_spouse
				}
			}

			remove_opinion = {
				name = opinion_popular_metamour
				who = event_target:polyamory_spouse
			}
			opinion = {
				name = opinion_accepted_metamour
				who = event_target:polyamory_spouse
			}
		}
		else_if = {
			limit = { 
				has_opinion_modifier = {
					name = opinion_accepted_metamour
					who = event_target:polyamory_spouse
				}
			}

			remove_opinion = {
				name = opinion_accepted_metamour
				who = event_target:polyamory_spouse
			}
			opinion = {
				name = opinion_unpopular_metamour
				who = event_target:polyamory_spouse
			}
		}
		else_if = {
			limit = { NOT = { is_rival = event_target:polyamory_spouse } }

			add_rival = event_target:polyamory_spouse
		}
	}
}

character_event = { # the true father gets a notification about the child
	id = polyam.102
	picture = GFX_evt_born_purple_byzantine
	desc = EVTDESC_POLYAM_102
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		event_target:polyamory_mother = {
			show_portrait = yes
		}
		event_target:newborn = {
			show_portrait = yes
		}
	}
}

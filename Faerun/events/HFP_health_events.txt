# Written by Flavio

namespace = HFP

###################################################
###################################################

# Physical state is affected by physique_variable.
# Threshold to become fat is 15. Any score above causes increasingly bad health issues.
# Threshold to become malnourished is -15. Any score below causes increasingly bad health issues.

# If you apply one of the two traits by event without checking the variable, any event that does check the variable will automatically remove it whenever it fires.
# All variable checks are saved in 00_scripted_effects, these are the most commonly used:

# gain_weight_small_effect		(+5 physique_variable)
# gain_weight_medium_effect		(+10 physique_variable)
# gain_weight_large_effect		(+15 physique_variable)

# balance_weight_small_effect	(+/-2 physique_variable)
# balance_weight_medium_effect	(+/-5 physique_variable)
# balance_weight_large_effect	(+/-10 physique_variable)

# lose_weight_small_effect		(-5 physique_variable)
# lose_weight_medium_effect		(-10 physique_variable)
# lose_weight_large_effect		(-15 physique_variable)

## Balance_Weight_Effects are used for training and healthy habits events.
## They reduce physique_variable of fat characters and increase physique_variable of malnourished characters, attempting to bring it back to 0.

# weight_trait_check_effect		Checks and applies the correct trait the character deserves without affecting the physique_variable.

# Note that you need to use weight_trait_check after using one of the other effects, otherwise the traits will not be applied automatically, even if
# the character has surpassed the variable threshold.

# Example:


#	option = { # I will fast for a week
#		name = I_SEE
#		lose_weight_medium_effect = yes		# Reduces the variable's score
#		weight_trait_check_effect = yes		# Checks what is the variable's score after reduction and either removes fat, adds malnourished, or both, depending on the circumstance.
#	}

# The check is handled by a separate effect in the event of the scripter wishing to have it fire in a later event, or in case the trait is added in some other manner.

###################################################
###################################################

# Notification: fat
character_event = {
	id = HFP.20600
	desc = EVTDESCHFP20600
	picture = GFX_evt_fancy_feast

	is_triggered_only = yes
	notification = yes

	ai = no

	option = {
		name = I_SEE
	}
}

# Notification: no longer fat
character_event = {
	id = HFP.20601
	desc = EVTDESCHFP20601
	picture = GFX_evt_recovery

	is_triggered_only = yes
	notification = yes

	ai = no

	option = {
		name = I_SEE
	}
}

# Notification: malnourished
character_event = {
	id = HFP.20602
	desc = EVTDESCHFP20602
	picture = GFX_evt_bad_news

	is_triggered_only = yes
	notification = yes

	ai = no

	option = {
		name = I_SEE
	}
}

# Notification: no longer malnourished
character_event = {
	id = HFP.20603
	desc = EVTDESCHFP20603
	picture = GFX_evt_recovery

	is_triggered_only = yes
	notification = yes

	ai = no

	option = {
		name = I_SEE
	}
}

# on_action: on_five_years pulse. Hidden event to check all of a character's traits/modifiers/etc. and determine if he gains or lose a small amount of physique_variable.
## The event may then decide if the character receives a random event tied to his current score or not.
 character_event = {
	id = HFP.20604

	is_triggered_only = yes # on_five_year_pulse
	hide_window = yes

	min_age = 11

	trigger = {
		practical_age <= 55
	}

	immediate = {
		# Traits
		if = {
			limit = {
				trait = indulgent_wastrel

				trigger_if = {
					limit = { prisoner = yes }
					has_character_modifier = house_arrest
				}
			}
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = {
				trait = tough_soldier
				check_variable = { which = physique_variable value >= 1 }
			}
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = haughty }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = timid }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = {
				trait = rowdy
				check_variable = { which = physique_variable value >= 1 }
			}
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = {
				trait = indolent

				trigger_if = {
					limit = { prisoner = yes }
					has_character_modifier = house_arrest
				}
			}
			change_variable = { which = physique_variable value = 2 }
		}

		if = {
			limit = {
				trait = playful
				check_variable = { which = physique_variable value >= 1 }
			}
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = fussy }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { trait = stressed }

			if = {
				limit = {
					trait = gluttonous

					trigger_if = {
						limit = { prisoner = yes }
						has_character_modifier = house_arrest
					}
				}

				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { trait = temperate }
				change_variable = { which = physique_variable value = -1 }
			}
			else = {
				random_list = {
					50 = { change_variable = { which = physique_variable value = -1 } }
					50 = { change_variable = { which = physique_variable value = 1 } }
					10 = { }
				}
			}
		}

		if = {
			limit = { trait = depressed }

			if = {
				limit = {
					trait = gluttonous

					trigger_if = {
						limit = { prisoner = yes }
						has_character_modifier = house_arrest
					}
				}

				change_variable = { which = physique_variable value = 2 }
			}

			else_if = {
				limit = { trait = temperate }
				change_variable = { which = physique_variable value = -2 }
			}
			else = {
				random_list = {
					50 = { change_variable = { which = physique_variable value = -2 } }
					50 = { change_variable = { which = physique_variable value = 2 } }
					10 = { }
				}
			}
		}

		if = {
			limit = { trait = temperate }

			change_variable = { which = physique_variable value = -1 }

			if = {
				limit = { trait = slothful }
				change_variable = { which = physique_variable value = -1 }
			}

			if = {
				limit = { trait = wroth }
				change_variable = { which = physique_variable value = -1 }
			}
		}
		else_if = {
			limit = { trait = gluttonous }

			if = {
				limit = {
					trigger_if = {
						limit = { prisoner = yes }
						has_character_modifier = house_arrest
					}
				}

				change_variable = { which = physique_variable value = 1 }

				if = {
					limit = { trait = slothful }
					change_variable = { which = physique_variable value = 1 }
				}

				if = {
					limit = { trait = wroth }
					change_variable = { which = physique_variable value = 1 }
				}
			}
		}
		else = {
			if = {
				limit = { trait = wroth }

				random_list = {
					50 = { change_variable = { which = physique_variable value = -1 } }
					50 = { change_variable = { which = physique_variable value = 1 } }
					10 = { }
				}
			}


			if = {
				limit = { trait = slothful }

				random_list = {
					50 = { change_variable = { which = physique_variable value = -1 } }
					50 = { change_variable = { which = physique_variable value = 1 } }
				}
			}
		}

		if = {
			limit = { trait = maimed }
			change_variable = { which = physique_variable value = -1 }
		}
		if = {
			limit = { trait = infirm }
			change_variable = { which = physique_variable value = -1 }
		}
		if = {
			limit = { trait = incapable }
			change_variable = { which = physique_variable value = -4 }
		}
		if = {
			limit = { trait = drunkard }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = physician }

			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
		}

		if = {
			limit = { trait = ill }
			change_variable = { which = physique_variable value = -1 }
		}
		if = {
			limit = { trait = pneumonic }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = syphilitic }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = leper }
			change_variable = { which = physique_variable value = -3 }
		}
		if = {
			limit = { trait = has_tuberculosis }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = has_typhoid_fever }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = has_typhus }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = has_bubonic_plague }
			change_variable = { which = physique_variable value = -3 }
		}
		if = {
			limit = { trait = has_measles }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = has_small_pox }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = has_aztec_disease }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = sickly }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = flu }
			change_variable = { which = physique_variable value = -1 }
		}
		if = {
			limit = { trait = dysentery }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = gout }
			change_variable = { which = physique_variable value = -1 }
		}
		if = {
			limit = { trait = food_poisoning }
			change_variable = { which = physique_variable value = -3 }
		}
		if = {
			limit = { trait = cancer }
			change_variable = { which = physique_variable value = -2 }
		}
		if = {
			limit = { trait = dancing_plague }
			change_variable = { which = physique_variable value = -3 }
		}
		if = {
			limit = { trait = scurvy }
			change_variable = { which = physique_variable value = -1 }
		}
		if = {
			limit = { trait = mangled }
			change_variable = { which = physique_variable value = -3 }
		}
		if = {
			limit = { trait = pregnant }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = {
				is_strong_tier_3_trigger = yes
				check_variable = { which = physique_variable value < -1 }
			}
			change_variable = { which = physique_variable value = 2 }
		}

		if = {
			limit = { 
				OR = {
					is_strong_tier_2_trigger = yes
					is_strong_tier_1_trigger = yes
				}
				check_variable = { which = physique_variable value < -1 }
			}
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = harelip }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = inbred }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = {
				is_weak_tier_3_trigger = yes
				check_variable = { which = physique_variable value >= 1 }
			}
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = {
				OR = {
					is_weak_tier_2_trigger = yes
					is_weak_tier_1_trigger = yes
				}
				check_variable = { which = physique_variable value >= 1 }
			}
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = sturdy }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = hedonist }
			change_variable = { which = physique_variable value = 2 }
		}

		if = {
			limit = { trait = scholar }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = mystic }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = duelist }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = {
				trait = hunter

				trigger_if = {
					limit = { prisoner = yes }
					has_character_modifier = house_arrest
				}
			}

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = {
				trait = falconer

				trigger_if = {
					limit = { prisoner = yes }
					has_character_modifier = house_arrest
				}
			}

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { trait = diligent }

			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -2 }
			}
			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 2 }
			}
		}

		if = {
			limit = { trait = shy }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = gregarious }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = paranoid }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { is_pilgrim = yes } # Is on a pilgrimage
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { trait = travelling }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { trait = decadent }
			change_variable = { which = physique_variable value = 2 }
		}

		if = {
			limit = {
				OR = {
					trait = monk
					trait = nun
				}

				trait = diligent
			}

			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = eunuch }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = peasant_leader }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = heresiarch }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { trait = adventurer }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { trait = varangian }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { trait = berserker }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { trait = viking }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { trait = pirate }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { trait = ravager }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { trait = shieldmaiden }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { is_member_of_any_warrior_lodge_trigger = yes }

			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
		}

		if = {
			limit = { has_crusade_trait_trigger = yes }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 2 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -2 }
			}
		}

		if = {
			limit = { trait = in_hiding }

			if = {
				limit = { trait = gluttonous }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { trait = temperate }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = {
				trait = cannibal_trait
				prisoner = no
			}
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = kow_tow_travels }
			change_variable = { which = physique_variable value = -2 }
		}

		#if = {
		#	limit = { trait = on_hajj }
		#	change_variable = { which = physique_variable value = -2 }
		#}

		if = {
			limit = { trait = vomiting }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { trait = diarrhea }
			change_variable = { which = physique_variable value = -2 }
		}

		# Modifiers
		if = {
			limit = {
				has_character_modifier = well_fed

				trigger_if = {
					limit = { prisoner = yes }
					has_character_modifier = house_arrest
				}
			}
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { has_character_modifier = apathetic }
			change_variable = { which = physique_variable value = -3 }
		}

		if = {
			limit = { has_character_modifier = mother_vow_temperance }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { has_character_modifier = mother_exposed_to_elements }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { has_character_modifier = the_dungeon }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { has_character_modifier = the_oubliette }
			change_variable = { which = physique_variable value = -3 }
		}

		if = {
			limit = { has_character_modifier = holding_large_feast }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { in_seclusion = yes }

			if = {
				limit = { trait = gluttonous }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { trait = temperate }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { has_character_modifier = in_meditation }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { has_character_modifier = doing_penance }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { has_character_modifier = out_traveling }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { has_character_modifier = wine_meat }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { trait = diligent }

			if = {
				limit = { has_character_modifier = the_bookaddict }
				change_variable = { which = physique_variable value = -1 }
			}

			if = {
				limit = { has_character_modifier = tortured }
				change_variable = { which = physique_variable value = -1 }
			}

			if = {
				limit = { has_character_modifier = the_bibliophage }
				change_variable = { which = physique_variable value = -1 }
			}
		}

		if = {
			limit = { has_character_modifier = tortured_prisoner }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { has_character_modifier = master_hunter }

			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
		}

		if = {
			limit = { has_character_modifier = wild_hunter }

			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -1 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= -1 } }
				change_variable = { which = physique_variable value = 1 }
			}
		}

		if = {
			limit = { has_character_modifier = hard_diet } # Works for balance against both extremes

			if = {
				limit = { trait = diligent }

				if = {
					limit = { check_variable = { which = physique_variable value >= 1 } }
					change_variable = { which = physique_variable value = -12 }
				}
				else_if = {
					limit = { check_variable = { which = physique_variable value < -1 } }
					change_variable = { which = physique_variable value = 12 }
				}
			}
			else_if = {
				limit = { trait = slothful }

				if = {
					limit = { check_variable = { which = physique_variable value >= 1 } }
					change_variable = { which = physique_variable value = -8 }
				}
				else_if = {
					limit = { check_variable = { which = physique_variable value < -1 } }
					change_variable = { which = physique_variable value = 8 }
				}
			}
			else = {
				if = {
					limit = { check_variable = { which = physique_variable value >= 1 } }
					change_variable = { which = physique_variable value = -10 }
				}
				else_if = {
					limit = { check_variable = { which = physique_variable value < -1 } }
					change_variable = { which = physique_variable value = 10 }
				}
			}
		}

		if = {
			limit = { has_character_modifier = hunters_physique }

			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -2 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 2 }
			}
		}

		if = {
			limit = { has_character_modifier = one_year_fasting }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { has_character_modifier = the_flagellant }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { has_character_modifier = fabulous_feast }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { has_character_modifier = muslim_hedonist }
			change_variable = { which = physique_variable value = 2 }
		}

		if = {
			limit = { has_character_modifier = broken_spirit }
			change_variable = { which = physique_variable value = -4 }
		}

		if = {
			limit = { has_character_modifier = sleep_deprivation }
			change_variable = { which = physique_variable value = -3 }
		}

		if = {
			limit = { has_character_modifier = normal_food_shortage }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { has_character_modifier = starving_food_shortage }
			change_variable = { which = physique_variable value = -3 }
		}

		if = {
			limit = { has_character_modifier = greedy_food_shortage }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { has_character_modifier = mild_illness }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { has_character_modifier = severe_illness }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { has_character_modifier = bedridden_illness }
			change_variable = { which = physique_variable value = -3 }
		}

		if = {
			limit = { has_character_modifier = hashish_addict }
			change_variable = { which = physique_variable value = 2 }
		}

		if = {
			limit = { has_character_modifier = withdrawal_symptoms }
			change_variable = { which = physique_variable value = -2 }
		}

		if = {
			limit = { has_character_modifier = focused_on_training }

			if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -2 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 2 }
			}
		}

		if = {
			limit = { has_character_modifier = bad_nights_sleep }
			change_variable = { which = physique_variable value = -1 }
		}

		if = {
			limit = { has_character_modifier = nocturnal_studies }
			change_variable = { which = physique_variable value = -1 }
		}

		# Status
		# if = { 
			# limit = { 
				# religion = buddhist
			# }
			# change_variable = { which = physique_variable value = -1 }
		# }

		if = {
			limit = { prisoner = yes }

			if = {
				limit = { has_character_modifier = house_arrest }
				change_variable = { which = physique_variable value = 2 }
			}
			else = {
				change_variable = { which = physique_variable value = -5 }
			}
		}

		if = {
			limit = {
				war = yes
				in_command = yes
			}

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 2 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value = 1 } }
				change_variable = { which = physique_variable value = -2 }
			}
		}

		if = {
			limit = { is_patrician = yes }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { is_republic = yes }
			change_variable = { which = physique_variable value = 1 }
		}

		if = {
			limit = { is_feudal = yes }

			random = {
				chance = 20
				change_variable = { which = physique_variable value = 1 }
			}
		}
		else_if = {
			limit = { is_tribal = yes }

			random = {
				chance = 30
				change_variable = { which = physique_variable value = -2 }
			}
		}
		else_if = {
			limit = { is_nomadic = yes }

			random = {
				chance = 30
				change_variable = { which = physique_variable value = -2 }
			}
		}

		if = {
			limit = {
				is_married = yes
				has_living_children = yes
			}

			if = {
				limit = { any_child = { is_adult = no } }
				change_variable = { which = physique_variable value = 2 }
			}
			else = {
				change_variable = { which = physique_variable value = 1 }
			}
		}

		if = {
			limit = {
				has_minor_title = title_prince
				is_ruler = no
				NOT = { has_minor_title = title_commander }

				trigger_if = {
					limit = { prisoner = yes }
					has_character_modifier = house_arrest
				}
			}

			if = {
				limit = {
					is_female = no
					NOT = { trait = diligent }
				}

				if = {
					limit = { # Lazy prince
						any_close_relative = {
							is_parent_of = ROOT
							real_tier = KING
						}
					}

					change_variable = { which = physique_variable value = 1 }
				}
				else_if = {
					limit = { # Lazy imperial prince
						any_close_relative = {
							is_parent_of = ROOT
							real_tier = EMPEROR
						}
					}

					change_variable = { which = physique_variable value = 2 }
				}
			}
			else_if = {
				limit = {
					is_female = yes

					NOR = {
						has_law = status_of_women_3
						has_law = status_of_women_4
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
					}
				}

				if = {
					limit = { # Lazy princess
						any_close_relative = {
							is_parent_of = ROOT
							real_tier = KING
						}
					}

					change_variable = { which = physique_variable value = 2 }
				}
				else_if = {
					limit = { # Lazy imperial princess
						any_close_relative = {
							is_parent_of = ROOT
							real_tier = EMPEROR
						}
					}

					change_variable = { which = physique_variable value = 3 }
				}
			}
		}

		# Focus
		if = {
			limit = {
				trigger_if = {
					limit = { prisoner = yes }
					has_character_modifier = house_arrest
				}
			}

			if = {
				limit = { has_focus = focus_family }
				change_variable = { which = physique_variable value = 2 }
			}
			else_if = {
				limit = { has_focus = focus_carousing }
				change_variable = { which = physique_variable value = 3 }
			}
			else_if = {
				limit = { has_focus = focus_scholarship }
				change_variable = { which = physique_variable value = -1 }
			}
			else_if = {
				limit = { has_focus = focus_theology }
				change_variable = { which = physique_variable value = -1 }
			}
			else_if = {
				limit = { has_focus = focus_war }

				if = {
					limit = { check_variable = { which = physique_variable value < -1 } }
					change_variable = { which = physique_variable value = 1 }
				}
				if = {
					limit = { check_variable = { which = physique_variable value >= 1 } }
					change_variable = { which = physique_variable value = -1 }
				}
			}
			else_if = {
				limit = { has_focus = focus_hunting }

				if = {
					limit = { check_variable = { which = physique_variable value < -1 } }
					change_variable = { which = physique_variable value = 2 }
				}
				else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
					change_variable = { which = physique_variable value = -2 }
				}
			}

			# Teen Focus
			else_if = {
				limit = { has_focus = focus_ed_diplomacy }
				change_variable = { which = physique_variable value = 1 }
			}
			else_if = {
				limit = { has_focus = focus_ed_learning }
				change_variable = { which = physique_variable value = -1 }
			}
			else_if = {
				limit = { has_focus = focus_ed_martial }

				if = {
					limit = { check_variable = { which = physique_variable value < -1 } }
					change_variable = { which = physique_variable value = 1 }
				}
				else_if = {
					limit = { check_variable = { which = physique_variable value >= 1 } }
					change_variable = { which = physique_variable value = -1 }
				}
			}
		}

		# Societies
		# if = { 
			# limit = { 
				# is_monastic_member_trigger = yes
			# }
			# change_variable = { which = physique_variable value = -2 }
		# }
		if = {
			limit = { society_member_of = emerald_enclave }

			if = {
				limit = { check_variable = { which = physique_variable value < -1 } }
				change_variable = { which = physique_variable value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 1 } }
				change_variable = { which = physique_variable value = -3 }
			}
		}

		# Prosperity
		if = {
			limit = { location = { has_province_modifier = prosperity_modifier_1 } }

			random = {
				chance = 5
				change_variable = { which = physique_variable value = 1 }
			}
		}
		else_if = {
			limit = { location = { has_province_modifier = prosperity_modifier_2 } }

			random = {
				chance = 25
				change_variable = { which = physique_variable value = 1 }
			}
		}
		else_if = {
			limit = { location = { has_province_modifier = prosperity_modifier_3 } }

			random = {
				chance = 50
				change_variable = { which = physique_variable value = 1 }
			}
		}
		else_if = {
			limit = { location = { has_province_modifier = depopulated_1 } }

			random = {
				chance = 50
				change_variable = { which = physique_variable value = -1 }
			}
		}
		else_if = {
			limit = { location = { has_province_modifier = depopulated_2 } }
			change_variable = { which = physique_variable value = -1 }
		}
		else_if = {
			limit = { location = { has_province_modifier = depopulated_3 } }
			change_variable = { which = physique_variable value = -2 }
		}

		# Africa: Drought
		if = {
			limit = { location = { has_province_modifier = africa_drought_risk } }
			change_variable = { which = physique_variable value = -2 }
		}
		else_if = {
			limit = { location = { has_province_modifier = africa_drought } }
			change_variable = { which = physique_variable value = -3 }
		}

		# Health complications
		if = {
			limit = {
				practical_age >= 35

				OR = {
					check_variable = { which = physique_variable value >= 30 }
					check_variable = { which = physique_variable value < -30 }
				}
			}

			health = -0.75
		}

		# Special modifiers
		if = {
			limit = {
				trait = is_fat

				OR = {
					has_character_modifier = coping_glutton
					has_character_modifier = stress_relief
					has_character_modifier = anti_depression
					has_character_modifier = munificent_modifier
					has_character_modifier = jolly_matron_modifier
					has_character_modifier = jolly_patriarch_modifier
				}

				NOT = { has_character_modifier = hard_diet }
			}

			random_list = {
				30 = {
					mult_modifier = {
						factor = 0.8
						trait = slothful
					}

					mult_modifier = {
						factor = 0.8
						trait = gluttonous
					}
					# Nothing
				}

				50 = { change_variable = { which = physique_variable value = 1 } }

				20 = {
					mult_modifier = {
						factor = 0.8
						trait = diligent
					}

					mult_modifier = {
						factor = 0.8
						trait = temperate
					}

					change_variable = { which = physique_variable value = 2 }
				}
			}
		}
		else_if = {
			limit = {
				trait = is_malnourished

				OR = {
					has_character_modifier = coping_glutton
					has_character_modifier = stress_relief
					has_character_modifier = anti_depression
					has_character_modifier = extremely_temperate
					has_character_modifier = restless_study
					has_character_modifier = restless_prayer
					has_character_modifier = malnourished_paranoia
					has_character_modifier = tireless_worker
				}

				NOT = { has_character_modifier = hard_diet }
			}

			random_list = {
				30 = {
					mult_modifier = {
						factor = 0.8
						trait = slothful
					}

					mult_modifier = {
						factor = 0.8
						trait = gluttonous
					}
					# Nothing
				}

				50 = { change_variable = { which = physique_variable value = -1 } }

				20 = {
					mult_modifier = {
						factor = 0.8
						trait = diligent
					}

					mult_modifier = {
						factor = 0.8
						trait = temperate
					}

					change_variable = { which = physique_variable value = -2 }
				}
			}
		}

		# Faerun block
		if = { 
			limit = { 
				OR = {
					z_fighter = yes
					z_ranger = yes
					z_barbarian = yes
					z_paladin = yes
					z_monk = yes
					z_rogue = yes
				}
				check_variable = { which = physique_variable value < 0 }
			}

			change_variable = { which = physique_variable value = 1 }
		}
		if = {
			limit = { 
				OR = {
					z_fighter = yes
					z_ranger = yes
					z_barbarian = yes
					z_paladin = yes
					z_monk = yes
					z_rogue = yes
				}
				check_variable = { which = physique_variable value > 0 }
			}

			subtract_variable = { which = physique_variable value = 1 }
		}

		weight_flavor_conditions_effect = yes # Fire flavor event if trigger has been met

		#####################################################

		if = {
			limit = { NOT = { has_character_flag = flag_primed_physique } }
			weight_trait_check_effect = yes # Apply or remove either of the traits, depending on resulting score, if no random flavor is about to fire
		}
	}
}

# Random growing fat event
## Checks for spouse's/close relatives' response

# Random starving event
## Checks for spouse's/close relatives' response


# Growing fat - hidden event to determine reason
character_event = {
	id = HFP.20606

	desc = {
		text = EVTDESCAHFP20606
		picture = GFX_evt_fancy_feast
		trigger = {
			has_character_flag = flag_fat_for_gluttony
			is_female = no
		}
	}
	desc = {
		text = EVTDESCBHFP20606
		picture = GFX_evt_fancy_feast
		trigger = {
			has_character_flag = flag_fat_for_gluttony
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCCHFP20606
		picture = GFX_evt_bad_news
		trigger = {
			has_character_flag = flag_fat_for_stress
			is_female = no
		}
	}
	desc = {
		text = EVTDESCDHFP20606
		picture = GFX_evt_bad_news_female
		trigger = {
			has_character_flag = flag_fat_for_stress
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCEHFP20606
		picture = GFX_evt_bad_news
		trigger = {
			has_character_flag = flag_fat_for_depression
			is_female = no
		}
	}
	desc = {
		text = EVTDESCEHFP20606	# EVTDESCFHFP20606 Unneeded
		picture = GFX_evt_bad_news_female
		trigger = {
			has_character_flag = flag_fat_for_depression
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCGHFP20606
		picture = GFX_evt_drunk
		trigger = {
			has_character_flag = flag_fat_for_sloth
			is_female = no
		}
	}
	desc = {
		text = EVTDESCHHFP20606
		picture = GFX_evt_recovery
		trigger = {
			has_character_flag = flag_fat_for_sloth
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCIHFP20606
		picture = GFX_evt_jugglers_arabic
		trigger = {
			has_character_flag = flag_fat_for_hedonism
			is_female = no
		}
	}
	desc = {
		text = EVTDESCIHFP20606	# EVTDESCLHFP20606 Unneeded
		picture = GFX_evt_brothel
		trigger = {
			has_character_flag = flag_fat_for_hedonism
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCMHFP20606
		picture = GFX_evt_birth
		trigger = {
			has_character_flag = flag_fat_for_family
		}
	}
	desc = {
		text = EVTDESCNHFP20606
		picture = GFX_evt_daughter_asking_father
		trigger = {
			has_character_flag = flag_fat_for_content
		}
	}
	desc = {
		text = EVTDESCOHFP20606
		picture = GFX_evt_fancy_feast
		trigger = {
			has_character_flag = flag_fat_for_carousing
			is_female = no
		}
	}
	desc = {
		text = EVTDESCOHFP20606 # EVTDESCPHFP20606 Unneeded
		picture = GFX_evt_fancy_feast
		trigger = {
			has_character_flag = flag_fat_for_carousing
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCQHFP20606
		picture = GFX_evt_bad_news
		trigger = {
			has_character_flag = flag_fat_for_lust
			is_female = no # Eunuch
		}
	}
	desc = {
		text = EVTDESCRHFP20606
		picture = GFX_evt_bad_news_female
		trigger = {
			has_character_flag = flag_fat_for_lust
			is_female = yes # Celibate
		}
	}
	desc = {
		text = EVTDESCSHFP20606
		picture = GFX_evt_quarrel
		trigger = {
			has_character_flag = flag_fat_for_wroth
			is_female = no
		}
	}
	desc = {
		text = EVTDESCTHFP20606
		picture = GFX_evt_quarrel
		trigger = {
			has_character_flag = flag_fat_for_wroth
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCUHFP20606
		picture = GFX_evt_drunk
		trigger = {
			has_character_flag = flag_fat_for_drunkard
			is_female = no
		}
	}
	desc = {
		text = EVTDESCVHFP20606
		picture = GFX_evt_brothel
		trigger = {
			has_character_flag = flag_fat_for_drunkard
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCWHFP20606
		picture = GFX_evt_feast
		trigger = {
			has_character_flag = flag_fat_for_boredom
			is_female = no
		}
	}
	desc = {
		text = EVTDESCXHFP20606
		picture = GFX_evt_brothel
		trigger = {
			has_character_flag = flag_fat_for_boredom
			is_female = yes
		}
	}
	picture = GFX_evt_feast

	is_triggered_only = yes

	min_age = 20
	only_capable = yes
	prisoner = no

	trigger = {
		check_variable = {
			which = physique_variable
			value >= 6
		}

		NOT = { trait = is_fat }
		# NOT = { trait = temperate }
		is_inaccessible_trigger = no

		# Can happen only once
		has_fat_for_flag_trigger = no

		OR = { # Possible reasons
			trait = gluttonous
			trait = stressed
			trait = depressed
			trait = slothful
			trait = hedonist
			trait = wroth
			trait = drunkard
			has_focus = focus_carousing

			# Happy mom
			trigger_if = {
				limit = { is_female = yes }

				any_child = {
					is_adult = no
				}

				OR = {
					trait = kind
					trait = content
					has_focus = focus_family
					trait = patient
				}

				NOR = {
					trait = cruel
					trait = envious
				}
			}

			# Content husband
			trigger_else = {
				is_married = yes

				OR = {
					num_of_consorts >= 2
					num_of_children >= 2
					num_of_spouses >= 2
				}

				OR = {
					trait = kind
					trait = content
					has_focus = focus_family
					trait = patient
				}

				NOR = {
					trait = cruel
					trait = envious
				}
			}

			AND = { # Frustrated lustful survivor mom
				has_character_flag = survivor_mom
				trait = celibate
				trait = lustful
			}

			AND = { # Frustrated eunuch
				trait = eunuch
				trait = lustful
			}

			AND = { # Generic fallback
				NOT = { trait = temperate }

				check_variable = {
					which = physique_variable
					value >= 10
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 0.75
			war = yes
			in_command = yes
		}

		mult_modifier = {
			factor = 0.75
			trait = temperate
		}

		mult_modifier = {
			factor = 1.85
			trait = hedonist
		}

		mult_modifier = {
			factor = 1.25
			trait = one_legged
		}

		mult_modifier = {
			factor = 0.75
			trait = mangled
		}

		mult_modifier = {
			factor = 0.75
			trait = weak
		}

		mult_modifier = {
			factor = 0.85
			trait = delicate
		}

		mult_modifier = {
			factor = 0.95
			trait = soft
		}

		mult_modifier = {
			factor = 0.75
			is_weak_non_congenital_trigger = yes
		}

		mult_modifier = {
			factor = 1.15
			trait = strong
		}

		mult_modifier = {
			factor = 1.10
			trait = tough
		}

		mult_modifier = {
			factor = 1.05
			trait = hardy
		}

		mult_modifier = {
			factor = 1.25
			is_strong_non_congenital_trigger = yes
		}

		mult_modifier = {
			factor = 1.5
			trait = sturdy
		}

		mult_modifier = {
			factor = 1.5
			trait = gluttonous
		}

		mult_modifier = {
			factor = 0.75
			has_focus = focus_war
		}

		mult_modifier = {
			factor = 0.5
			has_focus = focus_hunting
		}

		mult_modifier = {
			factor = 0.9
			has_focus = focus_scholarship
		}

		mult_modifier = {
			factor = 0.9
			has_focus = focus_theology
		}

		mult_modifier = {
			factor = 1.75
			has_focus = focus_family
		}

		mult_modifier = {
			factor = 1.75
			has_focus = focus_carousing
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 25
		}

		mult_modifier = {
			factor = 0.9
			practical_age < 35
		}

		mult_modifier = {
			factor = 0.65
			trait = diligent
		}

		mult_modifier = {
			factor = 1.5
			trait = slothful
		}

		mult_modifier = {
			factor = 1.25
			trait = depressed
		}

		mult_modifier = {
			factor = 0.5
			is_tribal = yes
		}

		mult_modifier = {
			factor = 0.35
			is_nomadic = yes
		}

		mult_modifier = {
			factor = 1.35

			practical_age >= 40
			is_tribal = no
			is_nomadic = no
		}

		mult_modifier = {
			factor = 1.75

			is_female = yes # Settled mother
			has_living_children = yes
			is_married = yes

			trigger_if = {
				limit = { has_lover = yes }
				any_lover = { is_married = ROOT }
			}

			NOR = {
				trait = shieldmaiden
				trait = sea_queen
				has_character_flag = special_marshal
			}

			liege = {
				higher_real_tier_than = COUNT

				NOR = {
					has_law = status_of_women_3
					has_law = status_of_women_4
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}

		mult_modifier = {
			factor = 1.75

			is_female = yes # Bored wife
			lower_real_tier_than = DUKE

			any_spouse = {
				higher_real_tier_than = COUNT

				NOR = {
					has_law = status_of_women_3
					has_law = status_of_women_4
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}

		mult_modifier = {
			factor = 1.75

			is_female = no # Bored consort
			lower_real_tier_than = DUKE

			spouse = {
				higher_real_tier_than = COUNT

				OR = {
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}

		mult_modifier = {
			factor = 1.5
			trait = eunuch
		}

		mult_modifier = {
			factor = 1.25
			real_tier = KING
		}

		mult_modifier = {
			factor = 1.35
			real_tier = EMPEROR
		}

		mult_modifier = {
			factor = 1.35
			has_character_modifier = well_fed
		}

		mult_modifier = {
			factor = 0.85
			check_variable = { which = physique_variable value < 8 }
		}

		mult_modifier = {
			factor = 0.85
			check_variable = { which = physique_variable value < 10 }
		}

		mult_modifier = {
			factor = 1.25
			check_variable = { which = physique_variable value >= 11 }
		}

		mult_modifier = {
			factor = 1.25
			check_variable = { which = physique_variable value >= 12 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value >= 13 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value >= 14 }
		}

		mult_modifier = {
			factor = 1.5 # Should already have it by this point, but just in case...
			check_variable = { which = physique_variable value >= 15 }
		}

		mult_modifier = {
			factor = 2
			check_variable = { which = physique_variable value >= 20 }
		}

		mult_modifier = {
			factor = 3
			check_variable = { which = physique_variable value >= 25 }
		}
	}

	immediate = {
		# First pick a reason
		random_list = {
			1 = {
				trigger = { trait = gluttonous }
				set_character_flag = flag_fat_for_gluttony
			}

			8 = {
				trigger = { trait = stressed }
				set_character_flag = flag_fat_for_stress
			}

			10 = {
				trigger = { trait = depressed }
				set_character_flag = flag_fat_for_depression
			}

			3 = {
				trigger = { trait = slothful }
				set_character_flag = flag_fat_for_sloth
			}

			10 = {
				trigger = { trait = hedonist }
				set_character_flag = flag_fat_for_hedonism
			}

			10 = {
				trigger = {
					is_female = yes

					any_child = {
						is_adult = no
						is_alive = yes
					}

					OR = {
						has_focus = focus_family
						trait = kind
						trait = content
					}
				}

				set_character_flag = flag_fat_for_family
			}

			10 = {
				trigger = { has_focus = focus_carousing }
				set_character_flag = flag_fat_for_carousing
			}

			20 = {
				trigger = {
					is_female = no

					OR = {
						num_of_children >= 2
						num_of_spouses >= 2
						num_of_consorts >= 2
					}

					OR = {
						has_focus = focus_family
						trait = kind
						trait = content
					}
				}
				set_character_flag = flag_fat_for_content
			}

			30 = {
				trigger = {
					trait = celibate
					has_character_flag = survivor_mom
					trait = lustful
				}

				set_character_flag = flag_fat_for_lust
			}

			30 = {
				trigger = {
					trait = eunuch
					trait = lustful
				}

				set_character_flag = flag_fat_for_lust
			}

			10 = {
				trigger = { trait = wroth }
				set_character_flag = flag_fat_for_wroth
			}

			5 = {
				trigger = { trait = drunkard }
				set_character_flag = flag_fat_for_drunkard
			}

			fallback = {
				set_character_flag = flag_fat_for_boredom
			}
		}
	}

	option = { # Find something else to do.
		name = EVTOPTAHFP20606
		tooltip_info = diligent

		trigger = {
			has_character_flag = flag_fat_for_lust
			trait = diligent
		}

		custom_tooltip = { text = tooltip_workout_20600 }

		clr_character_flag = flag_primed_physique
		balance_weight_small_effect = yes
		weight_trait_check_effect = yes

		ai_chance = {
			factor = 70

			mult_modifier = {
				factor = 0.5
				trait = gluttonous
			}
		}
	}

	option = { # Not the fate of a warrior!
		name = EVTOPTBHFP20606
		tooltip_info = combat_rating

		trigger = {
			combat_rating >= 40
			NOT = { has_character_flag = flag_fat_for_lust }
			is_ill = no
			is_maimed_trigger = no
		}

		custom_tooltip = { text = tooltip_workout_20600 }

		balance_weight_small_effect = yes
		weight_trait_check_effect = yes
		clr_character_flag = flag_primed_physique

		ai_chance = {
			factor = 80

			mult_modifier = {
				factor = 0.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
		}
	}

	option = { # Comply
		name = {
			text = EVTOPTCHFP20606_A
			trigger = {
				OR = {
					has_character_flag = flag_fat_for_gluttony
					has_character_flag = flag_fat_for_boredom
				}
			}
		}
		name = {
			text = EVTOPTCHFP20606_B
			trigger = {
				OR = {
					has_character_flag = flag_fat_for_stress
					has_character_flag = flag_fat_for_depression
				}
			}
		}
		name = {
			text = EVTOPTCHFP20606_C
			trigger = { has_character_flag = flag_fat_for_sloth }
		}
		name = {
			text = EVTOPTCHFP20606_D
			trigger = { has_character_flag = flag_fat_for_hedonism }
		}
		name = {
			text = EVTOPTCHFP20606_F
			trigger = { has_character_flag = flag_fat_for_carousing }
		}
		name = {
			text = EVTOPTCHFP20606_G
			trigger = {
				OR = {
					has_character_flag = flag_fat_for_family
					has_character_flag = flag_fat_for_content
				}
			}
		}
		name = {
			text = EVTOPTCHFP20606_H
			trigger = { has_character_flag = flag_fat_for_lust }
		}
		name = {
			text = EVTOPTCHFP20606_I
			trigger = { has_character_flag = flag_fat_for_wroth }
		}
		name = {
			text = EVTOPTCHFP20606_L
			trigger = { has_character_flag = flag_fat_for_drunkard }
		}

		custom_tooltip = { text = tooltip_warning_20606 }

		apply_weight_modifier_effect = yes

		if = {
			limit = { has_character_flag = flag_primed_physique }
			clr_character_flag = flag_primed_physique
		}
		else = {
			gain_weight_large_effect = yes
		}

		weight_trait_check_effect = yes

		if = {
			limit = {
				OR = {
					has_character_flag = flag_fat_for_gluttony
					has_character_flag = flag_fat_for_boredom
					has_character_flag = flag_fat_for_stress
					has_character_flag = flag_fat_for_depression
					has_character_flag = flag_fat_for_sloth
					has_character_flag = flag_fat_for_hedonism
					has_character_flag = flag_fat_for_carousing
					has_character_flag = flag_fat_for_wroth
					has_character_flag = flag_fat_for_drunkard
				}
			}

			if = {
				limit = { trait = stressed }
				custom_tooltip = { text = tooltip_physique_loses_stressed }
			}

			if = {
				limit = { trait = depressed }
				custom_tooltip = { text = tooltip_physique_loses_depressed }
			}

			if = {
				limit = {
					OR = {
						has_character_flag = flag_fat_for_hedonism
						has_character_flag = flag_fat_for_carousing
						has_character_flag = flag_fat_for_drunkard

					}
				}

				custom_tooltip = { text = tooltip_physique_becomes_popular }
			}

			hidden_effect = {
				random_list = {
					45 = {
						trigger = { trait = stressed }

						character_event = {
							id = HFP.20607 # Lose stressed
							days = 50
							random = 50
						}
					}

					45 = {
						trigger = { trait = depressed }

						character_event = {
							id = HFP.20608 # Lose depressed
							days = 50
							random = 50
						}
					}

					2 = {
						trigger = {
							NOR = {
								has_character_flag = flag_fat_for_hedonism
								has_character_flag = flag_fat_for_carousing
							}
						}

						mult_modifier = {
							factor = 0.5

							check_variable = {
								which = physique_variable
								value >= 20
							}
						}

						mult_modifier = {
							factor = 0.5
							is_weak_non_congenital_trigger = no
						}

						character_event = {
							id = HFP.20609 # Gain health
							days = 50
							random = 50
						}
					}

					5 = {
						mult_modifier = {
							factor = 1.5

							check_variable = {
								which = physique_variable
								value >= 20
							}
						}

						mult_modifier = {
							factor = 1.75
							trait = sturdy
						}

						character_event = {
							id = HFP.20610 # Lose health
							days = 50
							random = 50
						}
					}

					30 = {
						trigger = {
							OR = {
								has_character_flag = flag_fat_for_hedonism
								has_character_flag = flag_fat_for_carousing
							}
						}

						mult_modifier = {
							factor = 0.5
							trait = greedy
						}

						character_event = {
							id = HFP.20611 # Become charitable, vassal opinion
							days = 50
							random = 50
						}
					}

					10 = {
						trigger = {
							is_ruler = yes

							NOR = {
								has_character_flag = flag_fat_for_stress
								has_character_flag = flag_fat_for_depression
								has_character_flag = flag_fat_for_wroth
							}
						}

						character_event = {
							id = HFP.20663 # Become proud
							days = 50
							random = 50
						}
					}

					5 = {
						trigger = {
							NOT = { has_character_flag = flag_fat_for_wroth }
						}

						character_event = {
							id = HFP.20664 # Become patient
							days = 50
							random = 50
						}
					}

					1 = {
						trigger = {
							NOR = {
								has_character_flag = flag_fat_for_stress
								has_character_flag = flag_fat_for_depression
								has_character_flag = flag_fat_for_wroth
							}
						}

						character_event = {
							id = HFP.20665 # Become content
							days = 50
							random = 50
						}
					}
				}
			}
		}

		else_if = {
			limit = {
				OR = {
					has_character_flag = flag_fat_for_family
					has_character_flag = flag_fat_for_content
				}
			}

			if = {
				limit = { trait = stressed }
				custom_tooltip = { text = tooltip_physique_loses_stressed }
			}

			if = {
				limit = { trait = depressed }
				custom_tooltip = { text = tooltip_physique_loses_depressed }
			}

			custom_tooltip = {
				text = tooltip_physique_becomes_beloved

				random_list = {
					35 = {
						trigger = { trait = stressed }

						character_event = {
							id = HFP.20607 # Lose stressed
							days = 50
							random = 50
						}
					}

					35 = {
						trigger = { trait = depressed }

						character_event = {
							id = HFP.20608 # Lose depressed
							days = 50
							random = 50
						}
					}

					3 = {
						mult_modifier = {
							factor = 1.5

							check_variable = {
								which = physique_variable
								value >= 20
							}
						}

						mult_modifier = {
							factor = 1.75
							trait = sturdy
						}

						character_event = {
							id = HFP.20610 # Lose health
							days = 50
							random = 50
						}
					}

					30 = {
						mult_modifier = {
							factor = 0.5
							trait = cruel
						}

						character_event = {
							id = HFP.20613 # Become kind, loved by family
							days = 50
							random = 50
						}
					}

					10 = {
						trigger = {
							is_ruler = yes

							NOR = {
								has_character_flag = flag_fat_for_stress
								has_character_flag = flag_fat_for_depression
								has_character_flag = flag_fat_for_wroth
							}
						}

						character_event = {
							id = HFP.20663 # Become proud
							days = 50
							random = 50
						}
					}

					5 = {
						trigger = {
							NOT = { has_character_flag = flag_fat_for_wroth }
						}

						character_event = {
							id = HFP.20664 # Become patient
							days = 50
							random = 50
						}
					}

					1 = {
						trigger = {
							NOR = {
								has_character_flag = flag_fat_for_stress
								has_character_flag = flag_fat_for_depression
								has_character_flag = flag_fat_for_wroth
							}
						}

						character_event = {
							id = HFP.20665 # Become content
							days = 50
							random = 50
						}
					}
				}
			}
		}

		else_if = {
			limit = { has_character_flag = flag_fat_for_lust }

			if = {
				limit = { trait = stressed }
				custom_tooltip = { text = tooltip_physique_loses_stressed }
			}

			if = {
				limit = { trait = depressed }
				custom_tooltip = { text = tooltip_physique_loses_depressed }
			}

			custom_tooltip = {
				text = tooltip_physique_becomes_learned

				random_list = {
					35 = {
						trigger = { trait = stressed }

						character_event = {
							id = HFP.20607 # Lose stressed
							days = 50
							random = 50
						}
					}

					35 = {
						trigger = { trait = depressed }

						character_event = {
							id = HFP.20608 # Lose depressed
							days = 50
							random = 50
						}
					}

					5 = {
						mult_modifier = {
							factor = 1.5

							check_variable = {
								which = physique_variable
								value >= 20
							}
						}

						mult_modifier = {
							factor = 1.75
							trait = sturdy
						}

						character_event = {
							id = HFP.20610 # Lose health
							days = 50
							random = 50
						}
					}

					30 = {
						mult_modifier = {
							factor = 0.5
							trait = cruel
						}

						character_event = {
							id = HFP.20615 # Gain learning
							days = 50
							random = 50
						}
					}
				}
			}
		}

		# Outside assistance
		hidden_effect = {
			# First check for spouse
			# Then check for lover
			# Then check for friend
			# Then check for close relative
			# Else out of luck

			if = { # Spouse helps
				limit = {
					any_spouse = { is_inaccessible_or_incapable_trigger = no }
				}

				random_spouse = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20616
						days = 10
						random = 20
					}
				}
			}
			else_if = { # Lover helps
				limit = {
					any_lover = { is_inaccessible_or_incapable_trigger = no }
				}

				random_lover = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20616
						days = 10
						random = 20
					}
				}
			}
			else_if = { # Friend helps
				limit = {
					any_friend = { is_inaccessible_or_incapable_trigger = no }
				}

				random_friend = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20616
						days = 10
						random = 20
					}
				}
			}
			else = { # Close relative helps
				random_close_relative = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20616
						days = 10
						random = 20
					}
				}
			}
		}

		ai_chance = {
			factor = 70

			mult_modifier = {
				factor = 1.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 1.5
				trait = slothful
			}
		}
	}

	option = { # Resist
		name = EVTOPTDHFP20606

		custom_tooltip = { text = tooltip_physique_fat_resist }

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes
		clr_character_flag = flag_primed_physique

		hidden_effect = {
			random_list = {
				80 = { # Success
					character_event = {
						id = HFP.20621 # Balanced recovery
						days = 50
						random = 50
					}
				}

				20 = { # Failure
					mult_modifier = {
						factor = 1.5
						trait = slothful
					}

					mult_modifier = {
						factor = 1.5
						trait = gluttonous
					}

					mult_modifier = {
						factor = 1.5
						trait = drunkard
					}

					mult_modifier = {
						factor = 1.5
						trait = content
					}

					mult_modifier = {
						factor = 1.75
						trait = hedonist
					}

					mult_modifier = {
						factor = 1.5
						practical_age >= 40
					}

					mult_modifier = {
						factor = 0.75
						combat_rating >= 20
					}

					mult_modifier = {
						factor = 0.75
						combat_rating >= 30
					}

					mult_modifier = {
						factor = 0.5
						combat_rating >= 40
					}

					mult_modifier = {
						factor = 0.5
						combat_rating >= 50
					}

					character_event = {
						id = HFP.20622 # Relapse, final chance
						days = 50
						random = 50
					}
				}
			}
		}

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 1.5
				trait = temperate
			}

			mult_modifier = {
				factor = 1.5
				trait = diligent
			}
		}
	}
}

## Acceptance results:
# Fat character no longer stressed
character_event = {
	id = HFP.20607
	desc = EVTDESCHFP20607
	picture = GFX_evt_fancy_feast

	is_triggered_only = yes

	trigger = {
		trait = is_fat
		has_fat_for_flag_trigger = yes # Won't fire if recovered in the meantime due to thirdparty help
	}

	option = {
		name = EVTOPTAHFP20607
		tooltip_info = is_fat

		if = {
			limit = { has_character_modifier = stress_relief }
			remove_character_modifier = stress_relief
		}

		if = {
			limit = { trait = stressed }
			remove_trait = stressed
		}
		else = {
			custom_tooltip = {
				text = tooltip_health_improves
				health = 0.5
			}
		}

		# clear_fat_flags_effect = yes
	}
}

# Fat character no longer depressed
character_event = {
	id = HFP.20608
	picture = GFX_evt_fancy_feast

	desc = {
		text = EVTDESCAHFP20608
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20608
		trigger = { is_female = yes }
	}

	is_triggered_only = yes

	trigger = {
		trait = is_fat
		has_fat_for_flag_trigger = yes # Won't fire if recovered in the meantime due to thirdparty help
	}

	option = {
		name = EVTOPTAHFP20608
		tooltip_info = is_fat

		if = {
			limit = { has_character_modifier = anti_depression }
			remove_character_modifier = anti_depression
		}

		if = {
			limit = { trait = depressed }
			remove_trait = depressed
		}
		else = {
			custom_tooltip = {
				text = tooltip_health_improves
				health = 0.5
			}
		}

		# clear_fat_flags_effect = yes
	}
}

# Fat character small health boost
character_event = {
	id = HFP.20609
	desc = EVTDESCHFP20609
	picture = GFX_evt_fancy_feast

	is_triggered_only = yes

	trigger = {
		trait = is_fat
		has_fat_for_flag_trigger = yes # Won't fire if recovered in the meantime due to thirdparty help
	}

	option = {
		name = EVTOPTAHFP20609
		tooltip_info = is_fat

		health = 0.25
		# clear_fat_flags_effect = yes
	}
}

# Fat character loses health
character_event = {
	id = HFP.20610
	desc = EVTDESCHFP20610
	picture = GFX_evt_bad_news

	is_triggered_only = yes

	trigger = {
		trait = is_fat
		has_fat_for_flag_trigger = yes # Won't fire if recovered in the meantime due to thirdparty help
	}

	option = {
		name = EVTOPTAHFP20610
		tooltip_info = is_fat

		custom_tooltip = {
			text = tooltip_health_deteriorates
			health = -0.5
		}

		# clear_fat_flags_effect = yes
	}
}

# Fat carouser becomes charitable/popular
character_event = {
	id = HFP.20611
	desc = EVTDESCHFP20611
	picture = GFX_evt_sultan

	is_triggered_only = yes

	trigger = {
		trait = is_fat
		has_fat_for_flag_trigger = yes # Won't fire if recovered in the meantime due to thirdparty help
	}

	option = {
		name = EVTOPTAHFP20611
		tooltip_info = is_fat

		if = {
			limit = { trait = greedy }
			remove_trait = greedy
		}
		else_if = {
			limit = { trait = charitable }
			tiered_prestige_reward_effect = yes
		}
		else = {
			add_trait = charitable
		}

		custom_tooltip = {
			text = tooltip_physique_popularity

			any_courtier_or_vassal = {
				limit = {
					NOT = {
						has_opinion_modifier = {
							name = opinion_did_not_take_my_advice
							who = ROOT
						}
					}
				}

				character_event = { id = HFP.20612 }
			}
		}

		# clear_fat_flags_effect = yes
	}
}

# Notify vassals and courtiers, give opinion
character_event = {
	id = HFP.20612
	desc = EVTDESCHFP20612
	picture = GFX_evt_sultan

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20612

		opinion = {
			name = opinion_jovial_host
			who = FROM
		}
	}
}

# Fat mother becomes kind/beloved by family
character_event = {
	id = HFP.20613
	picture = GFX_evt_daughter_asking_father

	desc = {
		text = EVTDESCAHFP20613
		picture = GFX_evt_daughter_asking_father
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20613
		picture = GFX_evt_birth
		trigger = { is_female = yes }
	}

	is_triggered_only = yes

	trigger = {
		trait = is_fat

		trigger_if = { # Must still have children
			limit = { is_female = yes }
			has_living_children = yes
		}
		trigger_else = { # Must still be married
			OR = {
				is_married = yes
				num_of_consorts >= 1
			}
		}

		has_fat_for_flag_trigger = yes # Won't fire if recovered in the meantime due to thirdparty help
	}

	option = {
		name = EVTOPTAHFP20613
		tooltip_info = is_fat

		if = {
			limit = { trait = cruel }
			remove_trait = cruel
		}
		else_if = {
			limit = { trait = kind }
			tiered_piety_reward_effect = yes
		}
		else = {
			add_trait = kind
		}

		custom_tooltip = {
			text = tooltip_physique_beloved

			any_close_relative = {
				limit = {
					NOT = {
						has_opinion_modifier = {
							name = opinion_did_not_take_my_advice
							who = ROOT
						}
					}
				}

				character_event = { id = HFP.20614 }
			}
		}

		# clear_fat_flags_effect = yes
	}
}

# Notify close family members, give opinion
character_event = {
	id = HFP.20614
	desc = EVTDESCAHFP20614

	picture = {
		picture = GFX_evt_daughter_asking_father
		trigger = { FROM = { is_female = no } }
	}
	picture = {
		picture = GFX_evt_birth
		trigger = { FROM = { is_female = yes } }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20614

		if = {
			limit = { FROM = { is_female = no } }

			opinion = {
				name = opinion_jovial_patriarch
				who = FROM
				years = 15
			}
		}
		else = {
			opinion = {
				name = opinion_jovial_matron
				who = FROM
				years = 15
			}
		}
	}
}

# Fat lustful becomes reader
character_event = {
	id = HFP.20615
	desc = EVTDESCHFP20615
	picture = GFX_evt_library

	trigger = {
		trait = is_fat
		has_fat_for_flag_trigger = yes # Won't fire if recovered in the meantime due to thirdparty help
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20615
		tooltip_info = is_fat

		if = {
			limit = { trait = slothful }
			remove_trait = slothful
		}
		else_if = {
			limit = { trait = diligent }
			change_learning = 2
		}
		else = {
			add_trait = diligent
		}

		# clear_fat_flags_effect = yes
	}
}

#############################################

# Spouse/lover/etc. notified of character's state
character_event = {
	id = HFP.20616
	picture = GFX_evt_fancy_feast

	desc = {
		text = EVTDESCAHFP20616
		trigger = { FROM = { is_female = no } }
	}
	desc = {
		text = EVTDESCBHFP20616
		trigger = { FROM = { is_female = yes } }
	}

	is_triggered_only = yes

	trigger = {
		FROM = {
			trait = is_fat
			is_alive = yes
		}
	}

	option = { # Finds nothing wrong
		name = EVTOPTAHFP20616
		tooltip_info = is_fat

		trigger = { trait = is_fat }

		custom_tooltip = { text = tooltip_20616_A }

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_flattered
				who = ROOT
				years = 5
			}

			character_event = { id = HFP.20617 }
		}

		ai_chance = {
			factor = 70

			mult_modifier = {
				factor = 1.5
				trait = slothful
			}

			mult_modifier = {
				factor = 1.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 0.5
				trait = temperate
			}

			mult_modifier = {
				factor = 0.5
				trait = diligent
			}
		}
	}

	option = { # Berates politely
		name = EVTOPTBHFP20616
		tooltip_info = diplomacy

		trigger = { diplomacy >= 10 }

		custom_tooltip = { text = tooltip_20616_B }

		hidden_effect = {
			FROM = {
				set_character_flag = flag_physique_persuasion
				character_event = { id = HFP.20618 }
			}
		}

		ai_chance = {
			factor = 30

			mult_modifier = {
				factor = 0.5
				trait = cruel
			}

			mult_modifier = {
				factor = 1.75
				trait = kind
			}
		}
	}

	option = { # Berates rudely
		name = EVTOPTCHFP20616

		custom_tooltip = { text = tooltip_20616_C }

		FROM = {
			character_event = { id = HFP.20618 }
		}

		ai_chance = {
			factor = 30

			mult_modifier = {
				factor = 0.5
				trait = kind
			}

			mult_modifier = {
				factor = 1.75
				trait = cruel
			}

			mult_modifier = {
				factor = 1.5
				trait = honest
			}
		}
	}

	option = { # Does not care
		name = EVTOPTDHFP20616

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 2

				opinion = {
					who = FROM
					value < 0
				}
			}

			mult_modifier = {
				factor = 4

				opinion = {
					who = FROM
					value < -50
				}
			}
		}
	}
}

# Fat character receives appreciation
character_event = {
	id = HFP.20617
	desc = EVTDESCHFP20617
	picture = GFX_evt_fancy_feast

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHFP20617

		tooltip = {
			opinion = {
				name = opinion_flattered
				who = FROM
				years = 3
			}
		}
	}
}

# Fat character warned by loved one
character_event = {
	id = HFP.20618
	picture = GFX_evt_courtiers_talking

	desc = {
		text = EVTDESCAHFP20618
		trigger = { has_character_flag = flag_physique_persuasion }
	}
	desc = {
		text = EVTDESCBHFP20618
		trigger = {
			NOT = { has_character_flag = flag_physique_persuasion }
		}
	}

	is_triggered_only = yes

	option = { # Heed plea
		name = EVTOPTAHFP20618

		custom_tooltip = { text = tooltip_20618_A }

		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
		remove_weight_modifier_effect = yes

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_took_my_advice
				who = ROOT
				years = 5
			}

			character_event = {
				id = HFP.20619
				days = 20
			}
		}

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes
		clear_fat_flags_effect = yes

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = trusting
			}
		}
	}

	option = { # Ignore
		name = EVTOPTBHFP20618

		custom_tooltip = { text = tooltip_20618_B }

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_did_not_take_my_advice
				who = ROOT
				years = 5
			}

			character_event = {
				id = HFP.20620
				days = 20
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.75
				trait = stubborn
			}

			mult_modifier = {
				factor = 0.15
				has_character_flag = flag_physique_persuasion
			}
		}
	}

	after = {
		clr_character_flag = flag_physique_persuasion
	}
}

# Third party notified character took advice
character_event = {
	id = HFP.20619
	desc = EVTDESCHFP20619
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHFP20619

		tooltip = {
			opinion = {
				name = opinion_took_my_advice
				who = FROM
				years = 5
			}
		}
	}
}

# Third party notified character ignored advice
character_event = {
	id = HFP.20620
	desc = EVTDESCHFP20620
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHFP20620

		tooltip = {
			opinion = {
				name = opinion_did_not_take_my_advice
				who = FROM
				years = 5
			}
		}
	}
}

# Character balanced out
character_event = {
	id = HFP.20621
	desc = EVTDESCHFP20621
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	immediate = {
		balance_weight_medium_effect = yes
	}

	option = {
		name = EVTOPTAHFP20621

		if = {
			limit = { trait = gluttonous }
			remove_trait = gluttonous
		}

		if = {
			limit = {
				check_variable = {
					which = physique_variable
					value < 15
				}
			}

			weight_trait_check_effect = yes
		}

		clear_fat_flags_effect = yes
	}
}

# Character relapse - last chance
character_event = {
	id = HFP.20622
	desc = EVTDESCHFP20622
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20622

		trigger = {
			OR = {
				has_character_flag = flag_fat_for_gluttony
				has_character_flag = flag_fat_for_boredom
			}
		}

		custom_tooltip = { text = tooltip_20622_A }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTBHFP20622

		trigger = {
			has_character_flag = flag_fat_for_stress
			has_character_flag = flag_fat_for_wroth
		}

		custom_tooltip = { text = tooltip_20622_B }

		if = {
			limit = { trait = depressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				add_trait_depressed_effect = yes
			}
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTCHFP20622

		trigger = { has_character_flag = flag_fat_for_depression }

		custom_tooltip = { text = tooltip_20622_C }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTDHFP20622

		trigger = { has_character_flag = flag_fat_for_sloth }

		custom_tooltip = { text = tooltip_20622_D }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTEHFP20622

		trigger = {
			OR = {
				has_character_flag = flag_fat_for_hedonism
				has_character_flag = flag_fat_for_carousing
				has_character_flag = flag_fat_for_drunkard
			}
		}

		custom_tooltip = { text = tooltip_20622_E }

		if = {
			limit = { trait = depressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				add_trait_depressed_effect = yes
			}
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTZHFP20622

		trigger = { has_character_flag = flag_fat_for_drunkard }

		custom_tooltip = { text = tooltip_20622_Z }

		if = {
			limit = { trait = depressed }

			remove_trait = drunkard

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				remove_trait = drunkard
				add_trait_depressed_effect = yes
			}
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTFHFP20622

		trigger = {
			OR = {
				has_character_flag = flag_fat_for_family
				has_character_flag = flag_fat_for_content
			}
		}

		custom_tooltip = { text = tooltip_20622_F }

		if = {
			limit = { trait = kind }
			remove_trait = kind
		}
		else = {
			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTFHGP20622

		trigger = {
			has_character_flag = flag_fat_for_lust
			is_female = yes
		}

		custom_tooltip = { text = tooltip_20622_G }

		if = {
			limit = { trait = celibate }
			remove_trait = celibate
			set_character_flag = survivor_mom_broken_vow
		}
		else = {
			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTFHHP20622

		trigger = {
			has_character_flag = flag_fat_for_lust
			is_female = no
		}

		custom_tooltip = { text = tooltip_20622_H }

		if = {
			limit = { trait = depressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				add_trait_depressed_effect = yes
			}
		}

		clear_fat_flags_effect = yes
		lose_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = { # Stop trying
		name = {
			text = EVTOPTCHFP20622_A
			trigger = {
				OR = {
					has_character_flag = flag_fat_for_gluttony
					has_character_flag = flag_fat_for_boredom
				}
			}
		}
		name = {
			text = EVTOPTCHFP20622_B
			trigger = {
				OR = {
					has_character_flag = flag_fat_for_stress
					has_character_flag = flag_fat_for_depression
				}
			}
		}
		name = {
			text = EVTOPTCHFP20622_C
			trigger = { has_character_flag = flag_fat_for_sloth }
		}
		name = {
			text = EVTOPTCHFP20622_D
			trigger = { has_character_flag = flag_fat_for_hedonism }
		}
		name = {
			text = EVTOPTCHFP20622_E
			trigger = { has_character_flag = flag_fat_for_carousing }
		}
		name = {
			text = EVTOPTCHFP20622_F
			trigger = {
				OR = {
					has_character_flag = flag_fat_for_family
					has_character_flag = flag_fat_for_content
				}
			}
		}
		name = {
			text = EVTOPTCHFP20622_G
			trigger = { has_character_flag = flag_fat_for_lust }
		}
		name = {
			text = EVTOPTCHFP20622_H
			trigger = { has_character_flag = flag_fat_for_wroth }
		}
		name = {
			text = EVTOPTCHFP20622_I
			trigger = { has_character_flag = flag_fat_for_drunkard }
		}

		custom_tooltip = { text = tooltip_20622_I }

		remove_trait_silently_stressed_effect = yes
		remove_character_modifier = hard_diet
		gain_weight_small_effect = yes
		# clear_fat_flags_effect = yes
	}
}

## Starving

# Growing thinner, what to do?
character_event = {
	id = HFP.20629

	desc = {
		text = EVTDESCAHFP20629
		picture = GFX_evt_garden
		trigger = {
			has_character_flag = flag_malnourished_for_temperance
			is_female = no
		}
	}
	desc = {
		text = EVTDESCBHFP20629
		picture = GFX_evt_garden
		trigger = {
			has_character_flag = flag_malnourished_for_temperance
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCCHFP20629
		picture = GFX_evt_bad_news
		trigger = {
			has_character_flag = flag_malnourished_for_stress
			is_female = no
		}
	}
	desc = {
		text = EVTDESCDHFP20629
		picture = GFX_evt_courtiers_talking
		trigger = {
			has_character_flag = flag_malnourished_for_stress
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCEHFP20629
		picture = GFX_evt_bad_news
		trigger = {
			has_character_flag = flag_malnourished_for_depression
			is_female = no
		}
	}
	desc = {
		text = EVTDESCEHFP20629 # EVTDESCFHFP20629 Unneeded
		picture = GFX_evt_bad_news_female
		trigger = {
			has_character_flag = flag_malnourished_for_depression
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCGHFP20629
		picture = GFX_evt_drunk
		trigger = {
			has_character_flag = flag_malnourished_for_sloth
			is_female = no
		}
	}
	desc = {
		text = EVTDESCGHFP20629 # EVTDESCHHFP20629 Unneeded
		picture = GFX_evt_recovery
		trigger = {
			has_character_flag = flag_malnourished_for_sloth
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCIHFP20629
		picture = GFX_evt_library
		trigger = {
			has_character_flag = flag_malnourished_for_study
			is_female = no
		}
	}
	desc = {
		text = EVTDESCIHFP20629 # EVTDESCLHFP20629 Unneeded
		picture = GFX_evt_princess_byzantine
		trigger = {
			has_character_flag = flag_malnourished_for_study
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCMHFP20629
		picture = GFX_evt_bishop
		trigger = {
			has_character_flag = flag_malnourished_for_faith
			is_female = no
		}
	}
	desc = {
		text = EVTDESCMHFP20629 # EVTDESCNHFP20629 Unneeded
		picture = GFX_evt_bishop
		trigger = {
			has_character_flag = flag_malnourished_for_faith
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCOHFP20629
		picture = GFX_evt_lunatic
		trigger = {
			has_character_flag = flag_malnourished_for_paranoia
			is_female = no
		}
	}
	desc = {
		text = EVTDESCOHFP20629 # EVTDESCPHFP20629 Unneeded - Gosh darn it, malnurished loc sure is gender neutral...
		picture = GFX_evt_lunatic
		trigger = {
			has_character_flag = flag_malnourished_for_paranoia
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCQHFP20629
		picture = GFX_evt_council
		trigger = {
			has_character_flag = flag_malnourished_for_diligence
			is_female = no
		}
	}
	desc = {
		text = EVTDESCRHFP20629
		picture = GFX_evt_council
		trigger = {
			has_character_flag = flag_malnourished_for_diligence
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCSHFP20629
		picture = GFX_evt_bad_news
		trigger = {
			has_character_flag = flag_malnourished_for_cannibal
			is_female = no
		}
	}
	desc = {
		text = EVTDESCTHFP20629
		picture = GFX_evt_bad_news_female
		trigger = {
			has_character_flag = flag_malnourished_for_cannibal
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCUHFP20629
		picture = GFX_evt_bad_news
		trigger = {
			has_character_flag = flag_malnourished_for_craven
		}
	}
	desc = {
		text = EVTDESCVHFP20629
		picture = GFX_evt_recovery
		trigger = {
			has_character_flag = flag_malnourished_for_boredom
			is_female = no
		}
	}
	desc = {
		text = EVTDESCWHFP20629
		picture = GFX_evt_recovery
		trigger = {
			has_character_flag = flag_malnourished_for_boredom
			is_female = yes
		}
	}
	picture = GFX_evt_bad_news

	is_triggered_only = yes # on_five_year_pulse, random_events

	min_age = 20
	only_capable = yes
	prisoner = no

	trigger = {
		check_variable = {
			which = physique_variable
			value < -6
		}

		NOT = { trait = is_malnourished }
		# NOT = { trait = gluttonous }
		is_inaccessible_trigger = no

		# Can happen only once
		has_malnourished_for_flag_trigger = no

		OR = { # Possible reasons
			trait = temperate
			trait = stressed
			trait = depressed
			trait = slothful
			trait = scholar
			trait = craven
			trait = paranoid
			trait = diligent
			trait = cannibal_trait
			has_focus = focus_scholarship

			trigger_if = {
				limit = {
					OR = {
						trait = theologian
						has_focus = focus_theology
					}
				}

				OR = {
					religion = loviatar
					religion_group = karaturan_group
					trait = patron_loviatar
					trait = patron_ilmater
				}

				NOT = { trait = cynical }
			}

			AND = {
				NOT = { trait = gluttonous }

				check_variable = {
					which = physique_variable
					value < -10
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 0.85
			war = yes
			in_command = yes
		}

		mult_modifier = {
			factor = 0.75
			trait = gluttonous
		}

		mult_modifier = {
			factor = 0.45
			trait = hedonist
		}

		mult_modifier = {
			factor = 1.25
			trait = one_legged
		}

		mult_modifier = {
			factor = 1.75
			trait = mangled
		}

		mult_modifier = {
			factor = 1.75
			trait = weak
		}

		mult_modifier = {
			factor = 1.5
			trait = delicate
		}

		mult_modifier = {
			factor = 1.25
			trait = soft
		}

		mult_modifier = {
			factor = 0.95
			trait = strong
		}

		mult_modifier = {
			factor = 0.97
			trait = tough
		}

		mult_modifier = {
			factor = 0.75
			trait = sturdy
		}

		mult_modifier = {
			factor = 0.95
			is_strong_non_congenital_trigger = yes
		}

		mult_modifier = {
			factor = 1.5
			is_weak_non_congenital_trigger = yes
		}

		mult_modifier = {
			factor = 1.85
			trait = temperate
		}

		mult_modifier = {
			factor = 0.5
			has_focus = focus_carousing
		}

		mult_modifier = {
			factor = 0.75
			has_focus = focus_family
		}

		mult_modifier = {
			factor = 1.25
			has_focus = focus_scholarship
		}

		mult_modifier = {
			factor = 1.25
			has_focus = focus_theology
		}

		mult_modifier = {
			factor = 0.95
			has_focus = focus_war
		}

		mult_modifier = {
			factor = 0.75
			practical_age < 25
		}

		mult_modifier = {
			factor = 0.85
			practical_age < 35
		}

		mult_modifier = {
			factor = 0.5
			trait = diligent
		}

		mult_modifier = {
			factor = 1.5
			trait = slothful
		}

		mult_modifier = {
			factor = 1.25
			trait = depressed
		}

		mult_modifier = {
			factor = 1.25
			is_tribal = yes
		}

		mult_modifier = {
			factor = 1.5
			is_nomadic = yes
		}

		mult_modifier = {
			factor = 1.35
			practical_age >= 40
		}

		mult_modifier = {
			factor = 1.75

			is_female = yes # Trophy wife
			lower_real_tier_than = DUKE

			OR = {
				trait = proud
				trait = envious
			}

			spouse = {
				higher_real_tier_than = COUNT

				NOR = {
					has_law = status_of_women_3
					has_law = status_of_women_4
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}

		mult_modifier = {
			factor = 1.75

			trait = shy
			is_female = no # Lovesick man

			any_lover = {
				is_married = yes
				NOT = { is_married = ROOT }
			}
		}

		mult_modifier = {
			factor = 0.75
			is_ruler = no
		}

		mult_modifier = {
			factor = 0.9
			real_tier = BARON
		}

		mult_modifier = {
			factor = 0.5
			has_character_modifier = well_fed
		}

		mult_modifier = {
			factor = 1.25
			check_variable = { which = physique_variable value < -11 }
		}

		mult_modifier = {
			factor = 1.25
			check_variable = { which = physique_variable value < -12 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value < -13 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value < -14 }
		}

		mult_modifier = {
			factor = 1.5 # Should already have it by this point, but just in case...
			check_variable = { which = physique_variable value < -15 }
		}

		mult_modifier = {
			factor = 2
			check_variable = { which = physique_variable value < -20 }
		}

		mult_modifier = {
			factor = 3
			check_variable = { which = physique_variable value < -25 }
		}
	}

	immediate = {
		# First pick a reason
		random_list = {
			1 = {
				trigger = { trait = temperate }
				set_character_flag = flag_malnourished_for_temperance
			}

			4 = {
				trigger = { trait = stressed }
				set_character_flag = flag_malnourished_for_stress
			}

			4 = {
				trigger = { trait = depressed }
				set_character_flag = flag_malnourished_for_depression
			}

			1 = {
				trigger = { trait = slothful }
				set_character_flag = flag_malnourished_for_sloth
			}

			20 = {
				trigger = {
					OR = {
						trait = scholar
						has_focus = focus_scholarship
					}
				}

				set_character_flag = flag_malnourished_for_study
			}

			20 = {
				trigger = {
					OR = {
						has_focus = focus_theology
						trait = theologian
					}

					OR = {
						religion = loviatar
						religion_group = karaturan_group
						trait = patron_loviatar
						trait = patron_ilmater
					}

					NOT = { trait = cynical }
				}

				set_character_flag = flag_malnourished_for_faith
			}

			20 = {
				trigger = { trait = paranoid }
				set_character_flag = flag_malnourished_for_paranoia
			}

			10 = {
				trigger = { trait = diligent }
				set_character_flag = flag_malnourished_for_diligence
			}

			20 = {
				trigger = { trait = cannibal_trait }
				set_character_flag = flag_malnourished_for_cannibal
			}

			2 = {
				trigger = { trait = craven }
				set_character_flag = flag_malnourished_for_craven
			}

			fallback = {
				set_character_flag = flag_malnourished_for_boredom
			}
		}
	}

	option = { # Rest a bit
		name = EVTOPTAHFP20629
		tooltip_info = slothful

		trigger = {
			trait = slothful

			NOR = {
				has_character_flag = flag_malnourished_for_paranoia
				has_character_flag = flag_malnourished_for_sloth
				has_character_flag = flag_malnourished_for_boredom
			}
		}

		custom_tooltip = { text = tooltip_rest_20600 }

		clr_character_flag = flag_primed_physique
		balance_weight_small_effect = yes
		weight_trait_check_effect = yes

		ai_chance = {
			factor = 70

			mult_modifier = {
				factor = 0.5
				trait = temperate
			}
		}
	}

	option = { # Not the fate of a warrior!
		name = EVTOPTBHFP20629
		tooltip_info = combat_rating

		trigger = {
			combat_rating >= 40
			NOT = { has_character_flag = flag_malnourished_for_diligence }
			is_ill = no
			is_maimed_trigger = no
		}

		custom_tooltip = { text = tooltip_workout_20600 }

		clr_character_flag = flag_primed_physique
		balance_weight_small_effect = yes
		weight_trait_check_effect = yes

		ai_chance = {
			factor = 80

			mult_modifier = {
				factor = 0.5
				trait = temperate
			}

			mult_modifier = {
				factor = 0.5
				trait = diligent
			}
		}
	}

	option = { # Comply
		name = {
			text = EVTOPTCHFP20629_A
			trigger = { has_character_flag = flag_malnourished_for_temperance }
		}
		name = {
			text = EVTOPTCHFP20629_B
			trigger = {
				OR = {
					has_character_flag = flag_malnourished_for_stress
					has_character_flag = flag_malnourished_for_boredom
				}
			}
		}
		name = {
			text = EVTOPTCHFP20629_C
			trigger = { has_character_flag = flag_malnourished_for_depression }
		}
		name = {
			text = EVTOPTCHFP20629_D
			trigger = { has_character_flag = flag_malnourished_for_study }
		}
		name = {
			text = EVTOPTCHFP20629_F
			trigger = { has_character_flag = flag_malnourished_for_faith }
		}
		name = {
			text = EVTOPTCHFP20629_G
			trigger = { has_character_flag = flag_malnourished_for_diligence }
		}
		name = {
			text = EVTOPTCHFP20629_H
			trigger = { has_character_flag = flag_malnourished_for_paranoia }
		}
		name = {
			text = EVTOPTCHFP20629_I
			trigger = { has_character_flag = flag_malnourished_for_sloth }
		}
		name = {
			text = EVTOPTCHFP20629_L
			trigger = { has_character_flag = flag_malnourished_for_cannibal }
		}
		name = {
			text = EVTOPTCHFP20629_M
			trigger = { has_character_flag = flag_malnourished_for_craven }
		}

		custom_tooltip = { text = tooltip_warning_20629 }

		apply_weight_modifier_effect = yes

		if = {
			limit = { has_character_flag = flag_primed_physique }
			clr_character_flag = flag_primed_physique
		}
		else = {
			# If character has it, it means the event was fired by the hidden cleanup event, which means the character already fulfills the variable requirements
			lose_weight_large_effect = yes
		}

		weight_trait_check_effect = yes

		if = {
			limit = {
				OR = {
					has_character_flag = flag_malnourished_for_temperance
					has_character_flag = flag_malnourished_for_stress
					has_character_flag = flag_malnourished_for_depression
					has_character_flag = flag_malnourished_for_study
					has_character_flag = flag_malnourished_for_faith
					has_character_flag = flag_malnourished_for_diligence
					has_character_flag = flag_malnourished_for_boredom
				}
			}

			if = {
				limit = { has_character_flag = flag_malnourished_for_study }
				custom_tooltip = { text = tooltip_physique_becomes_learned_B }
			}
			else = {
				custom_tooltip = { text = tooltip_physique_gains_diligent } # Or related attribute
			}

			if = {
				limit = { has_character_flag = flag_malnourished_for_faith }
				custom_tooltip = { text = tooltip_physique_becomes_zealous }
			}

			hidden_effect = {
				random_list = {
					35 = {
						trigger = {
							NOT = { has_character_flag = flag_malnourished_for_depression }
						}

						character_event = {
							id = HFP.20630 # Becomes diligent or gains stewardship
							days = 50
							random = 50
						}
					}

					35 = {
						trigger = { has_character_flag = flag_malnourished_for_depression }

						character_event = {
							id = HFP.20631 # Family's pity (opinion modifier)
							days = 50
							random = 50
						}
					}

					35 = {
						trigger = {
							NOT = { has_character_flag = flag_malnourished_for_depression }
						}

						character_event = {
							id = HFP.20633 # Gains diplomacy
							days = 50
							random = 50
						}
					}

					35 = {
						trigger = {
							OR = {
								has_character_flag = flag_malnourished_for_study
								has_character_flag = flag_malnourished_for_faith
							}
						}

						character_event = {
							id = HFP.20634 # Gains learning
							days = 50
							random = 50
						}
					}

					35 = {
						trigger = { has_character_flag = flag_malnourished_for_faith }

						character_event = {
							id = HFP.20635 # Becomes zealous or gains learning
							days = 50
							random = 50
						}
					}

					2 = {
						trigger = {
							NOR = {
								has_character_flag = flag_malnourished_for_stress
								has_character_flag = flag_malnourished_for_depression
							}
						}

						mult_modifier = {
							factor = 0.5

							check_variable = {
								which = physique_variable
								value < -20
							}
						}

						mult_modifier = {
							factor = 0.5
							NOT = { trait = sturdy }
						}

						character_event = {
							id = HFP.20636 # Gain health
							days = 50
							random = 50
						}
					}

					5 = {
						mult_modifier = {
							factor = 1.5

							check_variable = {
								which = physique_variable
								value < -20
							}
						}

						mult_modifier = {
							factor = 1.75
							is_weak_non_congenital_trigger = yes
						}

						character_event = {
							id = HFP.20637 # Lose health
							days = 50
							random = 50
						}
					}

					10 = {
						trigger = { is_ruler = yes }

						character_event = {
							id = HFP.20666 # Become humble
							days = 50
							random = 50
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_character_flag = flag_malnourished_for_sloth
					has_character_flag = flag_malnourished_for_paranoia
					has_character_flag = flag_malnourished_for_cannibal
					has_character_flag = flag_malnourished_for_craven
				}
			}

			if = {
				limit = {
					trait = stressed
					NOT = { has_character_flag = flag_malnourished_for_paranoia }
				}
				custom_tooltip = { text = tooltip_physique_loses_stressed }
			}

			if = {
				limit = {
					OR = {
						has_character_flag = flag_malnourished_for_paranoia
						has_character_flag = flag_malnourished_for_cannibal
						has_character_flag = flag_malnourished_for_craven
					}
				}
				custom_tooltip = { text = tooltip_physique_gains_intrigue }
			}

			hidden_effect = {
				random_list = {
					35 = {
						trigger = {
							trait = stressed

							NOR = {
								has_character_flag = flag_malnourished_for_paranoia
								has_character_flag = flag_malnourished_for_cannibal
								has_character_flag = flag_malnourished_for_craven
							}
						}

						character_event = {
							id = HFP.20638 # Lose stressed
							days = 50
							random = 50
						}
					}

					2 = {
						trigger = {
							NOT = { has_character_flag = flag_malnourished_for_paranoia }
						}

						mult_modifier = {
							factor = 0.5

							check_variable = {
								which = physique_variable
								value < -20
							}
						}

						mult_modifier = {
							factor = 0.5
							NOT = { trait = sturdy }
						}

						character_event = {
							id = HFP.20636 # Gain health
							days = 50
							random = 50
						}
					}

					5 = {
						mult_modifier = {
							factor = 1.5

							check_variable = {
								which = physique_variable
								value < -20
							}
						}

						mult_modifier = {
							factor = 1.75
							is_weak_non_congenital_trigger = yes
						}

						character_event = {
							id = HFP.20637 # Lose health
							days = 50
							random = 50
						}
					}

					30 = {
						trigger = {
							NOT = { has_character_flag = flag_malnourished_for_sloth }
						}

						character_event = {
							id = HFP.20639 # Gain intrigue
							days = 50
							random = 50
						}
					}

					10 = {
						trigger = {
							NOT = { trait = envious }
						}

						character_event = {
							id = HFP.20667 # Become envious
							days = 50
							random = 50
						}
					}

					20 = {
						trigger = {
							NOR = {
								trait = cruel
								has_character_flag = flag_malnourished_for_craven
							}
						}

						character_event = {
							id = HFP.20668 # Become cruel
							days = 50
							random = 50
						}
					}
				}
			}
		}

		hidden_effect = {
			# Outside assistance
			# First check for spouse
			# Then check for lover
			# Then check for friend
			# Then check for close relative
			# Else out of luck

			if = { # Spouse helps
				limit = {
					any_spouse = { is_inaccessible_or_incapable_trigger = no }
				}

				random_spouse = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20640
						days = 10
						random = 20
					}
				}
			}
			else_if = { # Lover helps
				limit = {
					any_lover = { is_inaccessible_or_incapable_trigger = no }
				}

				random_lover = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20640
						days = 10
						random = 20
					}
				}
			}
			else_if = { # Friend helps
				limit = {
					any_friend = { is_inaccessible_or_incapable_trigger = no }
				}

				random_friend = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20640
						days = 10
						random = 20
					}
				}
			}
			else = { # Close relative helps
				random_close_relative = {
					limit = { is_inaccessible_or_incapable_trigger = no }

					character_event = {
						id = HFP.20640
						days = 10
						random = 20
					}
				}
			}
		}

		ai_chance = {
			factor = 70

			mult_modifier = {
				factor = 1.5
				trait = temperate
			}

			mult_modifier = {
				factor = 1.5
				trait = diligent
			}
		}
	}

	option = { # Resist
		name = EVTOPTDHFP20629

		custom_tooltip = { text = tooltip_physique_malnourished_resist }

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes
		clr_character_flag = flag_primed_physique

		hidden_effect = {
			random_list = {
				80 = { # Success
					character_event = {
						id = HFP.20645 # Balanced recovery
						days = 50
						random = 50
					}
				}

				20 = { # Failure
					mult_modifier = {
						factor = 1.75
						trait = diligent
					}

					mult_modifier = {
						factor = 1.75
						trait = stressed
					}

					mult_modifier = {
						factor = 1.75
						trait = depressed
					}

					mult_modifier = {
						factor = 1.5
						trait = temperate
					}

					mult_modifier = {
						factor = 1.5
						trait = shy
					}

					mult_modifier = {
						factor = 1.5
						trait = ambitious
					}

					mult_modifier = {
						factor = 1.5
						trait = paranoid
					}

					mult_modifier = {
						factor = 1.5
						practical_age >= 40
					}

					mult_modifier = {
						factor = 0.75
						combat_rating >= 20
					}

					mult_modifier = {
						factor = 0.75
						combat_rating >= 30
					}

					mult_modifier = {
						factor = 0.5
						combat_rating >= 40
					}

					mult_modifier = {
						factor = 0.5
						combat_rating >= 50
					}

					character_event = {
						id = HFP.20646 # Relapse, final chance
						days = 50
						random = 50
					}
				}
			}
		}

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 1.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 1.5
				trait = ambitious
			}
		}
	}
}

# Malnourished becomes diligent/stewardship
character_event = {
	id = HFP.20630
	desc = EVTDESCHFP20630
	picture = GFX_evt_council

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20630
		tooltip_info = is_malnourished

		if = {
			limit = { trait = slothful }
			remove_trait = slothful
		}
		else_if = {
			limit = { trait = diligent }
			change_stewardship = 2
		}
		else = {
			add_trait = diligent
		}

		# clear_malnourished_flags_effect = yes
	}
}

# Depressed Malnourished gains family's pity
character_event = {
	id = HFP.20631
	desc = EVTDESCHFP20631
	picture = GFX_evt_recovery

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20631
		tooltip_info = is_malnourished

		custom_tooltip = {
			text = tooltip_physique_pitied

			any_close_relative = {
				limit = {
					NOR = {
						has_opinion_modifier = {
							name = opinion_did_not_take_my_advice
							who = ROOT
						}

						trait = cruel
					}
				}

				character_event = { id = HFP.20632 }
			}
		}

		# clear_malnourished_flags_effect = yes
	}
}

# Notify close family members, give opinion
character_event = {
	id = HFP.20632
	desc = EVTDESCAHFP20632
	picture = GFX_evt_drunk

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20632

		opinion = {
			name = opinion_pitiful_shell
			who = FROM
			years = 15
		}
	}
}

 # Malnourished gains diplomacy
character_event = {
	id = HFP.20633
	desc = EVTDESCHFP20633
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20633
		tooltip_info = is_malnourished

		change_diplomacy = 2
		# clear_malnourished_flags_effect = yes
	}
}

# Malnourished gains learning
character_event = {
	id = HFP.20634
	desc = EVTDESCHFP20634
	picture = GFX_evt_library

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20634
		tooltip_info = is_malnourished

		change_learning = 2
		# clear_malnourished_flags_effect = yes
	}
}

# Malnourished becomes zealous/learning
character_event = {
	id = HFP.20635
	desc = EVTDESCHFP20635
	picture = GFX_evt_bishop

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20635
		tooltip_info = is_malnourished

		if = {
			limit = { trait = cynical }
			remove_trait = cynical
		}
		else_if = {
			limit = { trait = zealous }
			change_stewardship = 1
		}
		else = {
			add_trait = zealous
		}

		# clear_malnourished_flags_effect = yes
	}
}

# Malnourished character small health boost
character_event = {
	id = HFP.20636
	desc = EVTDESCHFP20636
	picture = GFX_evt_recovery

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20636
		tooltip_info = is_malnourished

		custom_tooltip = {
			text = tooltip_health_improves
			health = 0.25
		}

		# clear_malnourished_flags_effect = yes
	}
}

# Malnourished character loses health
character_event = {
	id = HFP.20637
	desc = EVTDESCHFP20637
	picture = GFX_evt_bad_news

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20637
		tooltip_info = is_malnourished

		custom_tooltip = {
			text = tooltip_health_deteriorates
			health = -0.5
		}

		# clear_malnourished_flags_effect = yes
	}
}

# Malnourished loses stressed
character_event = {
	id = HFP.20638
	picture = GFX_evt_recovery

	desc = {
		text = EVTDESCAHFP20638
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20638
		trigger = { is_female = yes }
	}

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20638
		tooltip_info = is_malnourished

		if = {
			limit = { has_character_modifier = stress_relief }
			remove_character_modifier = stress_relief
		}

		if = {
			limit = { trait = stressed }
			remove_trait = stressed
		}
		else = {
			custom_tooltip = {
				text = tooltip_health_improves
				health = 0.5
			}
		}

		# clear_malnourished_flags_effect = yes
	}
}

# Malnourished gains intrigue
character_event = {
	id = HFP.20639
	desc = EVTDESCHFP20639
	picture = GFX_evt_lunatic

	is_triggered_only = yes

	trigger = {
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes # Won't fire if recovered due to third party help in the meantime
	}

	option = {
		name = EVTOPTAHFP20639
		tooltip_info = is_malnourished

		if = {
			limit = { trait = stressed }
			remove_trait = stressed
		}
		else = {
			custom_tooltip = {
				text = tooltip_health_improves
				health = 0.5
			}
		}

		# clear_malnourished_flags_effect = yes
	}
}

#############################################

# Spouse/lover/etc. notified of character's state
character_event = {
	id = HFP.20640
	desc = EVTDESCHFP20640
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	trigger = {
		FROM = {
			trait = is_malnourished
			is_alive = yes
		}
	}

	option = { # Finds nothing wrong
		name = EVTOPTAHFP20640
		tooltip_info = is_malnourished

		trigger = { trait = is_malnourished }

		custom_tooltip = { text = tooltip_20640_A }

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_flattered
				who = ROOT
				years = 5
			}

			character_event = { id = HFP.20641 }
		}

		ai_chance = {
			factor = 70

			mult_modifier = {
				factor = 1.5
				trait = diligent
			}

			mult_modifier = {
				factor = 1.5
				trait = temperate
			}

			mult_modifier = {
				factor = 0.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 0.5
				trait = slothful
			}
		}
	}

	option = { # Berates politely
		name = EVTOPTBHFP20640
		tooltip_info = diplomacy

		trigger = { diplomacy >= 10 }

		custom_tooltip = { text = tooltip_20640_B }

		hidden_effect = {
			FROM = {
				set_character_flag = flag_physique_persuasion
				character_event = { id = HFP.20642 }
			}
		}

		ai_chance = {
			factor = 30

			mult_modifier = {
				factor = 0.5
				trait = cruel
			}

			mult_modifier = {
				factor = 1.75
				trait = kind
			}
		}
	}

	option = { # Berates rudely
		name = EVTOPTCHFP20640

		custom_tooltip = { text = tooltip_20640_C }

		FROM = {
			character_event = { id = HFP.20642 }
		}

		ai_chance = {
			factor = 30

			mult_modifier = {
				factor = 0.5
				trait = kind
			}

			mult_modifier = {
				factor = 1.75
				trait = cruel
			}

			mult_modifier = {
				factor = 1.5
				trait = honest
			}
		}
	}

	option = { # Does not care
		name = EVTOPTDHFP20640

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 2

				opinion = {
					who = FROM
					value < 0
				}
			}

			mult_modifier = {
				factor = 4

				opinion = {
					who = FROM
					value < -50
				}
			}
		}
	}
}

# Malnourished character receives appreciation
character_event = {
	id = HFP.20641
	desc = EVTDESCHFP20641
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHFP20641

		tooltip = {
			opinion = {
				name = opinion_flattered
				who = FROM
				years = 3
			}
		}
	}
}

# Malnourished character warned by loved one
character_event = {
	id = HFP.20642
	picture = GFX_evt_courtiers_talking

	desc = {
		text = EVTDESCAHFP20642
		trigger = { has_character_flag = flag_physique_persuasion }
	}
	desc = {
		text = EVTDESCBHFP20642
		trigger = {
			NOT = { has_character_flag = flag_physique_persuasion }
		}
	}

	is_triggered_only = yes

	option = { # Heed plea
		name = EVTOPTAHFP20642

		custom_tooltip = { text = tooltip_20642_A }

		remove_weight_modifier_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_took_my_advice
				who = ROOT
				years = 5
			}

			character_event = {
				id = HFP.20643
				days = 20
			}
		}

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes
		clear_malnourished_flags_effect = yes

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = trusting
			}
		}
	}

	option = { # Ignore
		name = EVTOPTBHFP20642

		custom_tooltip = { text = tooltip_20642_B }

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_did_not_take_my_advice
				who = ROOT
				years = 5
			}

			character_event = {
				id = HFP.20644
				days = 20
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.75
				trait = stubborn
			}

			mult_modifier = {
				factor = 0.15
				has_character_flag = flag_physique_persuasion
			}
		}
	}

	after = {
		clr_character_flag = flag_physique_persuasion
	}
}

# Third party notified character took advice
character_event = {
	id = HFP.20643
	desc = EVTDESCHFP20643
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHFP20643

		tooltip = {
			opinion = {
				name = opinion_took_my_advice
				who = FROM
				years = 5
			}
		}
	}
}

# Third party notified character ignored advice
character_event = {
	id = HFP.20644
	desc = EVTDESCHFP20644
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTAHFP20644

		tooltip = {
			opinion = {
				name = opinion_did_not_take_my_advice
				who = FROM
				years = 5
			}
		}
	}
}

# Character balanced out
character_event = {
	id = HFP.20645
	desc = EVTDESCHFP20645
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	immediate = {
		balance_weight_medium_effect = yes
	}

	option = {
		name = EVTOPTAHFP20645

		if = {
			limit = { trait = temperate }
			remove_trait = temperate
		}

		if = {
			limit = {
				check_variable = {
					which = physique_variable
					value < -15
				}
			}

			weight_trait_check_effect = yes
		}

		clear_malnourished_flags_effect = yes
	}
}

# Character relapse. Last chance
character_event = {
	id = HFP.20646
	desc = EVTDESCHFP20646
	picture = GFX_evt_bad_news

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20646

		trigger = {
			OR = {
				has_character_flag = flag_malnourished_for_temperance
				has_character_flag = flag_malnourished_for_boredom
				has_character_flag = flag_malnourished_for_craven
			}
		}

		custom_tooltip = { text = tooltip_20646_A }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTBHFP20646

		trigger = {
			OR = {
				has_character_flag = flag_malnourished_for_stress
				has_character_flag = flag_malnourished_for_cannibal
			}
		}

		custom_tooltip = { text = tooltip_20646_B }

		if = {
			limit = { trait = depressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				add_trait_depressed_effect = yes
			}
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTCHFP20646

		trigger = { has_character_flag = flag_malnourished_for_depression }

		custom_tooltip = { text = tooltip_20646_C }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTDHFP20646

		trigger = { has_character_flag = flag_malnourished_for_sloth }

		custom_tooltip = { text = tooltip_20646_D }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTEHFP20646

		trigger = { has_character_flag = flag_malnourished_for_study }

		custom_tooltip = { text = tooltip_20646_E }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				add_trait_stressed_effect = yes
			}
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTFHFP20646

		trigger = { has_character_flag = flag_malnourished_for_faith }

		custom_tooltip = { text = tooltip_20646_F }

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				add_trait_stressed_effect = yes
			}
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTGHFP20646

		trigger = { has_character_flag = flag_malnourished_for_paranoia }

		custom_tooltip = { text = tooltip_20646_G }

		if = {
			limit = { trait = kind }
			remove_trait = kind
		}
		else = {
			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = {
		name = EVTOPTHHFP20646

		trigger = { has_character_flag = flag_malnourished_for_diligence }

		custom_tooltip = { text = tooltip_20646_H }

		if = {
			limit = { trait = depressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			random = {
				chance = 50
				add_trait_depressed_effect = yes
			}
		}

		clear_malnourished_flags_effect = yes
		gain_weight_medium_effect = yes
		weight_trait_check_effect = yes
	}

	option = { # Stop trying
		name = {
			text = EVTOPTFHIP20646_A
			trigger = {
				OR = {
					has_character_flag = flag_malnourished_for_temperance
					has_character_flag = flag_malnourished_for_boredom
				}
			}
		}
		name = {
			text = EVTOPTFHIP20646_B
			trigger = {
				OR = {
					has_character_flag = flag_malnourished_for_stress
					has_character_flag = flag_malnourished_for_depression
				}
			}
		}
		name = {
			text = EVTOPTFHIP20646_C
			trigger = { has_character_flag = flag_malnourished_for_sloth }
		}
		name = {
			text = EVTOPTFHIP20646_D
			trigger = { has_character_flag = flag_malnourished_for_study }
		}
		name = {
			text = EVTOPTFHIP20646_E
			trigger = { has_character_flag = flag_malnourished_for_faith }
		}
		name = {
			text = EVTOPTFHIP20646_F
			trigger = { has_character_flag = flag_malnourished_for_paranoia }
		}
		name = {
			text = EVTOPTFHIP20646_G
			trigger = { has_character_flag = flag_malnourished_for_diligence }
		}
		name = {
			text = EVTOPTFHIP20646_H
			trigger = { has_character_flag = flag_malnourished_for_cannibal }
		}
		name = {
			text = EVTOPTFHIP20646_I
			trigger = { has_character_flag = flag_malnourished_for_craven }
		}

		custom_tooltip = { text = tooltip_20646_I }

		remove_trait_silently_stressed_effect = yes
		remove_character_modifier = hard_diet
		lose_weight_small_effect = yes
		# clear_malnourished_flags_effect = yes
	}
}

# Health complications: overweight - chance to recover

# Health complications: underweight - chance to recover

# Character is growing too fat: health warning
character_event = {
	id = HFP.20647
	picture = GFX_evt_fancy_feast

	desc = {
		text = EVTDESCAHFP20647
		picture = GFX_evt_pagan
		trigger = {
			OR = {
				is_tribal = yes
				is_nomadic = yes
			}

			is_female = no
		}
	}
	desc = {
		text = EVTDESCBHFP20647
		picture = GFX_evt_pagan
		trigger = {
			OR = {
				is_tribal = yes
				is_nomadic = yes
			}

			is_female = yes
		}
	}
	desc = {
		text = EVTDESCCHFP20647
		trigger = {
			is_tribal = no
			is_nomadic = no
			is_female = no
		}
	}
	desc = {
		text = EVTDESCDHFP20647
		trigger = {
			is_tribal = no
			is_nomadic = no
			is_female = yes
		}
	}

	is_triggered_only = yes

	min_age = 30 # Unlikely to happen earlier
	only_capable = yes
	prisoner = no

	trigger = {
		trait = is_fat 
		NOT = { has_character_flag = flag_becoming_obese } # Already had your chance

		check_variable = {
			which = physique_variable
			value >= 20
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 2
			has_character_modifier = well_fed
		}

		mult_modifier = {
			factor = 1.25
			check_variable = { which = physique_variable value >= 25 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value >= 30 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value >= 35 }
		}

		mult_modifier = {
			factor = 3
			check_variable = { which = physique_variable value >= 40 }
		}

		mult_modifier = {
			factor = 5
			check_variable = { which = physique_variable value >= 50 }
		}

		mult_modifier = {
			factor = 10
			check_variable = { which = physique_variable value >= 60 }
		}
	}

	option = { # Work out
		name = EVTOPTAHFP20647
		tooltip_info = diligent

		trigger = { trait = diligent }

		custom_tooltip = {
			text = tooltip_20647_A

			random_list = {
				10 = { # Fluke
					health = 0.1
					balance_weight_small_effect = yes
					weight_trait_check_effect = yes
				}

				30 = { # Small progress
					remove_trait_gluttonous_effect = yes
					health = 0.5
					balance_weight_medium_effect = yes
					weight_trait_check_effect = yes
				}

				60 = { # Considerable progress
					remove_trait_gluttonous_effect = yes
					health = 1.0
					balance_weight_large_effect = yes
					weight_trait_check_effect = yes
				}
			}
		}

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes

		ai_chance = { factor = 40 }
	}

	option = { # Eat less
		name = EVTOPTBHFP20647

		custom_tooltip = {
			text = tooltip_20647_B

			random_list = {
				30 = { # Fluke
					lose_weight_small_effect = yes
					weight_trait_check_effect = yes
				}

				30 = { # Small progress
					lose_weight_medium_effect = yes
					weight_trait_check_effect = yes
				}

				30 = { # Considerable progress
					lose_weight_large_effect = yes
					weight_trait_check_effect = yes
				}
			}
		}

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes

		ai_chance = { factor = 30 }
	}

	option = { # Does not matter
		name = EVTOPTCHFP20647

		custom_tooltip = { text = tooltip_20647_C }

		set_character_flag = flag_becoming_obese # Primed for chance of negative event later in life
		remove_trait_silently_stressed_effect = yes

		hidden_effect = {
			if = { # Chance for black boar event
				limit = {
					higher_real_tier_than = COUNT
					capital_scope = { region = western_heartlands_region }
					is_incapable = no
					NOT = { has_character_modifier = black_boar_modifier }
				}

				random_vassal = {
					limit = {
						is_adult = yes
						is_incapable = no

						NOR = {
							trait = paranoid
							trait = deceitful
						}
					}

					character_event = {
						id = HFP.20692
						days = 150
						random = 50
					}
				}
			}

			if = {
				limit = { check_variable = { which = physique_variable value >= 55 } }
				health = -3.0
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 50 } }
				health = -2.0
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 45 } }
				health = -1.5
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 40 } }
				health = -1.0
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 35 } }
				health = -0.75
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 30 } }
				health = -0.75
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 25 } }
				health = -0.5
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value >= 20 } }
				health = -0.5
			}
		}

		gain_weight_small_effect = yes

		ai_chance = { factor = 30 }
	}
}

# Character is growing too thin: health warning
character_event = {
	id = HFP.20648
	picture = GFX_evt_bad_news

	desc = {
		text = EVTDESCAHFP20648
		trigger = {
			OR = {
				is_tribal = yes
				is_nomadic = yes
			}

			is_female = no
		}
	}
	desc = {
		text = EVTDESCBHFP20648
		trigger = {
			OR = {
				is_tribal = yes
				is_nomadic = yes
			}

			is_female = yes
		}
	}
	desc = {
		text = EVTDESCCHFP20648
		trigger = {
			is_tribal = no
			is_nomadic = no
			is_female = no
		}
	}
	desc = {
		text = EVTDESCDHFP20648
		trigger = {
			is_tribal = no
			is_nomadic = no
			is_female = yes
		}
	}

	is_triggered_only = yes # on_five_year_pulse, random_events

	min_age = 30 # Unlikely to happen earlier
	only_capable = yes
	prisoner = no # Starvation in prison still handled by vanilla events

	trigger = {
		trait = is_malnourished
		NOT = { has_character_flag = flag_becoming_underweight } # Already had your chance

		check_variable = {
			which = physique_variable
			value < -20
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 2
			has_character_modifier = one_year_fasting
		}

	#	mult_modifier = {
	#		factor = 2
	#		prisoner = yes
	#	}

		mult_modifier = {
			factor = 1.25
			check_variable = { which = physique_variable value < -20 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value < -25 }
		}

		mult_modifier = {
			factor = 1.5
			check_variable = { which = physique_variable value < -30 }
		}

		mult_modifier = {
			factor = 3
			check_variable = { which = physique_variable value < -35 }
		}

		mult_modifier = {
			factor = 5
			check_variable = { which = physique_variable value < -40 }
		}

		mult_modifier = {
			factor = 10
			check_variable = { which = physique_variable value < -45 }
		}

		mult_modifier = {
			factor = 10
			check_variable = { which = physique_variable value < -50 }
		}

		mult_modifier = {
			factor = 10
			check_variable = { which = physique_variable value < -55 }
		}
	}

	option = { # Work out
		name = EVTOPTAHFP20648
		tooltip_info = diligent

		trigger = { trait = diligent }

		custom_tooltip = {
			text = tooltip_20648_A

			random_list = {
				10 = { # Fluke
					health = 0.1
					balance_weight_small_effect = yes
					weight_trait_check_effect = yes
				}

				30 = { # Small progress
					health = 0.5
					balance_weight_medium_effect = yes
					weight_trait_check_effect = yes
				}

				60 = { # Considerable progress
					health = 1.0
					balance_weight_large_effect = yes
					weight_trait_check_effect = yes
				}
			}
		}

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes

		ai_chance = { factor = 40 }
	}

	option = { # Eat more
		name = EVTOPTBHFP20648

		custom_tooltip = {
			text = tooltip_20648_B

			random_list = {
				30 = { # Fluke
					gain_weight_small_effect = yes
					weight_trait_check_effect = yes
				}

				30 = { # Small progress
					remove_trait_temperate_effect = yes
					gain_weight_medium_effect = yes
					weight_trait_check_effect = yes
				}

				30 = { # Considerable progress
					remove_trait_temperate_effect = yes
					gain_weight_large_effect = yes
					weight_trait_check_effect = yes
				}
			}
		}

		if = {
			limit = { trait = stressed }

			custom_tooltip = {
				text = tooltip_health_deteriorates
				health = -0.25
			}
		}
		else = {
			add_trait = stressed
		}

		add_character_modifier = {
			name = hard_diet
			days = 2500
		}

		remove_weight_modifier_effect = yes

		ai_chance = { factor = 30 }
	}

	option = { # Does not matter
		name = EVTOPTCHFP20648

		custom_tooltip = {
			text = tooltip_20648_C

			if = { # Chance for leechlord event
				limit = {
					higher_real_tier_than = COUNT
					has_assigned_minor_title = title_court_physician
					is_female = no
					is_incapable = no
					NOT = { has_character_modifier = leechlord_modifier }
				}

				random_courtier_or_vassal = {
					limit = { has_minor_title = title_court_physician }

					character_event = {
						id = HFP.20676
						days = 150
						random = 50
					}
				}
			}
			else_if = { # Chance for whisperer event
				limit = {
					higher_real_tier_than = COUNT
					is_female = yes
					is_incapable = no
					NOT = { has_character_modifier = whisperer_modifier }
				}

				random_vassal = {
					limit = {
						is_married = yes
						is_adult = yes
						is_female = no
						is_incapable = no
						NOT = { is_married = ROOT }

						spouse = {
							OR = {
								is_ruler = no
								top_liege = { character = ROOT }
							}
						}

						NOR = {
							trait = cruel
							trait = envious
							trait = lunatic
							trait = possessed
							trait = arbitrary
						}
					}

					character_event = {
						id = HFP.20700
						days = 150
						random = 50
					}
				}
			}

			if = {
				limit = { check_variable = { which = physique_variable value < -55 } }
				health = -3.0
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -50 } }
				health = -2.0
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -45 } }
				health = -1.5
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -40 } }
				health = -1.0
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -35 } }
				health = -0.75
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -30 } }
				health = -0.75
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -25 } }
				health = -0.5
			}
			else_if = {
				limit = { check_variable = { which = physique_variable value < -20 } }
				health = -0.5
			}
		}

		set_character_flag = flag_becoming_underweight # Primed for chance of negative event later in life
		remove_trait_silently_stressed_effect = yes
		lose_weight_small_effect = yes

		ai_chance = { factor = 30 }
	}
}

# Concerned spouse (about the opposite of either way, depending on traits of both).

# on_action hidden event: concerned friend.
character_event = {
	id = HFP.20649

	is_triggered_only = yes # on_five_year_pulse, random_events
	hide_window = yes

	only_rulers = yes
	min_age = 20
	only_capable = yes
	prisoner = no

	trigger = {
		NOR = {
			trait = is_malnourished
			trait = is_fat
		}

		is_inaccessible_trigger = no

		OR = {
			# Either person is genuinely concerned...
			AND = {
				OR = {
					check_variable = { which = physique_variable value >= 7 }
					check_variable = { which = physique_variable value < -7 }
				}

				OR = {
					any_close_relative = {
						block_general_event_trigger = no
						is_within_diplo_range = ROOT

						OR = {
							trait = kind # Genuine care

							opinion = { # Genuine care
								who = ROOT
								value >= 20
							}

							# Moralizers against fat
							trigger_if = {
								limit = {
									ROOT = {
										check_variable = {
											which = physique_variable
											value >= 7
										}
									}
								}

								OR = {
									trait = zealous
									trait = temperate
									trait = theologian
									is_theocracy = yes
								}
							}
							trigger_else_if = { # Moralizers against thin
								limit = {
									ROOT = {
										check_variable = {
											which = physique_variable
											value < -7
										}
									}
								}

								OR = {
									trait = gluttonous
									trait = duelist
									trait = hunter
									trait = hedonist
								}
							}
						}
					}

					any_lover = { # Only doing it because he cares
						block_general_event_trigger = no
						is_within_diplo_range = ROOT
					}

					any_friend = { # Only doing it because he cares
						block_general_event_trigger = no
						is_within_diplo_range = ROOT
					}
				}
			}

			#...or has ill intent
			AND = {
				# Respectable, average person
				is_ill = no
				has_negative_congenital_trigger = no
				practical_age < 50
				prestige >= 0

				check_variable = { which = physique_variable value >= -10 }
				check_variable = { which = physique_variable value < 10 }

				NOR = {
					trait = possessed
					trait = lunatic
				}

				any_close_relative = {
					same_sex = ROOT
					block_general_event_trigger = no

					OR = {
						trait = deceitful
						trait = envious
						trait = cruel
						trait = schemer
						is_rival = ROOT

						opinion = {
							who = ROOT
							value < 20
						}
					}

					NOR = {
						trait = kind
						is_lover = ROOT
						is_friend = ROOT
					}
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.5
			practical_age < 25
		}

		mult_modifier = {
			factor = 0.5
			practical_age >= 45
		}

		mult_modifier = {
			factor = 0.5
			trait = paranoid
		}

		mult_modifier = {
			factor = 1.75
			trait = trusting
		}

		mult_modifier = {
			factor = 1.25
			prestige >= 500
		}

		mult_modifier = {
			factor = 1.25
			wealth >= 250
		}

		mult_modifier = {
			factor = 1.5
			is_married = yes
		}

		mult_modifier = {
			factor = 1.75
			num_of_lovers >= 1
		}

		mult_modifier = {
			factor = 1.75
			num_of_friends >= 1
		}

		mult_modifier = {
			factor = 0.75
			is_tribal = yes
		}

		mult_modifier = {
			factor = 0.75
			is_nomadic = yes
		}
	}

	immediate = {
		random_list = {
			50 = { # First determine if it's good advice...
				trigger = {
					OR = {
						check_variable = { which = physique_variable value >= 7 }
						check_variable = { which = physique_variable value < -7 }
					}

					OR = {
						any_close_relative = {
							block_general_event_trigger = no
							is_within_diplo_range = ROOT

							OR = {
								trait = kind # Genuine care

								opinion = { # Genuine care
									who = ROOT
									value >= 20
								}

								# Moralizers against fat
								trigger_if = {
									limit = {
										ROOT = {
											check_variable = {
												which = physique_variable
												value >= 7
											}
										}
									}

									OR = {
										trait = zealous
										trait = temperate
										trait = theologian
										is_theocracy = yes
									}
								}
								trigger_else_if = { # Moralizers against thin
									limit = {
										ROOT = {
											check_variable = {
												which = physique_variable
												value < -7
											}
										}
									}

									OR = {
										trait = gluttonous
										trait = duelist
										trait = hunter
										trait = hedonist
									}
								}
							}
						}

						any_lover = { # Only doing it because he cares
							block_general_event_trigger = no
							is_within_diplo_range = ROOT
						}

						any_friend = { # Only doing it because he cares
							block_general_event_trigger = no
							is_within_diplo_range = ROOT
						}
					}
				}

				random_list = { # Now determine who gets the event of the possible existing people
					25 = {
						trigger = {
							any_spouse = {
								block_general_event_trigger = no
								is_within_diplo_range = ROOT

								OR = {
									trait = kind # Genuine care

									opinion = { # Genuine care
										who = ROOT
										value >= 20
									}

									# Moralizers against fat
									trigger_if = {
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value >= 7
												}
											}
										}

										OR = {
											trait = zealous
											trait = temperate
											trait = theologian
											is_theocracy = yes
										}
									}
									trigger_else_if = { # Moralizers against thin
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value < -7
												}
											}
										}

										OR = {
											trait = gluttonous
											trait = duelist
											trait = hunter
											trait = hedonist
										}
									}
								}
							}
						}

						random_spouse = {
							limit = {
								block_general_event_trigger = no
								is_within_diplo_range = ROOT

								OR = {
									trait = kind # Genuine care

									opinion = { # Genuine care
										who = ROOT
										value >= 20
									}

									# Moralizers against fat
									trigger_if = {
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value >= 7
												}
											}
										}

										OR = {
											trait = zealous
											trait = temperate
											trait = theologian
											is_theocracy = yes
										}
									}
									trigger_else_if = { # Moralizers against thin
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value < -7
												}
											}
										}

										OR = {
											trait = gluttonous
											trait = duelist
											trait = hunter
											trait = hedonist
										}
									}
								}
							}

							character_event = { id = HFP.20650 } # Spouse is worried
						}
					}

					25 = {
						trigger = {
							any_close_relative = {
								block_general_event_trigger = no
								is_within_diplo_range = ROOT

								OR = {
									trait = kind # Genuine care

									opinion = { # Genuine care
										who = ROOT
										value >= 20
									}

									# Moralizers against fat
									trigger_if = {
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value >= 7
												}
											}
										}

										OR = {
											trait = zealous
											trait = temperate
											trait = theologian
											is_theocracy = yes
										}
									}
									trigger_else_if = { # Moralizers against thin
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value < -7
												}
											}
										}

										OR = {
											trait = gluttonous
											trait = duelist
											trait = hunter
											trait = hedonist
										}
									}
								}
							}
						}

						random_close_relative = {
							limit = {
								block_general_event_trigger = no
								is_within_diplo_range = ROOT

								OR = {
									trait = kind # Genuine care

									opinion = { # Genuine care
										who = ROOT
										value >= 20
									}

									# Moralizers against fat
									trigger_if = {
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value >= 7
												}
											}
										}

										OR = {
											trait = zealous
											trait = temperate
											trait = theologian
											is_theocracy = yes
										}
									}
									trigger_else_if = { # Moralizers against thin
										limit = {
											ROOT = {
												check_variable = {
													which = physique_variable
													value < -7
												}
											}
										}

										OR = {
											trait = gluttonous
											trait = duelist
											trait = hunter
											trait = hedonist
										}
									}
								}
							}

							character_event = { id = HFP.20650 } # Relative is worried
						}
					}

					25 = {
						trigger = {
							any_lover = { block_general_event_trigger = no }
						}

						random_lover = {
							limit = { block_general_event_trigger = no }

							character_event = { id = HFP.20650 } # Lover is worried
						}
					}

					25 = {
						trigger = {
							any_friend = { block_general_event_trigger = no }
						}

						random_friend = {
							limit = { block_general_event_trigger = no }

							character_event = { id = HFP.20650 } # Friend is worried
						}
					}
				}
			}

			50 = { #...or bad advice
				trigger = {
					# Respectable, average person
					is_ill = no
					has_negative_congenital_trigger = no
					practical_age < 50
					prestige >= 0

					check_variable = { which = physique_variable value >= -10 }
					check_variable = { which = physique_variable value < 10 }

					NOR = {
						trait = possessed
						trait = lunatic
					}

					any_close_relative = {
						same_sex = ROOT
						block_general_event_trigger = no

						OR = {
							trait = deceitful
							trait = envious
							trait = cruel
							trait = schemer
							is_rival = ROOT

							opinion = {
								who = ROOT
								value < 20
							}
						}

						NOR = {
							trait = kind
							is_lover = ROOT
							is_friend = ROOT
						}
					}
				}

				random_close_relative = {
					limit = {
						same_sex = ROOT
						block_general_event_trigger = no

						OR = {
							trait = deceitful
							trait = envious
							trait = cruel
							trait = schemer
							is_rival = ROOT

							opinion = {
								who = ROOT
								value < 20
							}
						}

						NOR = {
							trait = kind
							is_lover = ROOT
							is_friend = ROOT
						}
					}

					character_event = { id = HFP.20651 } # Relative is jealous
				}
			}
		}
	}
}

# Genuinely concerned character: what to do?
character_event = {
	id = HFP.20650

	desc = {
		text = EVTDESCAHFP20650
		picture = GFX_evt_fancy_feast
		trigger = {
			FROM = {
				check_variable = { which = physique_variable value >= 7 }
				is_female = no
			}
		}
	}
	desc = {
		text = EVTDESCBHFP20650
		picture = GFX_evt_brothel
		trigger = {
			FROM = {
				check_variable = { which = physique_variable value >= 7 }
				is_female = yes
			}
		}
	}
	desc = {
		text = EVTDESCCHFP20650
		picture = GFX_evt_library
		trigger = {
			FROM = {
				check_variable = { which = physique_variable value < -7 }
				is_female = no
			}
		}
	}
	desc = {
		text = EVTDESCDHFP20650
		picture = GFX_evt_princess_byzantine
		trigger = {
			FROM = {
				check_variable = { which = physique_variable value < -7 }
				is_female = yes
			}
		}
	}

	is_triggered_only = yes

	option = { # Suggest to eat less (+10)
		name = EVTOPTAHFP20650

		trigger = {
			FROM = { check_variable = { which = physique_variable value >= 5 } }
		}

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20652
				days = 10
				tooltip = tooltip_20650_A
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 1.75

				OR = {
					trait = zealous
					trait = theologian
					is_theocracy = yes
				}
			}

			mult_modifier = {
				factor = 1.5
				is_weak_non_congenital_trigger = yes
			}

			mult_modifier = {
				factor = 1.5
				trait = temperate
			}

			mult_modifier = {
				factor = 1.5
				trait = diligent
			}

			mult_modifier = {
				factor = 1.5
				trait = is_malnourished
			}

			mult_modifier = {
				factor = 1.5
				trait = duelist
			}

			mult_modifier = {
				factor = 1.5
				trait = hunter
			}

			mult_modifier = {
				factor = 1.5
				trait = kind
			}

			mult_modifier = {
				factor = 1.5
				trait = honest
			}
		}
	}

	option = { # Suggest to eat less (-10)
		name = EVTOPTBHFP20650

		trigger = {
			FROM = { check_variable = { which = physique_variable value < -5 } }
		}

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20652
				days = 10
				tooltip = tooltip_20650_B
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 1.75

				OR = {
					trait = zealous
					trait = theologian
					is_theocracy = yes
				}
			}

			mult_modifier = {
				factor = 1.5
				is_weak_non_congenital_trigger = yes
			}

			mult_modifier = {
				factor = 1.5
				trait = temperate
			}

			mult_modifier = {
				factor = 1.5
				trait = diligent
			}

			mult_modifier = {
				factor = 1.5
				trait = is_malnourished
			}
		}
	}

	option = { # Suggest to eat more (+10)
		name = EVTOPTCHFP20650

		trigger = {
			FROM = { check_variable = { which = physique_variable value >= 5 } }
		}

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20653
				days = 10
				tooltip = tooltip_20650_C
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 1.75
				trait = hedonist
			}

			mult_modifier = {
				factor = 1.5
				trait = sturdy
			}

			mult_modifier = {
				factor = 1.5
				trait = robust
			}

			mult_modifier = {
				factor = 1.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 1.5
				trait = drunkard
			}

			mult_modifier = {
				factor = 1.5
				trait = is_fat
			}
		}
	}

	option = { # Suggest to eat more (-10)
		name = EVTOPTDHFP20650

		trigger = {
			FROM = { check_variable = { which = physique_variable value < -5 } }
		}

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20653
				days = 10
				tooltip = tooltip_20650_D
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 1.75
				trait = hedonist
			}

			mult_modifier = {
				factor = 1.5
				trait = sturdy
			}

			mult_modifier = {
				factor = 1.5
				trait = robust
			}

			mult_modifier = {
				factor = 1.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 1.5
				trait = drunkard
			}

			mult_modifier = {
				factor = 1.5
				trait = is_fat
			}

			mult_modifier = {
				factor = 1.5
				trait = duelist
			}

			mult_modifier = {
				factor = 1.5
				trait = hunter
			}

			mult_modifier = {
				factor = 1.5
				trait = kind
			}

			mult_modifier = {
				factor = 1.5
				trait = honest
			}
		}
	}

	option = { # Not my business
		name = EVTOPTEHFP20650

		ai_chance = {
			factor = 30

			trigger = {
				NOR = {
					is_lover = FROM
					is_friend = FROM
				}
			}

			mult_modifier = {
				factor = 0.75
				trait = honest
			}

			mult_modifier = {
				factor = 0.75
				trait = gregarious
			}

			mult_modifier = {
				factor = 0.5
				is_married = FROM
			}
		}
	}
}

# Ill-advising character: what to do?
character_event = {
	id = HFP.20651
	desc = EVTDESCAHFP20651
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = { # Suggest is fat
		name = EVTOPTAHFP20651

		set_character_flag = flag_ill_advisor # For localization

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20652
				days = 10
				tooltip = tooltip_20651_A
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = is_malnourished
			}

			mult_modifier = {
				factor = 1.5
				trait = gluttonous
			}

			mult_modifier = {
				factor = 1.5
				is_weak_non_congenital_trigger = yes
			}

			mult_modifier = {
				factor = 1.5
				trait = hedonist
			}

			mult_modifier = {
				factor = 1.5
				trait = duelist
			}

			mult_modifier = {
				factor = 1.5
				trait = hunter
			}
		}
	}

	option = { # Suggest is thin
		name = EVTOPTBHFP20651

		set_character_flag = flag_ill_advisor # For localization

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20653
				days = 10
				tooltip = tooltip_20651_B
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5
				trait = is_fat
			}

			mult_modifier = {
				factor = 1.5
				trait = sturdy
			}

			mult_modifier = { # Would consider it a downgrade
				factor = 1.5

				OR = {
					trait = zealous
					trait = theologian
					is_theocracy = yes
				}
			}

			mult_modifier = {
				factor = 1.5
				trait = robust
			}

			mult_modifier = {
				factor = 1.5
				trait = hunter
			}

			mult_modifier = {
				factor = 1.5
				trait = proud
			}

			mult_modifier = {
				factor = 1.75
				trait = temperate
			}
		}
	}
	option = { # Not my business
		name = EVTOPTDHFP20651

		ai_chance = {
			factor = 10

			mult_modifier = {
				factor = 0.75
				trait = deceitful
			}

			mult_modifier = {
				factor = 0.75
				trait = cruel
			}
		}
	}
}

# Character encouraged to eat less
character_event = {
	id = HFP.20652
	desc = EVTDESCHAFP20652
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	option = { # Paranoid
		name = EVTOPTAHFP20652
		tooltip_info = paranoid

		trigger = { trait = paranoid }

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20658
				tooltip = tooltip_20652_A
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5

				check_variable = {
					which = physique_variable
					value < -7
				}
			}
		}
	}

	option = { # Trusting
		name = EVTOPTBHFP20652

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20655
				tooltip = tooltip_20652_B
			}
		}

		lose_weight_medium_effect = yes

		character_event = {
			id = HFP.20657  # Results
			days = 30
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5

				check_variable = {
					which = physique_variable
					value >= 7
				}
			}

			mult_modifier = {
				factor = 1.75
				is_friend = FROM
			}

			mult_modifier = {
				factor = 1.75
				is_lover = FROM
			}

			mult_modifier = {
				factor = 0.25
				is_rival = FROM
			}

			mult_modifier = {
				factor = 1.5
				is_married = FROM
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 8
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 10
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 12
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 15
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.25

				opinion = {
					who = FROM
					value >= 30
				}
			}

			mult_modifier = {
				factor = 1.25

				opinion = {
					who = FROM
					value >= 50
				}
			}

			mult_modifier = {
				factor = 1.5

				opinion = {
					who = FROM
					value >= 70
				}
			}

			mult_modifier = {
				factor = 1.75

				opinion = {
					who = FROM
					value >= 90
				}
			}
		}
	}

	option = { # Not trusting
		name = EVTOPTCHFP20652

		trigger = { NOT = { trait = trusting } }

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20660
				tooltip = tooltip_20652_C
			}
		}

		random = {
			chance = 30

			if = {
				limit = { trait = stressed }

				custom_tooltip = {
					text = tooltip_health_deteriorates
					health = -0.25
				}
			}
			else = {
				add_trait_stressed_effect = yes
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5

				check_variable = {
					which = physique_variable
					value < 7
				}
			}

			mult_modifier = {
				factor = 1.75
				trait = stubborn
			}

			mult_modifier = {
				factor = 1.5

				opinion = {
					who = FROM
					value < 0
				}
			}

			mult_modifier = {
				factor = 1.75

				opinion = {
					who = FROM
					value < -40
				}
			}

			mult_modifier = {
				factor = 1.75

				opinion = {
					who = FROM
					value < -60
				}
			}

			mult_modifier = {
				factor = 1.75
				opinion = {
					who = FROM
					value < -80
				}
			}
		}
	}
}

# Character encouraged to eat more
character_event = {
	id = HFP.20653
	picture = GFX_evt_courtiers_talking

	desc = {
		text = EVTDESCAHFP20653
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20653
		trigger = { is_female = yes }
	}

	is_triggered_only = yes

	trigger = {
		FROM = { is_alive = yes }
	}

	option = { # Paranoid
		name = EVTOPTAHFP20653
		tooltip_info = paranoid

		trigger = { trait = paranoid }

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20658
				tooltip = tooltip_20653_A
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5

				check_variable = {
					which = physique_variable
					value >= 10
				}
			}
		}
	}

	option = { # Trusting
		name = EVTOPTBHFP20653

		gain_weight_medium_effect = yes

		FROM = {
			show_scope_change = no

			character_event = {
				id = HFP.20654
				tooltip = tooltip_20653_B
			}
		}

		character_event = {
			id = HFP.20656 # Results
			days = 30
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 1.5

				check_variable = {
					which = physique_variable
					value < -10
				}
			}

			mult_modifier = {
				factor = 1.75
				is_friend = FROM
			}

			mult_modifier = {
				factor = 1.75
				is_lover = FROM
			}

			mult_modifier = {
				factor = 0.25
				is_rival = FROM
			}

			mult_modifier = {
				factor = 1.5
				is_married = FROM
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 8
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 10
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 12
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.5

				FROM = {
					intrigue >= 15
					has_character_flag = flag_ill_advisor
				}
			}

			mult_modifier = {
				factor = 1.25

				opinion = {
					who = FROM
					value >= 30
				}
			}

			mult_modifier = {
				factor = 1.25

				opinion = {
					who = FROM
					value >= 50
				}
			}

			mult_modifier = {
				factor = 1.5

				opinion = {
					who = FROM
					value >= 70
				}
			}

			mult_modifier = {
				factor = 1.75

				opinion = {
					who = FROM
					value >= 90
				}
			}
		}
	}

	option = { # Not trusting
		name = EVTOPTCHFP20653
		trigger = { NOT = { trait = trusting } }
		custom_tooltip = { text = tooltip_20653_C }
		random = { 
			chance = 30
			if = { 
				limit = { trait = stressed } 
				custom_tooltip = { text = tooltip_health_deteriorates }
				hidden_tooltip = { health = -0.25 }
			}
			if = { 
				limit = { NOT = { trait = stressed } } 
				add_trait = stressed
				hidden_tooltip = { character_event = { id = 38282 } }
			}
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20659 } } }
		ai_chance = { 
			factor = 50
			modifier = {
				factor = 1.5
				check_variable = { which = physique_variable value = 10 } 
			}
			modifier = {
				factor = 1.75
				trait = stubborn
			}
			modifier = {
				factor = 1.5
				NOT = { 
					opinion = { 
						who = FROM 
						value = 0
					}
				}
			}
			modifier = {
				factor = 1.75
				NOT = { 
					opinion = { 
						who = FROM 
						value = -40
					}
				}
			}
			modifier = {
				factor = 1.75
				NOT = { 
					opinion = { 
						who = FROM 
						value = -60
					}
				}
			}
			modifier = {
				factor = 1.75
				NOT = { 
					opinion = { 
						who = FROM 
						value = -80
					}
				}
			}
		}
	}
}

#Advisor notified: Character is eating more.
character_event = {
	id = HFP.20654
	desc = {
		text = EVTDESCHAFP20654
		trigger = { 
			FROM = { is_female = no } 
			NOT = { has_character_flag = flag_ill_advisor } 
		}
	}
	desc = {
		text = EVTDESCHBFP20654
		trigger = { 
			FROM = { is_female = yes }
			NOT = { has_character_flag = flag_ill_advisor } 
		}
	}
	desc = {
		text = EVTDESCHCFP20654
		trigger = { 
			has_character_flag = flag_ill_advisor 
		}
	}

	trigger = { 
		FROM = { is_alive = yes } 
	}

	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = { #Good
		name = EVTOPTAHFP20654
		if = { 
			limit = { 
				trait = deceitful 
				has_character_flag = flag_ill_advisor
			} 
			random = { 
				chance = 30
				change_intrigue = 1
			}
		}
		if = { 
			limit = { 
				NOT = { trait = deceitful } 
				has_character_flag = flag_ill_advisor
			} 
			random = { 
				chance = 30
				add_trait = deceitful
				hidden_tooltip = { character_event = { id = 38255 } }
			}
		}
		if = { 
			limit = { 
				NOT = { has_character_flag = flag_ill_advisor } 
				FROM = { NOT = { check_variable = { which = physique_variable value = 10 } } } #Character is recovering.
			} 
			tiered_piety_reward_effect = yes
		}
		if = { 
			limit = { 
				NOT = { has_character_flag = flag_ill_advisor } 
				FROM = { check_variable = { which = physique_variable value = 10 } } #Character is getting worse.
			} 
			tiered_prestige_reward_effect = yes
		}
		clr_character_flag = flag_ill_advisor
		ai_chance = { 
			factor = 100
		}
	}
}

#Advisor notified: Character is eating less.
character_event = {
	id = HFP.20655
	desc = {
		text = EVTDESCHAFP20655
		trigger = { 
			FROM = { is_female = no }
			NOT = { has_character_flag = flag_ill_advisor } 
		}
	}
	desc = {
		text = EVTDESCHBFP20655
		trigger = { 
			FROM = { is_female = yes }
			NOT = { has_character_flag = flag_ill_advisor } 
		}
	}
	desc = {
		text = EVTDESCHCFP20655
		trigger = { 
			has_character_flag = flag_ill_advisor 
		}
	}

	trigger = { 
		FROM = { is_alive = yes } 
	}

	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = { #Good
		name = EVTOPTAHFP20655
		if = { 
			limit = { 
				trait = deceitful 
				has_character_flag = flag_ill_advisor
			} 
			random = { 
				chance = 30
				change_intrigue = 1
			}
		}
		if = { 
			limit = { 
				NOT = { trait = deceitful } 
				has_character_flag = flag_ill_advisor
			} 
			random = { 
				chance = 30
				add_trait = deceitful
				hidden_tooltip = { character_event = { id = 38255 } }
			}
		}
		if = { 
			limit = { 
				NOT = { has_character_flag = flag_ill_advisor } 
				FROM = { check_variable = { which = physique_variable value = -10 } } #Character is recovering.
			} 
			tiered_piety_reward_effect = yes
		}
		if = { 
			limit = { 
				NOT = { has_character_flag = flag_ill_advisor } 
				FROM = { NOT = { check_variable = { which = physique_variable value = -10 } } } #Character is getting worse.
			} 
			tiered_prestige_reward_effect = yes
		}
		clr_character_flag = flag_ill_advisor
		ai_chance = { 
			factor = 100
		}
	}
}

#Results of character eating more.
character_event = {
	id = HFP.20656
	desc = {
		text = EVTDESCHAFP20656
		trigger = { 
			is_female = no
			check_variable = { which = physique_variable value = 15 }
		}
	}
	desc = {
		text = EVTDESCHBFP20656
		trigger = { 
			is_female = yes
			check_variable = { which = physique_variable value = 15 }
		}
	}
	desc = {
		text = EVTDESCHCFP20656
		trigger = { 
			is_female = no
			NOT = { check_variable = { which = physique_variable value = 15 } }
		}
	}
	desc = {
		text = EVTDESCHDFP20656
		trigger = { 
			is_female = yes
			NOT = { check_variable = { which = physique_variable value = 15 } }
		}
	}

	picture = GFX_evt_fancy_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20656
		set_character_flag = flag_primed_physique #No flavor needed.
		weight_trait_check_effect = yes
		ai_chance = { 
			factor = 100
		}
	}
}

#Results of character eating less.
character_event = {
	id = HFP.20657
	desc = {
		text = EVTDESCHAFP20657
		picture = GFX_evt_bad_news
		trigger = { 
			NOT = { check_variable = { which = physique_variable value = -15 } }
		}
	}
	desc = {
		text = EVTDESCHCFP20657
		picture = GFX_evt_recovery
		trigger = { 
			is_female = no
			check_variable = { which = physique_variable value = -15 }
		}
	}
	desc = {
		text = EVTDESCHDFP20657
		picture = GFX_evt_recovery
		trigger = { 
			is_female = yes
			check_variable = { which = physique_variable value = -15 }
		}
	}

	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20657
		set_character_flag = flag_primed_physique #No flavor needed.
		weight_trait_check_effect = yes
		ai_chance = { 
			factor = 100
		}
	}
}

#Advisor: character doesn't trust you.
character_event = {
	id = HFP.20658
	desc = {
		text = EVTDESCHAFP20658
		trigger = { 
			NOT = { has_character_flag = flag_ill_advisor } 
		}
	}
	desc = {
		text = EVTDESCHBFP20658
		trigger = { 
			has_character_flag = flag_ill_advisor
		}
	}

	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20658
		clr_character_flag = flag_ill_advisor
		opinion = { 
			who = FROM
			modifier = opinion_offended
			years = 5
		} 
		ai_chance = { 
			factor = 100
		}
	}
}


#Advisor: character doesn't want to eat more.
character_event = {
	id = HFP.20659
	desc = {
		text = EVTDESCAHFP20659
		trigger = { 
			NOT = { has_character_flag = flag_ill_advisor } 
		}
	}
	desc = {
		text = EVTDESCBHFP20659
		trigger = { 
			has_character_flag = flag_ill_advisor
		}
	}

	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20659
		clr_character_flag = flag_ill_advisor
		ai_chance = { 
			factor = 100
		}
	}
}

#Advisor: character doesn't want to eat less.
character_event = {
	id = HFP.20660
	desc = {
		text = EVTDESCAHFP20660
		trigger = { 
			NOT = { has_character_flag = flag_ill_advisor } 
		}
	}
	desc = {
		text = EVTDESCBHFP20660
		trigger = { 
			has_character_flag = flag_ill_advisor
		}
	}
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20660
		clr_character_flag = flag_ill_advisor
		ai_chance = { 
			factor = 100
		}
	}
}


# Health complications: late life health issues.

#Character has become obese.
character_event = {
	id = HFP.20661
	desc = EVTDESCAHFP20661
	picture = GFX_evt_fancy_feast
	min_age = 40	#Unlikely to happen earlier.
	capable_only = yes
	prisoner = no

	is_triggered_only = yes
	
	trigger = { 
		trait = is_fat 
		NOT = { has_character_modifier = obese_modifier }
		check_variable = { which = physique_variable value = 30 }
		has_character_flag = flag_becoming_obese		#Gained in HFP.20647
	} 
	weight_multiplier = {
		factor = 1
		modifier = {
			factor = 2
			has_character_modifier = well_fed
		}
		modifier = {
			factor = 1.5
		check_variable = { which = physique_variable value = 35 }
		}
		modifier = {
			factor = 3
		check_variable = { which = physique_variable value = 40 }
		}
		modifier = {
			factor = 5
		check_variable = { which = physique_variable value = 50 }
		}
		modifier = {
			factor = 7
		check_variable = { which = physique_variable value = 60 }
		}
		modifier = {
			factor = 10
		check_variable = { which = physique_variable value = 70 }
		}
	}

	option = { #Too late to do anything anymore.
		name = EVTOPTCHFP20661	
		add_character_modifier = {
			name = obese_modifier
			duration = -1
		}
		clr_character_flag = flag_becoming_obese
		hidden_tooltip = { 
			if = { 
				limit = { check_variable = { which = physique_variable value = 35 } } 
				health = -0.5
			}
			if = { 
				limit = { check_variable = { which = physique_variable value = 40 } } 
				health = -0.7
			}
			if = { 
				limit = { check_variable = { which = physique_variable value = 45 } } 
				health = -0.7
			}
			if = { 
				limit = { check_variable = { which = physique_variable value = 50 } } 
				health = -1.0
			}
			if = { 
				limit = { check_variable = { which = physique_variable value = 55 } } 
				health = -2.0
			}
		} 
		gain_weight_small_effect = yes
		ai_chance = { factor = 30 }
	}
}

#Character has become severely underweight.
character_event = {
	id = HFP.20662
	desc = EVTDESCAHFP20662
	picture = GFX_evt_bad_news
	min_age = 40	#Unlikely to happen earlier.
	capable_only = yes
	prisoner = no 	#Starvation in prison still handled by vanilla events.

	is_triggered_only = yes
	
	trigger = { 
		trait = is_malnourished
		NOT = { has_character_modifier = severely_underweight_modifier }
		NOT = { check_variable = { which = physique_variable value = -30 } }
		has_character_flag = flag_becoming_underweight 	#Gained in HFP.20648
	} 
	weight_multiplier = {
		factor = 1
		modifier = {
			factor = 2
			has_character_modifier = one_year_fasting
		}
		modifier = {
			factor = 2
			prisoner = yes
		}
		modifier = {
			factor = 3
		NOT = { check_variable = { which = physique_variable value = -35 } }
		}
		modifier = {
			factor = 5
		NOT = { check_variable = { which = physique_variable value = -40 } }
		}
		modifier = {
			factor = 10
		NOT = { check_variable = { which = physique_variable value = -45 } }
		}
		modifier = {
			factor = 10
		NOT = { check_variable = { which = physique_variable value = -50 } }
		}
		modifier = {
			factor = 10
		NOT = { check_variable = { which = physique_variable value = -55 } }
		}
	}

	option = { #Too late now.
		name = EVTOPTAHFP20662
		add_character_modifier = {
			name = severely_underweight_modifier
			duration = -1
		}
		clr_character_flag = flag_becoming_underweight
		hidden_tooltip = { 
			if = { 
				limit = { NOT = { check_variable = { which = physique_variable value = -30 } } } 
				health = -0.75
			}
			if = { 
				limit = { NOT = { check_variable = { which = physique_variable value = -35 } } } 
				health = -0.75
			}
			if = { 
				limit = { NOT = { check_variable = { which = physique_variable value = -40 } } } 
				health = -1.0
			}
			if = { 
				limit = { NOT = { check_variable = { which = physique_variable value = -45 } } } 
				health = -1.5
			}
			if = { 
				limit = { NOT = { check_variable = { which = physique_variable value = -50 } } } 
				health = -2.0
			}
			if = { 
				limit = { NOT = { check_variable = { which = physique_variable value = -55 } } }
				health = -3.0
			}
		} 
		lose_weight_small_effect = yes
		ai_chance = { factor = 30 }
	}
}
######################################
#### Additional Flavor ####

#Fat ruler becomes proud
character_event = {
	id = HFP.20663
	desc = {
		text = EVTDESCAHFP20663
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20663
		trigger = { is_female = yes }
	}
	picture = GFX_evt_fancy_feast

	trigger = { 
		trait = is_fat
		has_fat_for_flag_trigger = yes #Won't fire if recovered in the meantime due to thirdparty help
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20663
		tooltip_info = is_fat
		if = { 
			limit = { trait = proud } 
			tiered_prestige_reward_effect = yes
		} 
		if = { 
			limit = { trait = humble } 
			remove_trait = humble
		} 
		if = { 
			limit = { NOT = { trait = proud } } 
			add_trait = proud
		}
		#clear_fat_flags_effect = yes
		ai_chance = { factor = 100 }
	}
}

#Fat ruler becomes patient
character_event = {
	id = HFP.20664
	desc = {
		text = EVTDESCAHFP20664
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20664
		trigger = { is_female = yes }
	}
	picture = GFX_evt_courtiers_talking

	trigger = { 
		trait = is_fat
		has_fat_for_flag_trigger = yes #Won't fire if recovered in the meantime due to thirdparty help
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20664
		tooltip_info = is_fat
		if = { 
			limit = { trait = proud } 
			piety = 50
		} 
		if = { 
			limit = { trait = wroth } 
			remove_trait = wroth
		} 
		if = { 
			limit = { NOT = { trait = patient } } 
			add_trait = patient
		}
		#clear_fat_flags_effect = yes
		ai_chance = { factor = 100 }
	}
}

#Fat ruler becomes content
character_event = {
	id = HFP.20665
	desc = {
		text = EVTDESCAHFP20665
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20665
		trigger = { is_female = yes }
	}
	picture = GFX_evt_recovery

	trigger = { 
		trait = is_fat
		has_fat_for_flag_trigger = yes #Won't fire if recovered in the meantime due to thirdparty help
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20665
		tooltip_info = is_fat
		if = { 
			limit = { trait = content } 
			piety = 50
		} 
		if = { 
			limit = { trait = ambitious } 
			remove_trait = ambitious
		} 
		if = { 
			limit = { NOT = { trait = content } } 
			add_trait = content
		}
		#clear_fat_flags_effect = yes
		ai_chance = { factor = 100 }
	}
}


#Malnourished ruler becomes humble
character_event = {
	id = HFP.20666
	desc = {
		text = EVTDESCAHFP20666
	}
	picture = GFX_evt_recovery

	trigger = { 
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes #Won't fire if recovered in the meantime due to thirdparty help
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20666
		tooltip_info = is_malnourished
		if = { 
			limit = { trait = humble } 
			piety = 50
		} 
		if = { 
			limit = { trait = proud } 
			remove_trait = proud
		} 
		if = { 
			limit = { NOT = { trait = humble } } 
			add_trait = humble
		}
		#clear_fat_flags_effect = yes
		ai_chance = { factor = 100 }
	}
}

#Malnourished ruler becomes envious
character_event = {
	id = HFP.20667
	desc = {
		text = EVTDESCAHFP20667
		trigger = { is_female = no }
	}
	desc = {
		text = EVTDESCBHFP20667
		trigger = { is_female = yes }
	}
	picture = GFX_evt_scandal

	trigger = { 
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes #Won't fire if recovered in the meantime due to thirdparty help
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20667
		tooltip_info = is_malnourished
		if = { 
			limit = { trait = kind } 
			remove_trait = kind
		} 
		if = { 
			limit = { NOT = { trait = envious } } 
			add_trait = envious
		}
		#clear_fat_flags_effect = yes
		ai_chance = { factor = 100 }
	}
}

#Malnourished ruler becomes cruel
character_event = {
	id = HFP.20668
	desc = {
		text = EVTDESCAHFP20668
		trigger = { has_character_flag = flag_malnourished_for_paranoid }
	}
	desc = {
		text = EVTDESCBHFP20668
		trigger = { has_character_flag = flag_malnourished_for_slothful }
	}
	desc = {
		text = EVTDESCCHFP20668
		trigger = { has_character_flag = flag_malnourished_for_cannibal }
	}
	picture = GFX_evt_lunatic

	trigger = { 
		trait = is_malnourished
		has_malnourished_for_flag_trigger = yes #Won't fire if recovered in the meantime due to thirdparty help
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20668
		tooltip_info = is_malnourished
		if = { 
			limit = { trait = kind } 
			remove_trait = kind
		} 
		if = { 
			limit = { NOT = { trait = cruel } } 
			add_trait = cruel
		}
		#clear_fat_flags_effect = yes
		ai_chance = { factor = 100 }
	}
}


#Event for sturdy/feeble teenage, chance to turn it into something else.
#Chance of triggering in the adolescence event itself.
character_event = {
	id = HFP.20669
	desc = {
		text = EVTDESCAHFP20669
		trigger = { 
			trait = sturdy
			is_female = no
		}
	}
	desc = {
		text = EVTDESCBHFP20669
		trigger = { 
			trait = sturdy
			is_female = yes
		}
	}
	desc = {
		text = EVTDESCCHFP20669
		trigger = { 
			is_weak_non_congenital_trigger = yes
			is_female = no
		}
	}
	desc = {
		text = EVTDESCDHFP20669
		trigger = { 
			is_weak_non_congenital_trigger = yes
			is_female = yes
		}
	}
	picture = GFX_evt_courtiers_talking

	is_triggered_only = yes

	option = { #Military training is what I need!
		name = EVTOPTAHFP20669
		trigger = { 
			NOR = { 
				trait = is_fat
				trait = is_malnourished #Shouldn't be either at this age anyway, but, just to be safe...
			}
			OR = { 
				trait = sturdy
				is_weak_non_congenital_trigger = yes
			}
			combat_rating = 15
			OR = {
				trait = misguided_warrior
				trait = tough_soldier 
				trait = skilled_tactician
				trait = brilliant_strategist 
			}
		}
		tooltip_info = combat_rating
		custom_tooltip = { text = tooltip_20663_A } 
		balance_weight_large_effect = yes
		hidden_tooltip = {
			random_list = {
				80 = { #Success - Character stops being sturdy/feeble
					character_event = { id = HFP.20670 days = 150 random = 150 } 
				}
				20 = { #Critical Success - Character becomes brawny
					character_event = { id = HFP.20671 days = 150 random = 150 } 
				}
			} 
		}
		ai_chance = { 
			factor = 100
		}
	}
	option = { #Eat less.
		name = EVTOPTBHFP20669
		trigger = { 
			trait = sturdy
		}
		custom_tooltip = { text = tooltip_20663_B } 
		balance_weight_large_effect = yes
		hidden_tooltip = {
			random_list = {
				10 = { #Overboard - Character becomes feeble
					character_event = { id = HFP.20672 days = 150 random = 150 } 
				}
				50 = { #Success - Character stops being sturdy
					character_event = { id = HFP.20673 days = 150 random = 150 } 
				}
				30 = { #Failure - Character still sturdy
				}
			} 
		} 
		ai_chance = { 
			factor = 50
		}
	}
	option = { #Eat more.
		name = EVTOPTCHFP20669
		trigger = { 
			is_weak_non_congenital_trigger = yes
		}
		custom_tooltip = { text = tooltip_20663_C } 
		balance_weight_large_effect = yes
		hidden_tooltip = {
			random_list = {
				10 = { #Overboard - Character becomes sturdy
					character_event = { id = HFP.20674 days = 150 random = 150 } 
				}
				50 = { #Success - Character stops being feeble
					character_event = { id = HFP.20675 days = 150 random = 150 } 
				}
				30 = { #Failure - Character still feeble
				}
			} 
		} 
		ai_chance = { 
			factor = 50
		}
	}
	option = { #Nothing
		name = EVTOPTDHFP20669
		ai_chance = { 
			factor = 0
		}
	}
}

#Training removes sturdy/feeble
character_event = {
	id = HFP.20670
	desc = {
		text = EVTDESCAHFP20670
		trigger = { 
			trait = sturdy
		}
	}
	desc = {
		text = EVTDESCBHFP20670
		trigger = { 
			is_weak_non_congenital_trigger = yes
		}
	}
	desc = EVTDESCAHFP20670
	picture = GFX_evt_child_sword

	trigger = { 
		OR = { 
			trait = sturdy
			is_weak_non_congenital_trigger = yes
		}
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20670
		if = { 
			limit = { trait = sturdy } 
			remove_trait = sturdy
		} 
		upgrade_strong_non_congenital_trait_effect = yes
		prestige = 25
		ai_chance = { factor = 100 }
	}
}

#Training makes brawny
character_event = {
	id = HFP.20671
	desc = EVTDESCAHFP20671
	picture = GFX_evt_child_sword

	trigger = { 
		OR = { 
			trait = sturdy
			is_weak_non_congenital_trigger = yes
		}
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20671
		if = { 
			limit = { trait = sturdy } 
			remove_trait = sturdy
		} 
		upgrade_strong_non_congenital_trait_effect = yes
		prestige = 25
		ai_chance = { factor = 100 }
	}
}

#Sturdy becomes feeble
character_event = {
	id = HFP.20672
	desc = EVTDESCAHFP20672
	picture = GFX_evt_child_reading

	trigger = { 
		trait = sturdy
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20672
		if = { 
			limit = { trait = sturdy } 
			remove_trait = sturdy
		} 
		add_trait = feeble
		prestige = 25
		ai_chance = { factor = 100 }
	}
}

#Character no longer sturdy.
character_event = {
	id = HFP.20673
	desc = EVTDESCAHFP20673
	picture = GFX_evt_child_reading

	trigger = { 
		trait = sturdy
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20673
		if = { 
			limit = { trait = sturdy } 
			remove_trait = sturdy
		} 
		prestige = 25
		ai_chance = { factor = 100 }
	}
}

#feeble becomes sturdy
character_event = {
	id = HFP.20674
	desc = {
		text = EVTDESCAHFP20674
		trigger = { 
			is_female = no
		}
	}
	desc = {
		text = EVTDESCBHFP20674
		trigger = { 
			is_female = yes
		}
	}
	picture = GFX_evt_child_reading

	trigger = { 
		is_weak_non_congenital_trigger = yes
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20674
		if = { 
			limit = { is_weak_non_congenital_trigger = yes } 

			upgrade_strong_non_congenital_trait_effect = yes
		} 
		add_trait = sturdy
		prestige = 25
		ai_chance = { factor = 100 }
	}
}

#Character no longer feeble.
character_event = {
	id = HFP.20675
	desc = EVTDESCAHFP20675
	picture = GFX_evt_child_reading

	trigger = { 
		is_weak_non_congenital_trigger = yes
	}

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20675
		if = { 
			limit = { is_weak_non_congenital_trigger = yes } 
			upgrade_strong_non_congenital_trait_effect = yes
		} 
		prestige = 25
		ai_chance = { factor = 100 }
	}
}

######################################################
#Potential Obese/Underweight flavor. (fired from the events applying those modifiers) - Higher than Count only.

#The Leechlord (requires Reaper's Due).
#Court Physician has brilliant idea.
character_event = {
	id = HFP.20676
	desc = EVTDESCAHFP20676
	picture = GFX_evt_died_old_age

	trigger = { 
		has_minor_title = title_court_physician
		FROM = { 
			is_alive = yes
			trait = is_malnourished
		}
	}

	is_triggered_only = yes

	option = { #Inform liege.
		name = EVTOPTAHFP20676
		hidden_tooltip = { FROM = { character_event = { id = HFP.20677 } } }
		ai_chance = { factor = 100 }
	}
	option = { #No.
		name = EVTOPTBHFP20676
		ai_chance = { factor = 0 }
	}
}

#Liege informed of treatment to rebalance humors.
character_event = {
	id = HFP.20677
	desc = EVTDESCAHFP20677
	picture = GFX_evt_died_old_age

	is_triggered_only = yes

	option = { #Yes.
		name = EVTOPTAHFP20677
		custom_tooltip = { text = tooltip_health_improves }
		hidden_tooltip = { health = 0.35 } 
		lose_weight_medium_effect = yes
		FROM = {
			show_scope_change = no 
			opinion = { 
				who = ROOT 
				modifier = opinion_loyal_servant 
				months = 120
			}
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20701 } } } #Notify in case it's player.
		hidden_tooltip = { character_event = { id = HFP.20678 days = 30 random = 30 } }
		ai_chance = { factor = 100 }
	}
	option = { #No.
		name = EVTOPTBHFP20677
		hidden_tooltip = { FROM = { character_event = { id = HFP.20702 } } } 
		ai_chance = { factor = 0 }
	}
}

#Court Physician notified. (End of his line)
character_event = {
	id = HFP.20701
	desc = EVTDESCAHFP20701
	picture = GFX_evt_died_old_age

	is_triggered_only = yes

	option = { #No.
		name = EVTOPTAHFP20701
		tiered_piety_reward_effect = yes
		ai_chance = { factor = 100 }
	}
}
#Court Physician notified. (End of his line)
character_event = {
	id = HFP.20702
	desc = EVTDESCAHFP20702
	picture = GFX_evt_died_old_age

	is_triggered_only = yes

	option = { #No.
		name = EVTOPTAHFP20702
		ai_chance = { factor = 100 }
	}
}

#Time has passed, ruler notices change in behavior.
character_event = {
	id = HFP.20678
	desc = EVTDESCAHFP20678
	picture = GFX_evt_died_old_age
	show_from_from = yes

	is_triggered_only = yes

	option = { #Do not care, but kill physician.
		name = EVTOPTAHFP20678
		trigger = { trait = paranoid }
		tooltip_info = paranoid
		if = { 
			limit = { NOT = { trait = cruel } } 
			add_trait = cruel
		}
		add_character_modifier = { 
			modifier = leechlord_modifier 
			duration = -1 
		}
		if = { 
			limit = { NOT = { has_nickname = yes } } 
			ROOT = { give_nickname = nick_the_leechlord }
		}
		tooltip = {  
			FROMFROM = {
				death = { 
					death_reason = death_execution_hanging
					killer = ROOT 
				}
			}
		}
		hidden_tooltip = { FROMFROM = { character_event = { id = HFP.20679 } } } #Actually kill Physician.
		ai_chance = { factor = 100 }
	}
	option = { #Do not care.
		name = EVTOPTBHFP20678
		if = { 
			limit = { NOT = { trait = cruel } } 
			add_trait = cruel
		}
		add_character_modifier = { 
			modifier = leechlord_modifier 
			duration = -1 
		}
		if = { 
			limit = { NOT = { has_nickname = yes } } 
			ROOT = { give_nickname = nick_the_leechlord }
		}
		opinion = { 
			who = FROMFROM
			modifier = opinion_trusted_servant 
			months = 120
		}
		hidden_tooltip = { FROMFROM = { character_event = { id = HFP.20703 days = 17 } } } #Notify Physician.
		ai_chance = { factor = 50 }
	}
	option = { #Stop treatment.
		name = EVTOPTCHFP20678 
		gain_weight_medium_effect = yes
		remove_opinion = { who = FROMFROM modifier = opinion_trusted_servant }
		custom_tooltip = { text = tooltip_health_deteriorates }
		hidden_tooltip = { health = -0.5 }
		ai_chance = { factor = 0 }
	}
}

#Court Physician notified and executed.
character_event = {
	id = HFP.20679
	desc = EVTDESCAHFP20679
	picture = GFX_evt_died_old_age

	is_triggered_only = yes

	option = { #No.
		name = EVTOPTAHFP20679
		death = { 
			death_reason = death_execution_hanging
			killer = FROM 
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20690 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
}

#Final notification for Leechlord. - Physician has been killed.
character_event = {
	id = HFP.20690
	desc = EVTDESCAHFP20690
	picture = GFX_evt_died_old_age

	is_triggered_only = yes

	option = { #Good.
		name = EVTOPTAHFP20690
		ai_chance = { factor = 100 }
	}
}

#Final notification for Physician.
character_event = {
	id = HFP.20703
	desc = EVTDESCAHFP20703
	picture = GFX_evt_died_old_age

	is_triggered_only = yes

	option = { #Good.
		name = EVTOPTAHFP20703
		hidden_tooltip = { FROM = { character_event = { id = HFP.20691 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
}

#Final notification for Leechlord. - Physician still serving you.
character_event = {
	id = HFP.20691
	desc = EVTDESCAHFP20691
	picture = GFX_evt_died_old_age

	is_triggered_only = yes

	option = { #Good.
		name = EVTOPTAHFP20691
		ai_chance = { factor = 100 }
	}
}


#The Whisperer (requires a non-cruel/envious married vassal).
#Potential vassal is concerned about liege.
character_event = {
	id = HFP.20700
	desc = EVTDESCAHFP20700
	picture = GFX_evt_recovery

	trigger = { 
		vassal_of = FROM
		is_married = yes
		NOT = { is_married = FROM }
		spouse = { 
			OR = { 
				is_ruler = no 
				top_liege = { character = FROM } 
			} 
		}
		FROM = { 
			is_alive = yes
			trait = is_malnourished
		}
	}
	is_triggered_only = yes

	option = { #Yes
		name = EVTOPTAHFP20700
		tiered_piety_reward_effect = yes
		tooltip = {
			opinion = { 
				who = FROM 
				modifier = opinion_loyal_servant 
				months = 120
			}
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20680 } } }
		ai_chance = { factor = 100 }
	}
	option = { #No
		name = EVTOPTBHFP20700
		ai_chance = { factor = 0 }
	}
}

#Liege is informed of special care.
character_event = {
	id = HFP.20680
	desc = EVTDESCAHFP20680
	picture = GFX_evt_recovery

	is_triggered_only = yes

	option = { #Take advantage of care.
		name = EVTOPTAHFP20680
		custom_tooltip = { text = tooltip_health_improves }
		hidden_tooltip = { health = 0.35 } 
		lose_weight_medium_effect = yes
		hidden_tooltip = { FROM = { spouse = { character_event = { id = HFP.20682 days = 30 random = 30 } } } } #Wife of vassal is upset.
		FROM = {
			show_scope_change = no
			opinion = { 
				who = ROOT 
				modifier = opinion_loyal_servant 
				months = 120
			}
		}
		ai_chance = { factor = 100 }
	}
	option = { #No.
		name = EVTOPTBHFP20680
		hidden_tooltip = { FROM = { character_event = { id = HFP.20681 } } } #Inform, end line.
		ai_chance = { factor = 0 }
	}
}

#Potential vassal notified of inappropriate behavior.
character_event = {
	id = HFP.20681
	desc = EVTDESCAHFP20681
	picture = GFX_evt_recovery

	is_triggered_only = yes

	option = { #Yes
		name = EVTOPTAHFP20681
		tooltip = {
			remove_opinion = { 
				who = FROM 
				modifier = opinion_loyal_servant 
			}
		}
		ai_chance = { factor = 100 }
	}
}
#Spouse of vassal notified.
character_event = {
	id = HFP.20682
	desc = EVTDESCAHFP20682
	picture = GFX_evt_scandal

	trigger = { 
		OR = { 
			is_ruler = no 
			top_liege = { character = FROM } 
		}
		is_married = FROMFROM
		FROM = { 
			is_alive = yes
			trait = is_malnourished
		}
	}
	is_triggered_only = yes

	option = { #Complain
		name = EVTOPTAHFP20682
		custom_tooltip = { text = tooltip_HFP20682_A }
		hidden_tooltip = { FROM = { character_event = { id = HFP.20683 } } } #Ruler solves the issue.
		ai_chance = { factor = 100 }
	}
	option = { #Do nothing.
		name = EVTOPTBHFP20682
		ai_chance = { factor = 0 }
	}
}

#Ruler: wife (FROM) of vassal (FROMFROMFROM) complained.
character_event = {
	id = HFP.20683
	desc = EVTDESCAHFP20683
	picture = GFX_evt_scandal

	is_triggered_only = yes

	option = { #Make vassal kill wife.
		name = EVTOPTAHFP20683
		trigger = { trait = cruel }
		tooltip_info = cruel
		if = { 
			limit = { NOT = { trait = deceitful } } 
			add_trait = deceitful
		}
		add_character_modifier = { 
			modifier = whisperer_modifier 
			duration = -1 
		}
		if = { 
			limit = { NOT = { has_nickname = yes } } 
			ROOT = { give_nickname = nick_the_whisperer }
		}
		opinion = { 
			who = FROMFROMFROM
			modifier = opinion_trusted_servant 
			months = 120
		}
		tooltip = {  
			FROM = {
				death = { 
					death_reason = death_murder_unknown
				}
			}
		}
		hidden_tooltip = { FROMFROMFROM = { character_event = { id = HFP.20684 } } } #Vassal obeys.
		ai_chance = { factor = 100 }
	}
	option = { #Make vassal repudiate wife.
		name = EVTOPTBHFP20683
		if = { 
			limit = { NOT = { trait = deceitful } } 
			add_trait = deceitful
		}
		add_character_modifier = { 
			modifier = whisperer_modifier 
			duration = -1 
		}
		if = { 
			limit = { NOT = { has_nickname = yes } } 
			ROOT = { give_nickname = nick_the_whisperer }
		}
		opinion = { 
			who = FROMFROMFROM
			modifier = opinion_trusted_servant 
			months = 120
		}
		hidden_tooltip = { FROMFROMFROM = { character_event = { id = HFP.20686 } } } #Vassal obeys.
		ai_chance = { factor = 50 }
	}
	option = { #Free vassal of vow.
		name = EVTOPTCHFP20683
		if = { 
			limit = { NOT = { trait = kind } } 
			add_trait = kind
		}
		gain_weight_medium_effect = yes
		remove_opinion = { who = FROMFROMFROM modifier = opinion_trusted_servant }
		custom_tooltip = { text = tooltip_health_deteriorates }
		hidden_tooltip = { health = -0.5 }
		ai_chance = { factor = 0 }
	}
}

#Vassal forced to kill his wife.
character_event = {
	id = HFP.20684
	desc = EVTDESCAHFP20684
	picture = GFX_evt_shadow

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20684
		tooltip = {  
			FROMFROM = {
				death = { 
					death_reason = death_murder_unknown
				}
			}
		}
		hidden_tooltip = { FROMFROM = { character_event = { id = HFP.20685 } } } #Actually kill wife.
		ai_chance = { factor = 100 }
	}
}

#Wife is killed.
character_event = {
	id = HFP.20685
	desc = EVTDESCAHFP20685
	picture = GFX_evt_shadow

	is_triggered_only = yes

	option = { #Do nothing.
		name = EVTOPTAHFP20685
		death = { 
			death_reason = death_murder_unknown
		}
		hidden_tooltip = { FROMFROM = { character_event = { id = HFP.20689 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
}

#Vassal forced to repudiate his wife.
character_event = {
	id = HFP.20686
	desc = EVTDESCAHFP20686
	picture = GFX_evt_quarrel

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20686
		if = { 
			limit = { NOT = { trait = celibate } } 
			add_trait = celibate
		}
		FROMFROM = {
			opinion = { 
				who = ROOT
				modifier = opinion_repudiated_me
				years = 100
			}
		}
		hidden_tooltip = { FROMFROM = { character_event = { id = HFP.20687 } } } #Notify wife.
		ai_chance = { factor = 100 }
	}
}

#Wife is notified.
character_event = {
	id = HFP.20687
	desc = EVTDESCAHFP20687
	picture = GFX_evt_quarrel

	is_triggered_only = yes

	option = { #Do nothing.
		name = EVTOPTAHFP20687
		opinion = { 
			who = FROM
			modifier = opinion_repudiated_me
			years = 100
		}
		hidden_tooltip = { FROMFROM = { character_event = { id = HFP.20688 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
}

#Final notification for Whisperer. - Wife has been repudiated.
character_event = {
	id = HFP.20688
	desc = EVTDESCAHFP20688
	picture = GFX_evt_lunatic

	is_triggered_only = yes

	option = { #Good.
		name = EVTOPTAHFP20688
		ai_chance = { factor = 100 }
	}
}

#Final notification for Whisperer. - Wife has been killed.
character_event = {
	id = HFP.20689
	desc = EVTDESCAHFP20689
	picture = GFX_evt_lunatic

	is_triggered_only = yes

	option = { #Good.
		name = EVTOPTAHFP20689
		ai_chance = { factor = 100 }
	}
}

#HFP.20690 and HFP.20691 taken for notifications to Leechlord.

#The Black Boar. (Requres an non-deceitful/paranoid vassal).
#Vassal informed bard under his protection wrote bad song about ruler.
character_event = {
	id = HFP.20692
	desc = EVTDESCAHFP20692
	picture = GFX_evt_jugglers

	trigger = { 
		FROM = { 
			is_alive = yes
			trait = is_fat
		}
	}

	is_triggered_only = yes

	option = { #Leave him be.
		name = EVTOPTAHFP20692
		custom_tooltip = { text = tooltip_HFP20692_A }
		tiered_prestige_reward_effect = yes
		hidden_tooltip = { FROM = { character_event = { id = HFP.20693 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
	option = { #Censor him.
		name = EVTOPTBHFP20692
		if = { 
			limit = { trait = honest } 
			remove_trait = honest
		}
		ai_chance = { factor = 0 }
	}
}

#Ruler hears song
character_event = {
	id = HFP.20693
	desc = EVTDESCAHFP20693
	picture = GFX_evt_jugglers
	hide_from = yes

	trigger = { 
		FROM = { 
			is_alive = yes
			trait = is_fat
		}
	}

	is_triggered_only = yes

	option = { #Cook the bard.
		name = EVTOPTAHFP20693
		custom_tooltip = { text = tooltip_HFP20693_A }
		if = { 
			limit = { NOT = { trait = cruel } } 
			add_trait = cruel
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20698 } } } #Notify vassal.
		ai_chance = { factor = 100 }
	}
	option = { #Punish bard lightly.
		name = EVTOPTBHFP20693
		custom_tooltip = { text = tooltip_HFP20693_B }
		if = { 
			limit = { trait = just } 
			change_stewardship = 1
		}
		if = { 
			limit = { NOT = { trait = just } } 
			add_trait = just
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20696 } } } #Notify vassal.
		ai_chance = { factor = 100 }
	}
	option = { #Tolerate bard.
		name = EVTOPTCHFP20693
		if = { 
			limit = { trait = kind } 
			change_diplomacy = 1
		}
		if = { 
			limit = { NOT = { trait = kind } } 
			add_trait = kind
		}
		FROM = { 
			show_scope_change = no
			opinion = { 
				who = ROOT
				modifier = opinion_swayed_2
				years = 15
			}
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20694 } } } #Notify vassal.
		ai_chance = { factor = 0 }
	}
}

#Vassal impressed
character_event = {
	id = HFP.20694
	desc = EVTDESCAHFP20694
	picture = GFX_evt_jugglers

	is_triggered_only = yes

	option = { #
		name = EVTOPTAHFP20694
		opinion = { 
			who = FROM
			modifier = opinion_swayed_2
			years = 15
		}
		hidden_tooltip = { FROM = { character_event = { id = HFP.20695 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
}

#Ruler notified.
character_event = {
	id = HFP.20695
	desc = EVTDESCAHFP20695
	picture = GFX_evt_jugglers

	is_triggered_only = yes

	option = { #
		name = EVTOPTAHFP20695
		ROOT = { give_nickname = nick_the_merry }
		tooltip = { 
			FROM = { 
				show_scope_change = no
				opinion = { 
					who = ROOT
					modifier = opinion_swayed_2
					years = 15
				}
			}
		}
		tiered_prestige_reward_effect = yes
		ai_chance = { factor = 100 }
	}
}

#Vassal: Ruler punished bard lightly, and bard didn't learn the lesson.
character_event = {
	id = HFP.20696
	desc = EVTDESCAHFP20696
	picture = GFX_evt_jugglers

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20696
		hidden_tooltip = { FROM = { character_event = { id = HFP.20697 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
}

#Ruler notified.
character_event = {
	id = HFP.20697
	desc = EVTDESCAHFP20697
	picture = GFX_evt_jugglers
	hide_from = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTAHFP20697
		tiered_prestige_negative_effect = yes
		add_character_modifier = { 
			modifier = laughing_stock_modifier 
			years = 10 
		}
		ai_chance = { factor = 100 }
	}
}

#Vassal: Ruler cooked the impudent bard.
character_event = {
	id = HFP.20698
	desc = EVTDESCAHFP20698
	picture = GFX_evt_jugglers

	is_triggered_only = yes

	option = { 
		name = EVTOPTAHFP20698
		tiered_prestige_negative_effect = yes
		hidden_tooltip = { FROM = { character_event = { id = HFP.20699 } } } #Notify ruler.
		ai_chance = { factor = 100 }
	}
}

#Ruler notified.
character_event = {
	id = HFP.20699
	desc = EVTDESCAHFP20699
	picture = GFX_evt_jugglers
	hide_from = yes

	is_triggered_only = yes

	option = { #Be(come) Cannibal.
		name = EVTOPTAHFP20699
		trigger = { 
			OR = { 
				trait = cannibal_trait 
				has_dlc = "Way of Life"
			} 
		} 
		add_trait = cannibal_trait
		add_character_modifier = { 
			modifier = black_boar_modifier 
			duration = -1 
		}
		if = { 
			limit = { NOT = { has_nickname = yes } } 
			ROOT = { give_nickname = nick_the_black_boar }
		}
		gain_weight_medium_effect = yes
		tiered_piety_negative_effect = yes
		ai_chance = { factor = 100 }
	}
	option = { #Good.
		name = EVTOPTBHFP20699
		trigger = { NOT = { trait = cannibal_trait } } 
		add_character_modifier = { 
			modifier = black_boar_modifier 
			duration = -1 
		}
		if = { 
			limit = { NOT = { has_nickname = yes } } 
			ROOT = { give_nickname = nick_the_black_boar }
		}
		tiered_piety_negative_effect = yes
		ai_chance = { factor = 100 }
	}
}

# Id HFP.20700/HFP.20701/HFP.20702/HFP.20703 taken by missing events.
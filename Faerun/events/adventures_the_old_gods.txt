#########################################################
#
# Landless Character Adventures for The Old Gods DLC
# ( TOG.1200 to TOG.1499)
#
#
#########################################################

# Written by Henrik Fï¿½hraeus

namespace = TOG

# An ambitious landless claimant begins to plan an adventure for the title
character_event = {
	id = TOG.1200
	is_triggered_only = yes
	hide_window = yes # Only fires for unplayable landless characters
	
	has_dlc = "The Old Gods"
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		is_ruler = no
		num_of_claims > 0
		
		trigger_if = {
			limit = { is_female = yes }

			OR = {
				gender_equality_trigger = yes
				has_law = enatic_succession
				has_law = enatic_cognatic_succession
				has_law = true_cognatic_succession
			}
		}

		diplomacy >= 7
		health >= 4

		NOR = {
			trait = content
			trait = craven
			trait = infirm
			culture = monster

			has_character_modifier = planning_claimant_adventure
			has_character_modifier = planning_duchy_adventure

			has_game_rule = {
				name = adventurers
				value = none
			}

			any_spouse = {
				is_ruler = yes
			}
			is_consort = yes

			# Somewhat clunky way of checking that the character does not stand to inherit any titles
			any_heir_title = {
				always = yes
			}
		}

		is_old_enough_to_die_trigger = no
		
		any_claim = {
			has_holder = yes

			OR = {
				real_tier = KING
				is_primary_holder_title_tier = yes
			}
			
			trigger_if = {
				limit = { is_society_landed_title_trigger = yes }
	
				ROOT = { is_society_matching_PREV_society_title_trigger = yes }
			}

			holder_scope = {
				independent = yes

				is_landed = yes

				# Don't target my liege unless I am ambitious
				trigger_if = {
					limit = { is_liege_or_above_of = ROOT }

					ROOT = { trait = ambitious }
				}

				trigger_if = {
					limit = { is_merchant_republic = yes }

					capital_holding = {
						NOT = { de_jure_liege_or_above = PREVPREV }
					}
				}

				ROOT = {
					NOR = {
						obedient = PREV
						non_interference = PREV
					}
				}

				# There should be a direct path either through land or sea, otherwise AI's pathfinding breaks and it just stay here until losing due to ticking warscore
				capital_scope = { 
					ROOT = {
						liege = {
							trigger_if = {
								limit = { num_of_count_titles >= 1 }
	
								any_demesne_province = {
									OR = {
										can_naval_path_to = PREVPREVPREV
										can_land_path_to = PREVPREVPREV
									}
								}
							}
							trigger_else = {  # if we don't hold any count titles for some reason, use the capital scope
								capital_scope = {
									OR = {
										can_naval_path_to = PREVPREVPREV
										can_land_path_to = PREVPREVPREV
									}
								}
							}
						}
					}
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 5
			has_character_flag = flag_denied_title
		}

		mult_modifier = {
			factor = 5
			has_character_flag = demon_child_non_pagan
		}

		mult_modifier = {
			factor = 10
			is_society_grandmaster = yes
			society = {
				society_has_linked_title_trigger = yes
				persistent_event_target:society_title_persist = { claimed_by = ROOT }
			}
		}

		mult_modifier = {
			factor = 2
			trait = ambitious
		}

		mult_modifier = {
			factor = 2
			trait = envious
		}

		mult_modifier = {
			factor = 1.33
			diplomacy >= 12
		}

		mult_modifier = {
			factor = 1.33
			trait = brave
		}

		mult_modifier = {
			factor = 1.2
			trait = proud
		}

		mult_modifier = {
			factor = 0.67
			trait = slothful
		}

		mult_modifier = {
			factor = 0.67
			trait = humble
		}

		mult_modifier = {
			factor = 0.5
			trait = kind
		}

		mult_modifier = {
			factor = 0.25
			is_pacifist_religion = yes
			NOT = { trait = lunatic }
		}

		mult_modifier = {
			factor = 0.02

			has_game_rule = {
				name = adventurers
				value = rare
			}
		}
	}
	
	immediate = {
		random_claim = {
			limit = {
				has_holder = yes

				OR = {
					real_tier = KING
					is_primary_holder_title_tier = yes
				}

				trigger_if = {
					limit = { is_society_landed_title_trigger = yes }
		
					ROOT = { is_society_matching_PREV_society_title_trigger = yes }
				}

				holder_scope = {
					independent = yes # Only do this vs independent rulers

					is_landed = yes

					trigger_if = {
						limit = { is_liege_or_above_of = ROOT }

						ROOT = { trait = ambitious }
					}

					trigger_if = {
						limit = { is_merchant_republic = yes }

						capital_holding = {
							NOT = { de_jure_liege_or_above = PREVPREV }
						}
					}

					ROOT = {
						NOR = {
							obedient = PREV
							non_interference = PREV
						}
					}
					
					capital_scope = { # There should be a direct path either through land or sea, otherwise AI's pathfinding breaks and it just stay here until losing due to ticking warscore
						ROOT = {
							liege = {
								trigger_if = {
									limit = { num_of_count_titles >= 1 }
		
									any_demesne_province = {
										OR = {
											can_naval_path_to = PREVPREVPREV
											can_land_path_to = PREVPREVPREV
										}
									}
								}
								trigger_else = { # if we don't hold any count titles for some reason, use the capital scope
									capital_scope = { 
										OR = {
											can_naval_path_to = PREVPREVPREV
											can_land_path_to = PREVPREVPREV
										}
									}
								}
							}
						}
					}
				}
			}

			save_event_target_as = adventurer_target_title

			holder_scope = {
				save_event_target_as = adventurer_target

				reverse_opinion = {
					name = opinion_claimant_adventure_target
					who = ROOT
					years = 3
				}

				opinion = {
					name = opinion_targeted_by_adventurer
					who = ROOT
					years = 2
				}

				character_event = { id = TOG.1201 } # Warn the target
			}
		}

		# Can't prepare for the attack from within the realm
		if = {
			limit = { is_vassal_or_below_of = event_target:adventurer_target }
			banish = yes
		}

		add_character_modifier = {
			name = planning_claimant_adventure
			years = 2
			hidden = yes
		}

		character_event = {
			id = TOG.1202 # Fire the attack
			years = 2
		}

		end_inaccessibility_effect = yes # Removes in hiding or in_seclusion
		set_character_flag = do_not_disturb

		character_event = {
			id = TOG.1215 # Safety clearing of do_not_disturb
			years = 2
		}
	}
}

character_event = {
	id = TOG.1201
	desc = EVTDESC_TOG_1201
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_1201
	}
}

# An ambitious landless claimant starts an adventure for the title
character_event = {
	id = TOG.1202
	
	hide_window = yes # Only fires for unplayable landless characters
	
	is_triggered_only = yes

	capable_only = yes
	prisoner = no
	
	trigger = {
		is_ruler = no
		has_claim = event_target:adventurer_target_title
		
		event_target:adventurer_target_title = {
			holder = event_target:adventurer_target

			OR = {
				real_tier = KING
				is_primary_holder_title_tier = yes
			}

			holder_scope = {
				NOT = {
					defending_against_claimant = {
						character = ROOT
						title = PREV
					}
				}
				
				independent = yes # Only do this vs independent rulers

				is_landed = yes
				
				reverse_has_opinion_modifier = {
					name = opinion_claimant_adventure_target
					who = ROOT
				}

				# Don't target my liege unless I am ambitious
				trigger_if = {
					limit = { is_liege_or_above_of = ROOT }

					ROOT = { trait = ambitious }
				}

				trigger_if = {
					limit = { is_merchant_republic = yes }

					capital_holding = {
						NOT = { de_jure_liege_or_above = PREVPREV }
					}
				}

				ROOT = {
					NOR = {
						obedient = PREV
						non_interference = PREV
					}
				}

				capital_scope = { # There should be a direct path either through land or sea, otherwise AI's pathfinding breaks and it just stay here until losing due to ticking warscore
					ROOT = {
						liege = {
							trigger_if = {
								limit = { num_of_count_titles >= 1 }
	
								any_demesne_province = {
									OR = {
										can_naval_path_to = PREVPREVPREV
										can_land_path_to = PREVPREVPREV
									}
								}
							}
							trigger_else = { # if we don't hold any count titles for some reason, use the capital scope
								capital_scope = {
									OR = {
										can_naval_path_to = PREVPREVPREV
										can_land_path_to = PREVPREVPREV
									}
								}
							}
						}
					}
				}
			}
		}

		NOR = {
			any_spouse = {
				is_ruler = yes
			}

			# Somewhat clunky way of checking that the character does not stand to inherit any titles
			any_heir_title = {
				always = yes
			}
		}
	}
	
	immediate = {
		
		wealth = 500
		clr_character_flag = do_not_disturb
		liege = {
			if = { 
				limit = { num_of_count_titles >= 1 }	

				random_demesne_province = {
					limit = {
						event_target:adventurer_target = {
							capital_scope = {
								OR = {
									can_naval_path_to = PREVPREV
									can_land_path_to = PREVPREV
								}
							}
						}
					}
					save_event_target_as = embark_province
				}
			}
			else = { capital_scope = { save_event_target_as = embark_province } } # if our liege doesn't hold any count titles for some reason and we went through the trigger block, whe should be able to use the capital scope to invade from
			
			character_event = {
				id = TOG.1203
				days = 1
			}
		}

		set_defacto_liege = ROOT

		create_title = {
			tier = DUKE
			landless = yes
			temporary = yes
			adventurer = yes
			culture = ROOT
			name = CLAIMANT_ADVENTURE
			holder = ROOT
		}

		set_character_flag = claimant_adventurer

		random_list = {
			1 = {
				while = {
					count = 6

					spawn_unit = {
						province = event_target:embark_province
						home = event_target:embark_province
						owner = ROOT
						match_character = event_target:adventurer_target
						match_mult = 0.125
						match_min = 300
						match_max = 5000
						attrition = 0.25
						earmark = claimant_adventure
					}
				}
			}

			1 = {
				while = {
					count = 6

					spawn_unit = {
						province = event_target:embark_province
						home = event_target:embark_province
						owner = ROOT
						match_character = event_target:adventurer_target
						match_mult = 0.1
						match_min = 300
						match_max = 5000
						attrition = 0.25
						earmark = claimant_adventure
					}
				}
			}

			1 = {
				while = {
					count = 6

					spawn_unit = {
						province = event_target:embark_province
						home = event_target:embark_province
						owner = ROOT
						match_character = event_target:adventurer_target
						match_mult = 0.075
						match_min = 300
						match_max = 5000
						attrition = 0.25
						earmark = claimant_adventure
					}
				}
			}
		}

		# Create some decent commander characters
		while = {
			count = 4

			create_random_soldier = {
				random_traits = yes
				dynasty = none
				religion = ROOT
				culture = ROOT
				female = 50
				age = 25
			}

			new_character = {
				random_list = {
					1 = { }
					1 = { add_age = 1 }
					1 = { add_age = 2 }
					1 = { add_age = 3 }
					1 = { add_age = 4 }
					1 = { add_age = 5 }
					1 = { add_age = 6 }
					1 = { add_age = 7 }
					1 = { add_age = 8 }
				}
			}
		}

		# Create a fleet, just to be sure
		spawn_fleet = {
			province = closest # closest sea zone
			owner = ROOT
			disband_on_peace = yes
			earmark = claimant_adventure

			troops = {
				galleys = { 200 200 }
			}
		}

		remove_opinion = {
			name = opinion_claimant_adventure_target
			who = event_target:adventurer_target
		}

		#log = "TOG.1202: [Root.GetBestName] starts claim adventure for [adventurer_target_title.GetName] embarking from [embark_province.GetName]."

		unsafe_war = {
			target = event_target:adventurer_target
			casus_belli = claim
			thirdparty_title = event_target:adventurer_target_title
		}
	}
}

character_event = {
	id = TOG.1203
	desc = EVTDESC_TOG_1203
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		FROM = { is_ruler = yes } # The DoW worked and the adventurer has a temporary title
	}

	immediate = {
		FROM = {
			add_trait_adventurer_effect = yes
		}

		any_liege = {
			character_event = {
				id = TOG.1204
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_1203
	}
}

character_event = {
	id = TOG.1204
	desc = EVTDESC_TOG_1204
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	show_from_from = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_1203
	}
}

# An ambitious character with no inheritance begins to plan an adventure for a foreign title
character_event = {
	id = TOG.1210
	is_triggered_only = yes
	hide_window = yes # Only fires for unplayable landless characters

	has_dlc = "The Old Gods"
	min_age = 16
	capable_only = yes
	prisoner = no
	
	
	trigger = {
		is_ruler = no

		diplomacy >= 7
		martial >= 9
		health >= 4
		
		trigger_if = {
			limit = { is_female = yes }

			OR = {
				gender_equality_trigger = yes
				has_law = enatic_succession
				has_law = enatic_cognatic_succession
				has_law = true_cognatic_succession
			}
		}

		trigger_if = {
			limit = { is_pacifist_religion = yes NOT = { trait = lunatic } }

			NOR = {
				trait = zealous
				trait = kind
			}
			OR = {
				trait = ambitious
				trait = cynical
				trait = cruel
			}
		}

		OR = {
			father_even_if_dead = {
				OR = {
					higher_real_tier_than = BARON

					father_even_if_dead = {
						higher_real_tier_than = BARON
					}

					mother_even_if_dead = {
						higher_real_tier_than = BARON
					}
				}
			}

			mother_even_if_dead = {
				OR = {
					higher_real_tier_than = BARON

					father_even_if_dead = {
						higher_real_tier_than = BARON
					}

					mother_even_if_dead = {
						higher_real_tier_than = BARON
					}
				}
			}
		}

		NOR = {
			trait = content
			trait = craven
			trait = infirm
			culture = monster
			
			has_character_modifier = planning_claimant_adventure
			has_character_modifier = planning_duchy_adventure

			has_game_rule = {
				name = adventurers
				value = none
			}

			any_spouse = {
				is_ruler = yes
			}
			is_consort = yes

			# Somewhat clunky way of checking that the character does not stand to inherit any titles
			any_heir_title = {
				always = yes
			}
		}
		
		is_old_enough_to_die_trigger = no

		trigger_if = {
			limit = { num_of_claims > 0 }

			NOT = { # leave for last because of expensive calculations
				any_claim = { # Handled by event TOG.1200

					has_holder = yes

					OR = {
						real_tier = KING
						is_primary_holder_title_tier = yes
					}

					trigger_if = {
						limit = { is_society_landed_title_trigger = yes }
			
						ROOT = { is_society_matching_PREV_society_title_trigger = yes }
					}

					holder_scope = {
						independent = yes

						is_landed = yes

						trigger_if = {
							limit = { is_liege_or_above_of = ROOT }
		
							ROOT = { trait = ambitious }
						}
		
						trigger_if = {
							limit = { is_merchant_republic = yes }
		
							capital_holding = {
								NOT = { de_jure_liege_or_above = PREVPREV }
							}
						}
		
						ROOT = {
							NOR = {
								obedient = PREV
								non_interference = PREV
							}
						}

						capital_scope = { # There should be a direct path either through land or sea, otherwise AI's pathfinding breaks and it just stay here until losing due to ticking warscore
							ROOT = {
								liege = {
									trigger_if = {
										limit = { num_of_count_titles >= 1 }
			
										any_demesne_province = {
											OR = {
												can_naval_path_to = PREVPREVPREV
												can_land_path_to = PREVPREVPREV
											}
										}
									}
									trigger_else = { # if we don't hold any count titles for some reason, use the capital scope
										capital_scope = {
											OR = {
												can_naval_path_to = PREVPREVPREV
												can_land_path_to = PREVPREVPREV
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 0.25

			is_allowed_to_loot = yes
			has_dlc = "Horse Lords"
		}

		mult_modifier = {
			factor = 2
			trait = ambitious
		}

		mult_modifier = {
			factor = 5
			has_character_flag = flag_denied_title
		}

		mult_modifier = {
			factor = 5
			has_character_flag = demon_child_non_pagan
		}

		mult_modifier = {
			factor = 1.33
			diplomacy >= 12
		}

		mult_modifier = {
			factor = 1.33
			martial >= 12
		}

		mult_modifier = {
			factor = 1.33
			trait = brave
		}

		mult_modifier = {
			factor = 1.2
			trait = proud
		}

		mult_modifier = {
			factor = 0.33
			trait = slothful
		}

		mult_modifier = {
			factor = 0.33
			trait = humble
		}

		mult_modifier = {
			factor = 0.33
			trait = kind
		}

		mult_modifier = {
			factor = 0.1
			is_pacifist_religion = yes
			NOT = { trait = lunatic }
		}

		mult_modifier = {
			factor = 0.33
			any_liege = { ai = no }
		}

		mult_modifier = {
			factor = 0.33
			top_liege = { real_tier = EMPEROR }
		}

		mult_modifier = {
			factor = 0.02

			has_game_rule = {
				name = adventurers
				value = rare
			}
		}
	}
	
	immediate = {
		random_independent_ruler = {
			limit = {
				is_landed = yes

				NOR = {
					culture = ROOT
					is_liege_or_above_of = ROOT
				}

				ROOT = {
					NOR = {
						obedient = PREV
						non_interference = PREV
					}
				}

				any_realm_province = {
					held_under_PREV = yes

					OR = {
						any_neighbor_province = {
							owner = {
								same_realm = ROOT
							}
						}
						trigger_if = {
							limit = { is_coastal = yes }

							ROOT = { # There should be a direct naval path, otherwise AI's pathfinding breaks and it just stay here until losing due to ticking warscore
								liege = {
									trigger_if = {
										limit = { num_of_count_titles >= 1 }
	
										any_demesne_province = {
											can_naval_path_to = {
												target = PREVPREVPREV
												distance < 800
											}
										}
									}
									trigger_else = { # if we don't hold any count titles for some reason, use the capital scope
										capital_scope = {
											can_naval_path_to = {
												target = PREVPREVPREV
												distance < 800
											}
										}
									}
								}
							}
						}
					}
				}
			}
			preferred_limit = {
				trigger_if = { # less dynastic infighting unless ROOT is evil
					limit = { dynasty = ROOT }

					ROOT = { is_evil_religion = yes }
				}
			}

			save_event_target_as = adventurer_target
			character_event = { id = TOG.1211 } # Warn the target

			opinion = {
				name = opinion_targeted_by_adventurer
				who = ROOT
				years = 2
			}
		}

		if = { # if we couldn't find an eligible target, leave the event
			limit = { NOT = { event_target:adventurer_target = { always = yes } } }
			break = yes
		}

		opinion = {
			name = opinion_duchy_adventure_target
			who = event_target:adventurer_target
			years = 3
		}

		add_character_modifier = {
			name = planning_duchy_adventure
			years = 2
			hidden = yes
		}

		character_event = {
			id = TOG.1212 # Fire the attack
			years = 2
		}

		end_inaccessibility_effect = yes # Removes in hiding or in_seclusion
		set_character_flag = do_not_disturb

		character_event = {
			id = TOG.1215
			days = 730
		}
	}
}

character_event = {
	id = TOG.1211
	desc = EVTDESC_TOG_1211
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_1211
	}
}

# An ambitious character with no inheritance starts an adventure for a foreign title
# (Temporary title created and a war declared)
character_event = {
	id = TOG.1212
	
	hide_window = yes # Only fires for unplayable landless characters
	
	is_triggered_only = yes
	prisoner = no
	only_capable = yes
	has_dlc = "The Old Gods"
	
	trigger = {
		is_ruler = no

		NOR = {
			any_spouse = {
				is_ruler = yes
			}

			any_heir_title = {
				always = yes
			}
		}

		event_target:adventurer_target = {
			is_alive = yes
			is_landed = yes
			independent = yes
			# Previously targeted ruler is still an independent ruler
			reverse_has_opinion_modifier = {
				name = opinion_duchy_adventure_target
				who = ROOT
			}

			NOR = {
				culture = ROOT
				is_liege_or_above_of = ROOT
			}

			ROOT = {
				NOR = {
					obedient = PREV
					non_interference = PREV
				}
			}

			any_realm_province = {
				held_under_PREV = yes

				OR = {
					any_neighbor_province = {
						owner = {
							same_realm = ROOT
						}
					}
					trigger_if = {
						limit = { is_coastal = yes }

						ROOT = { # There should be a direct naval path, otherwise AI's pathfinding breaks and it just stay here until losing due to ticking warscore
							liege = {
								trigger_if = {
									limit = { num_of_count_titles >= 1 }

									any_demesne_province = {
										can_naval_path_to = {
											target = PREVPREVPREV
											distance < 800
										}
									}
								}
								trigger_else = { # if we don't hold any count titles for some reason, use the capital scope
									capital_scope = {
										can_naval_path_to = {
											target = PREVPREVPREV
											distance < 800
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	immediate = {
		wealth = 500
		clr_character_flag = do_not_disturb

		event_target:adventurer_target = {
			random_realm_province = {
				limit = {
					held_under_PREV = yes

					OR = {
						any_neighbor_province = {
							owner = {
								same_realm = ROOT
							}
						}
						trigger_if = {
							limit = { is_coastal = yes }

							ROOT = { # There should be a direct naval path, otherwise AI's pathfinding breaks and it just stay here until losing due to ticking warscore
								liege = {
									trigger_if = {
										limit = { num_of_count_titles >= 1 }

										any_demesne_province = {
											can_naval_path_to = {
												target = PREVPREVPREV
												distance < 800
											}
										}
									}
									trigger_else = { # if we don't hold any count titles for some reason, use the capital scope
										capital_scope = {
											can_naval_path_to = {
												target = PREVPREVPREV
												distance < 800
											}
										}
									}
								}
							}
						}
					}
				}
				save_event_target_as = adventurer_target_province

				county = { save_event_target_as = adventurer_target_title }
			}
		}

		liege = {
			if = {
				limit = { num_of_count_titles >= 1 }

				random_demesne_province = {
					limit = {
						OR = {
							can_naval_path_to = event_target:adventurer_target_province
							can_land_path_to = event_target:adventurer_target_province
						}
					}
					save_event_target_as = embark_province
				}
				if = { # if we went through the trigger block, we at the very least should be able to use the capital scope to invade from.
					limit = { NOT = { event_target:embark_province = { always = yes } } }

					capital_scope = { save_event_target_as = embark_province }
				}
			}
			else = { capital_scope = { save_event_target_as = embark_province } } 
			
			character_event = {
				id = TOG.1213
				days = 1
			}
		}

		set_defacto_liege = ROOT

		create_title = {
			tier = DUKE
			landless = yes
			temporary = yes
			adventurer = yes
			culture = ROOT
			name = CLAIMANT_ADVENTURE
			holder = ROOT
		}

		set_character_flag = duchy_adventurer

		while = {
			count = 3

			spawn_unit = {
				province = event_target:embark_province
				home = event_target:embark_province
				owner = THIS
				match_character = event_target:adventurer_target
				match_mult = 0.125
				match_min = 500
				match_max = 10000
				attrition = 0.25
			}
		}

		# Create some decent commander characters
		while = {
			count = 2

			create_random_soldier = {
				random_traits = yes
				dynasty = none
				religion = ROOT
				culture = ROOT
				female = 50
				age = 25
			}

			new_character = {
				random_list = {
					1 = { }
					1 = { add_age = 1 }
					1 = { add_age = 2 }
					1 = { add_age = 3 }
					1 = { add_age = 4 }
					1 = { add_age = 5 }
				}
			}
		}

		unsafe_war = {
			target = event_target:adventurer_target
			casus_belli = duchy_adventure
			thirdparty_title = event_target:adventurer_target_title
			tier = DUKE
		}

		#log = "TOG.1212: [Root.GetBestName] starts adventure for [adventurer_target_title.Duchy.GetName] embarking from [embark_province.GetName]."

		remove_opinion = {
			name = opinion_duchy_adventure_target
			who = event_target:adventurer_target
		}

		# Create a fleet, just to be sure
		spawn_fleet = {
			province = closest # closest sea zone
			owner = ROOT
			disband_on_peace = yes

			troops = {
				galleys = { 200 200 }
			}
		}
	}
}

character_event = {
	id = TOG.1213
	desc = EVTDESC_TOG_1213
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		FROM = { is_ruler = yes } # The DoW worked and the adventurer has a temporary title
	}

	immediate = {
		FROM = {
			add_trait_adventurer_effect = yes
		}

		any_liege = {
			character_event = { id = TOG.1214 }
		}
	}

	option = {
		name = EVTOPTA_TOG_1203
	}
}

character_event = {
	id = TOG.1214
	desc = EVTDESC_TOG_1214
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	show_from_from = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_1203
	}
}

#safety clear of DND
character_event = {
	id = TOG.1215
	
	is_triggered_only = yes
	
	hide_window = yes
	
	immediate = {
		clr_character_flag = do_not_disturb
	}
}

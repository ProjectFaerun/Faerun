namespace = frxp

#Explanation of variables and flag for future editing!
#<class>_init flag: to prevent xp from being reset on multiclassing
#<class>_xp variable: how much xp for that particular class a character has
#<class>lvlX flag: used to display the proper trait in the notification event on level-up
#global_<lvl>_xp: default threshold for level-ups
#global_<lvl>_xp_multiclass: default threshold for level-ups in case of multiclass

character_event = {
	id = frxp.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			is_adult = yes
			has_character_flag = kid_class
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_character_flag = barbarian_init }
				z_barbarian = yes
			}
			set_character_flag = barbarian_init
			trigger_switch = {
				on_trigger = trait
				barbarian = { if = { limit = { z_multiclass = yes } set_variable = { which = barbarian_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = barbarian_xp which = global_basic_xp } } }
				trained_barbarian = { if = { limit = { z_multiclass = yes } set_variable = { which = barbarian_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = barbarian_xp which = global_trained_xp } } }
				journeyman_barbarian = { if = { limit = { z_multiclass = yes } set_variable = { which = barbarian_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = barbarian_xp which = global_journeyman_xp } } }
				expert_barbarian = { if = { limit = { z_multiclass = yes } set_variable = { which = barbarian_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = barbarian_xp which = global_expert_xp } } }
				master_barbarian = { if = { limit = { z_multiclass = yes } set_variable = { which = barbarian_xp which = global_master_xp_multiclass } } else = { set_variable = { which = barbarian_xp which = global_master_xp } } }
				renowned_barbarian = { if = { limit = { z_multiclass = yes } set_variable = { which = barbarian_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = barbarian_xp which = global_renowned_xp } } }
				legendary_barbarian = { if = { limit = { z_multiclass = yes } set_variable = { which = barbarian_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = barbarian_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = bard_init }
				z_bard = yes
			}
			set_character_flag = bard_init
			trigger_switch = {
				on_trigger = trait
				bard = { if = { limit = { z_multiclass = yes } set_variable = { which = bard_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = bard_xp which = global_basic_xp } } }
				trained_bard = { if = { limit = { z_multiclass = yes } set_variable = { which = bard_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = bard_xp which = global_trained_xp } } }
				journeyman_bard = { if = { limit = { z_multiclass = yes } set_variable = { which = bard_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = bard_xp which = global_journeyman_xp } } }
				expert_bard = { if = { limit = { z_multiclass = yes } set_variable = { which = bard_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = bard_xp which = global_expert_xp } } }
				master_bard = { if = { limit = { z_multiclass = yes } set_variable = { which = bard_xp which = global_master_xp_multiclass } } else = { set_variable = { which = bard_xp which = global_master_xp } } }
				renowned_bard = { if = { limit = { z_multiclass = yes } set_variable = { which = bard_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = bard_xp which = global_renowned_xp } } }
				legendary_bard = { if = { limit = { z_multiclass = yes } set_variable = { which = bard_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = bard_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = cleric_init }
				z_cleric = yes
			}
			set_character_flag = cleric_init
			trigger_switch = {
				on_trigger = trait
				cleric = { if = { limit = { z_multiclass = yes } set_variable = { which = cleric_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = cleric_xp which = global_basic_xp } } }
				trained_cleric = { if = { limit = { z_multiclass = yes } set_variable = { which = cleric_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = cleric_xp which = global_trained_xp } } }
				journeyman_cleric = { if = { limit = { z_multiclass = yes } set_variable = { which = cleric_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = cleric_xp which = global_journeyman_xp } } }
				expert_cleric = { if = { limit = { z_multiclass = yes } set_variable = { which = cleric_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = cleric_xp which = global_expert_xp } } }
				master_cleric = { if = { limit = { z_multiclass = yes } set_variable = { which = cleric_xp which = global_master_xp_multiclass } } else = { set_variable = { which = cleric_xp which = global_master_xp } } }
				renowned_cleric = { if = { limit = { z_multiclass = yes } set_variable = { which = cleric_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = cleric_xp which = global_renowned_xp } } }
				legendary_cleric = { if = { limit = { z_multiclass = yes } set_variable = { which = cleric_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = cleric_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = druid_init }
				z_druid = yes
			}
			set_character_flag = druid_init
			trigger_switch = {
				on_trigger = trait
				druid = { if = { limit = { z_multiclass = yes } set_variable = { which = druid_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = druid_xp which = global_basic_xp } } }
				trained_druid = { if = { limit = { z_multiclass = yes } set_variable = { which = druid_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = druid_xp which = global_trained_xp } } }
				journeyman_druid = { if = { limit = { z_multiclass = yes } set_variable = { which = druid_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = druid_xp which = global_journeyman_xp } } }
				expert_druid = { if = { limit = { z_multiclass = yes } set_variable = { which = druid_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = druid_xp which = global_expert_xp } } }
				master_druid = { if = { limit = { z_multiclass = yes } set_variable = { which = druid_xp which = global_master_xp_multiclass } } else = { set_variable = { which = druid_xp which = global_master_xp } } }
				renowned_druid = { if = { limit = { z_multiclass = yes } set_variable = { which = druid_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = druid_xp which = global_renowned_xp } } }
				legendary_druid = { if = { limit = { z_multiclass = yes } set_variable = { which = druid_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = druid_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = fighter_init }
				z_fighter = yes
			}
			set_character_flag = fighter_init
			trigger_switch = {
				on_trigger = trait
				fighter = { if = { limit = { z_multiclass = yes } set_variable = { which = fighter_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = fighter_xp which = global_basic_xp } } }
				trained_fighter = { if = { limit = { z_multiclass = yes } set_variable = { which = fighter_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = fighter_xp which = global_trained_xp } } }
				journeyman_fighter = { if = { limit = { z_multiclass = yes } set_variable = { which = fighter_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = fighter_xp which = global_journeyman_xp } } }
				expert_fighter = { if = { limit = { z_multiclass = yes } set_variable = { which = fighter_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = fighter_xp which = global_expert_xp } } }
				master_fighter = { if = { limit = { z_multiclass = yes } set_variable = { which = fighter_xp which = global_master_xp_multiclass } } else = { set_variable = { which = fighter_xp which = global_master_xp } } }
				renowned_fighter = { if = { limit = { z_multiclass = yes } set_variable = { which = fighter_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = fighter_xp which = global_renowned_xp } } }
				legendary_fighter = { if = { limit = { z_multiclass = yes } set_variable = { which = fighter_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = fighter_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = monk_init }
				z_monk = yes
			}
			set_character_flag = monk_init
			trigger_switch = {
				on_trigger = trait
				class_monk = { if = { limit = { z_multiclass = yes } set_variable = { which = monk_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = monk_xp which = global_basic_xp } } }
				trained_monk = { if = { limit = { z_multiclass = yes } set_variable = { which = monk_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = monk_xp which = global_trained_xp } } }
				journeyman_monk = { if = { limit = { z_multiclass = yes } set_variable = { which = monk_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = monk_xp which = global_journeyman_xp } } }
				expert_monk = { if = { limit = { z_multiclass = yes } set_variable = { which = monk_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = monk_xp which = global_expert_xp } } }
				master_monk = { if = { limit = { z_multiclass = yes } set_variable = { which = monk_xp which = global_master_xp_multiclass } } else = { set_variable = { which = monk_xp which = global_master_xp } } }
				renowned_monk = { if = { limit = { z_multiclass = yes } set_variable = { which = monk_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = monk_xp which = global_renowned_xp } } }
				legendary_monk = { if = { limit = { z_multiclass = yes } set_variable = { which = monk_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = monk_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = paladin_init }
				z_paladin = yes
			}
			set_character_flag = paladin_init
			trigger_switch = {
				on_trigger = trait
				paladin = { if = { limit = { z_multiclass = yes } set_variable = { which = paladin_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = paladin_xp which = global_basic_xp } } }
				trained_paladin = { if = { limit = { z_multiclass = yes } set_variable = { which = paladin_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = paladin_xp which = global_trained_xp } } }
				journeyman_paladin = { if = { limit = { z_multiclass = yes } set_variable = { which = paladin_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = paladin_xp which = global_journeyman_xp } } }
				expert_paladin = { if = { limit = { z_multiclass = yes } set_variable = { which = paladin_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = paladin_xp which = global_expert_xp } } }
				master_paladin = { if = { limit = { z_multiclass = yes } set_variable = { which = paladin_xp which = global_master_xp_multiclass } } else = { set_variable = { which = paladin_xp which = global_master_xp } } }
				renowned_paladin = { if = { limit = { z_multiclass = yes } set_variable = { which = paladin_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = paladin_xp which = global_renowned_xp } } }
				legendary_paladin = { if = { limit = { z_multiclass = yes } set_variable = { which = paladin_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = paladin_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = ranger_init }
				z_ranger = yes
			}
			set_character_flag = ranger_init
			trigger_switch = {
				on_trigger = trait
				ranger = { if = { limit = { z_multiclass = yes } set_variable = { which = ranger_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = ranger_xp which = global_basic_xp } } }
				trained_ranger = { if = { limit = { z_multiclass = yes } set_variable = { which = ranger_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = ranger_xp which = global_trained_xp } } }
				journeyman_ranger = { if = { limit = { z_multiclass = yes } set_variable = { which = ranger_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = ranger_xp which = global_journeyman_xp } } }
				expert_ranger = { if = { limit = { z_multiclass = yes } set_variable = { which = ranger_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = ranger_xp which = global_expert_xp } } }
				master_ranger = { if = { limit = { z_multiclass = yes } set_variable = { which = ranger_xp which = global_master_xp_multiclass } } else = { set_variable = { which = ranger_xp which = global_master_xp } } }
				renowned_ranger = { if = { limit = { z_multiclass = yes } set_variable = { which = ranger_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = ranger_xp which = global_renowned_xp } } }
				legendary_ranger = { if = { limit = { z_multiclass = yes } set_variable = { which = ranger_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = ranger_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = rogue_init }
				z_rogue = yes
			}
			set_character_flag = rogue_init
			trigger_switch = {
				on_trigger = trait
				rogue = { if = { limit = { z_multiclass = yes } set_variable = { which = rogue_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = rogue_xp which = global_basic_xp } } }
				trained_rogue = { if = { limit = { z_multiclass = yes } set_variable = { which = rogue_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = rogue_xp which = global_trained_xp } } }
				journeyman_rogue = { if = { limit = { z_multiclass = yes } set_variable = { which = rogue_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = rogue_xp which = global_journeyman_xp } } }
				expert_rogue = { if = { limit = { z_multiclass = yes } set_variable = { which = rogue_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = rogue_xp which = global_expert_xp } } }
				master_rogue = { if = { limit = { z_multiclass = yes } set_variable = { which = rogue_xp which = global_master_xp_multiclass } } else = { set_variable = { which = rogue_xp which = global_master_xp } } }
				renowned_rogue = { if = { limit = { z_multiclass = yes } set_variable = { which = rogue_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = rogue_xp which = global_renowned_xp } } }
				legendary_rogue = { if = { limit = { z_multiclass = yes } set_variable = { which = rogue_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = rogue_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = shadow_init }
				z_shadow = yes
			}
			set_character_flag = shadow_init
			trigger_switch = {
				on_trigger = trait
				shadow = { if = { limit = { z_multiclass = yes } set_variable = { which = shadow_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = shadow_xp which = global_basic_xp } } }
				trained_shadow = { if = { limit = { z_multiclass = yes } set_variable = { which = shadow_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = shadow_xp which = global_trained_xp } } }
				journeyman_shadow = { if = { limit = { z_multiclass = yes } set_variable = { which = shadow_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = shadow_xp which = global_journeyman_xp } } }
				expert_shadow = { if = { limit = { z_multiclass = yes } set_variable = { which = shadow_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = shadow_xp which = global_expert_xp } } }
				master_shadow = { if = { limit = { z_multiclass = yes } set_variable = { which = shadow_xp which = global_master_xp_multiclass } } else = { set_variable = { which = shadow_xp which = global_master_xp } } }
				renowned_shadow = { if = { limit = { z_multiclass = yes } set_variable = { which = shadow_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = shadow_xp which = global_renowned_xp } } }
				legendary_shadow = { if = { limit = { z_multiclass = yes } set_variable = { which = shadow_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = shadow_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = sorcerer_init }
				z_sorcerer = yes
			}
			set_character_flag = sorcerer_init
			character_event = { id = sorcinit.1 }
			trigger_switch = {
				on_trigger = trait
				sorcerer = { if = { limit = { z_multiclass = yes } set_variable = { which = sorcerer_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = sorcerer_xp which = global_basic_xp } } }
				trained_sorcerer = { if = { limit = { z_multiclass = yes } set_variable = { which = sorcerer_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = sorcerer_xp which = global_trained_xp } } }
				journeyman_sorcerer = { if = { limit = { z_multiclass = yes } set_variable = { which = sorcerer_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = sorcerer_xp which = global_journeyman_xp } } }
				expert_sorcerer = { if = { limit = { z_multiclass = yes } set_variable = { which = sorcerer_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = sorcerer_xp which = global_expert_xp } } }
				master_sorcerer = { if = { limit = { z_multiclass = yes } set_variable = { which = sorcerer_xp which = global_master_xp_multiclass } } else = { set_variable = { which = sorcerer_xp which = global_master_xp } } }
				renowned_sorcerer = { if = { limit = { z_multiclass = yes } set_variable = { which = sorcerer_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = sorcerer_xp which = global_renowned_xp } } }
				legendary_sorcerer = { if = { limit = { z_multiclass = yes } set_variable = { which = sorcerer_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = sorcerer_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = warlock_init }
				z_warlock = yes
			}
			set_character_flag = warlock_init
			trigger_switch = {
				on_trigger = trait
				warlock = { if = { limit = { z_multiclass = yes } set_variable = { which = warlock_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = warlock_xp which = global_basic_xp } } }
				trained_warlock = { if = { limit = { z_multiclass = yes } set_variable = { which = warlock_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = warlock_xp which = global_trained_xp } } }
				journeyman_warlock = { if = { limit = { z_multiclass = yes } set_variable = { which = warlock_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = warlock_xp which = global_journeyman_xp } } }
				expert_warlock = { if = { limit = { z_multiclass = yes } set_variable = { which = warlock_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = warlock_xp which = global_expert_xp } } }
				master_warlock = { if = { limit = { z_multiclass = yes } set_variable = { which = warlock_xp which = global_master_xp_multiclass } } else = { set_variable = { which = warlock_xp which = global_master_xp } } }
				renowned_warlock = { if = { limit = { z_multiclass = yes } set_variable = { which = warlock_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = warlock_xp which = global_renowned_xp } } }
				legendary_warlock = { if = { limit = { z_multiclass = yes } set_variable = { which = warlock_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = warlock_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = wizard_init }
				z_wizard = yes
			}
			set_character_flag = wizard_init
			trigger_switch = {
				on_trigger = trait
				wizard = { if = { limit = { z_multiclass = yes } set_variable = { which = wizard_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = wizard_xp which = global_basic_xp } } }
				trained_wizard = { if = { limit = { z_multiclass = yes } set_variable = { which = wizard_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = wizard_xp which = global_trained_xp } } }
				journeyman_wizard = { if = { limit = { z_multiclass = yes } set_variable = { which = wizard_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = wizard_xp which = global_journeyman_xp } } }
				expert_wizard = { if = { limit = { z_multiclass = yes } set_variable = { which = wizard_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = wizard_xp which = global_expert_xp } } }
				master_wizard = { if = { limit = { z_multiclass = yes } set_variable = { which = wizard_xp which = global_master_xp_multiclass } } else = { set_variable = { which = wizard_xp which = global_master_xp } } }
				renowned_wizard = { if = { limit = { z_multiclass = yes } set_variable = { which = wizard_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = wizard_xp which = global_renowned_xp } } }
				legendary_wizard = { if = { limit = { z_multiclass = yes } set_variable = { which = wizard_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = wizard_xp which = global_legendary_xp } } }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = psion_init }
				z_psion = yes
			}
			set_character_flag = psion_init
			trigger_switch = {
				on_trigger = trait
				psion = { if = { limit = { z_multiclass = yes } set_variable = { which = psion_xp which = global_basic_xp_multiclass } } else = { set_variable = { which = psion_xp which = global_basic_xp } } }
				trained_psion = { if = { limit = { z_multiclass = yes } set_variable = { which = psion_xp which = global_trained_xp_multiclass } } else = { set_variable = { which = psion_xp which = global_trained_xp } } }
				journeyman_psion = { if = { limit = { z_multiclass = yes } set_variable = { which = psion_xp which = global_journeyman_xp_multiclass } } else = { set_variable = { which = psion_xp which = global_journeyman_xp } } }
				expert_psion = { if = { limit = { z_multiclass = yes } set_variable = { which = psion_xp which = global_expert_xp_multiclass } } else = { set_variable = { which = psion_xp which = global_expert_xp } } }
				master_psion = { if = { limit = { z_multiclass = yes } set_variable = { which = psion_xp which = global_master_xp_multiclass } } else = { set_variable = { which = psion_xp which = global_master_xp } } }
				renowned_psion = { if = { limit = { z_multiclass = yes } set_variable = { which = psion_xp which = global_renowned_xp_multiclass } } else = { set_variable = { which = psion_xp which = global_renowned_xp } } }
				legendary_psion = { if = { limit = { z_multiclass = yes } set_variable = { which = psion_xp which = global_legendary_xp_multiclass } } else = { set_variable = { which = psion_xp which = global_legendary_xp } } }
			}
		}
	}
}

character_event = {
	id = frxp.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_adult = yes
			has_character_flag = kid_class
		}
	}

	immediate = {
		hidden_tooltip = {
			#Add guaranteed yearly xp
			if = {
				limit = {
					all_immortals_trigger = no
					is_incapable = no
				}
				
				set_variable = { which = local_xp_to_add value = 15 }
				#Below is a chance to gain more points
				random = {
					chance = 50
					change_variable = { which = local_xp_to_add value = 1 }
				}
				random = {
					chance = 50
					change_variable = { which = local_xp_to_add value = 2 }
				}
				random = {
					chance = 40
					change_variable = { which = local_xp_to_add value = 3 }
				}
				random = {
					chance = 20
					change_variable = { which = local_xp_to_add value = 4 }
				}
				random = {
					chance = 10
					change_variable = { which = local_xp_to_add value = 5 }
				}
				
				add_custom_xp_effect = yes
			}
		}

		#Barbarian block
		if = {
			limit = {
				z_barbarian = yes
				NOT = { trait = legendary_barbarian }
			}
			
			if = {
				limit = {
					has_ambition = obj_cls_barbarian
				}
				change_variable = { which = barbarian_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				barbarian = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = barbarian_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = barbarian_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = barbarian
							add_trait = trained_barbarian
						}
						else = {
							set_character_flag = class_upgrading_barbarianlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_barbarian = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = barbarian_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = barbarian_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_barbarian
							add_trait = journeyman_barbarian
						}
						else = {
							set_character_flag = class_upgrading_barbarianlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_barbarian = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = barbarian_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = barbarian_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_barbarian
							add_trait = expert_barbarian
						}
						else = {
							set_character_flag = class_upgrading_barbarianlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_barbarian = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = barbarian_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = barbarian_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_barbarian
							add_trait = master_barbarian
						}
						else = {
							set_character_flag = class_upgrading_barbarianlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_barbarian = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = barbarian_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = barbarian_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_barbarian
							add_trait = renowned_barbarian
						}
						else = {
							set_character_flag = class_upgrading_barbarianlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_barbarian = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = barbarian_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = barbarian_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_barbarian
							add_trait = legendary_barbarian
						}
						else = {
							set_character_flag = class_upgrading_barbarianlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		#Bard block
		if = {
			limit = {
				z_bard = yes
				NOT = { trait = legendary_bard }
			}

			if = {
				limit = {
					has_ambition = obj_cls_bard
				}
				change_variable = { which = bard_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				bard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = bard_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = bard_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = bard
							add_trait = trained_bard
						}
						else = {
							set_character_flag = class_upgrading_bardlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_bard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = bard_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = bard_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_bard
							add_trait = journeyman_bard
						}
						else = {
							set_character_flag = class_upgrading_bardlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_bard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = bard_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = bard_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_bard
							add_trait = expert_bard
						}
						else = {
							set_character_flag = class_upgrading_bardlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_bard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = bard_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = bard_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_bard
							add_trait = master_bard
						}
						else = {
							set_character_flag = class_upgrading_bardlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_bard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = bard_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = bard_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_bard
							add_trait = renowned_bard
						}
						else = {
							set_character_flag = class_upgrading_bardlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_bard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = bard_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = bard_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_bard
							add_trait = legendary_bard
						}
						else = {
							set_character_flag = class_upgrading_bardlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		#Cleric block
		if = {
			limit = {
				z_cleric = yes
				NOT = { trait = legendary_cleric }
			}

			if = {
				limit = {
					has_minor_title = title_magic_apprentice
					liege = { z_cleric = yes }
				}
				change_variable = { which = cleric_xp value = 15 }
			}
			if = {
				limit = {
					has_ambition = obj_cls_cleric
				}
				change_variable = { which = cleric_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				cleric = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = cleric_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = cleric_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = cleric
							add_trait = trained_cleric
						}
						else = {
							set_character_flag = class_upgrading_clericlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_cleric = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = cleric_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = cleric_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_cleric
							add_trait = journeyman_cleric
						}
						else = {
							set_character_flag = class_upgrading_clericlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = journeyman_cleric }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				journeyman_cleric = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = cleric_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = cleric_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_cleric
							add_trait = expert_cleric
						}
						else = {
							set_character_flag = class_upgrading_clericlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = expert_cleric }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				expert_cleric = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = cleric_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = cleric_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_cleric
							add_trait = master_cleric
						}
						else = {
							set_character_flag = class_upgrading_clericlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = master_cleric }
								}
							}
							
							remove_title = title_magic_apprentice
						}
					}
				}
				master_cleric = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = cleric_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = cleric_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_cleric
							add_trait = renowned_cleric
						}
						else = {
							set_character_flag = class_upgrading_clericlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = renowned_cleric }
								}
							}
							
							remove_title = title_magic_apprentice
						}
					}
				}
				renowned_cleric = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = cleric_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = cleric_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_cleric
							add_trait = legendary_cleric
						}
						else = {
							set_character_flag = class_upgrading_clericlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = {
								religion = dead_three
							}
							change_variable = {
								which = global_counter_trivir
								value = 1
							}
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice
							}
							
							remove_title = title_magic_apprentice
						}
					}
				}
			}
		}
		#Druid block
		if = {
			limit = {
				z_druid = yes
				NOT = { trait = legendary_druid }
			}
			
			if = {
				limit = {
					has_minor_title = title_magic_apprentice
					liege = { z_druid = yes }
				}
				change_variable = { which = druid_xp value = 15 }
			}
			if = {
				limit = {
					has_ambition = obj_cls_druid
				}
				change_variable = { which = druid_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				druid = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = druid_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = druid_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = druid
							add_trait = trained_druid
						}
						else = {
							set_character_flag = class_upgrading_druidlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_druid = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = druid_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = druid_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_druid
							add_trait = journeyman_druid
						}
						else = {
							set_character_flag = class_upgrading_druidlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = journeyman_druid }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				journeyman_druid = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = druid_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = druid_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_druid
							add_trait = expert_druid
						}
						else = {
							set_character_flag = class_upgrading_druidlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = expert_druid }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				expert_druid = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = druid_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = druid_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_druid
							add_trait = master_druid
						}
						else = {
							set_character_flag = class_upgrading_druidlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = master_druid }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				master_druid = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = druid_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = druid_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_druid
							add_trait = renowned_druid
						}
						else = {
							set_character_flag = class_upgrading_druidlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = renowned_druid }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				renowned_druid = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = druid_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = druid_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_druid
							add_trait = legendary_druid
						}
						else = {
							set_character_flag = class_upgrading_druidlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice
							}

							remove_title = title_magic_apprentice
						}
					}
				}
			}
		}
		#Fighter block
		if = {
			limit = {
				z_fighter = yes
				NOT = { trait = legendary_fighter }
			}

			if = {
				limit = {
					has_minor_title = title_shieldbearer
				}

				change_variable = { which = fighter_xp value = 15 }
			}
			if = {
				limit = {
					has_ambition = obj_cls_fighter
				}
				change_variable = { which = fighter_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				fighter = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = fighter_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = fighter_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = fighter
							add_trait = trained_fighter
						}
						else = {
							set_character_flag = class_upgrading_fighterlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_fighter = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = fighter_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = fighter_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_fighter
							add_trait = journeyman_fighter
						}
						else = {
							set_character_flag = class_upgrading_fighterlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
						if = {
							limit = { 
								has_minor_title = title_shieldbearer
							}

							remove_title = title_shieldbearer
						}
					}
				}
				journeyman_fighter = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = fighter_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = fighter_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_fighter
							add_trait = expert_fighter
						}
						else = {
							set_character_flag = class_upgrading_fighterlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_shieldbearer
							}

							remove_title = title_shieldbearer
						}
					}
				}
				expert_fighter = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = fighter_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = fighter_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_fighter
							add_trait = master_fighter
						}
						else = {
							set_character_flag = class_upgrading_fighterlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_shieldbearer
							}

							remove_title = title_shieldbearer
						}
					}
				}
				master_fighter = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = fighter_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = fighter_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_fighter
							add_trait = renowned_fighter
						}
						else = {
							set_character_flag = class_upgrading_fighterlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_shieldbearer
							}

							remove_title = title_shieldbearer
						}
					}
				}
				renowned_fighter = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = fighter_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = fighter_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_fighter
							add_trait = legendary_fighter
						}
						else = {
							set_character_flag = class_upgrading_fighterlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_shieldbearer
							}

							remove_title = title_shieldbearer
						}
					}
				}
			}
		}
		#Monk block
		if = {
			limit = {
				z_monk = yes
				NOT = { trait = legendary_monk }
			}

			if = {
				limit = {
					has_ambition = obj_cls_monk
				}
				change_variable = { which = monk_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				class_monk = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = monk_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = monk_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = class_monk
							add_trait = trained_monk
						}
						else = {
							set_character_flag = class_upgrading_monklvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_monk = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = monk_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = monk_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_monk
							add_trait = journeyman_monk
						}
						else = {
							set_character_flag = class_upgrading_monklvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_monk = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = monk_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = monk_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_monk
							add_trait = expert_monk
						}
						else = {
							set_character_flag = class_upgrading_monklvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_monk = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = monk_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = monk_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_monk
							add_trait = master_monk
						}
						else = {
							set_character_flag = class_upgrading_monklvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_monk = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = monk_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = monk_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_monk
							add_trait = renowned_monk
						}
						else = {
							set_character_flag = class_upgrading_monklvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_monk = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = monk_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = monk_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_monk
							add_trait = legendary_monk
						}
						else = {
							set_character_flag = class_upgrading_monklvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		#Paladin block
		if = {
			limit = {
				z_paladin = yes
				NOT = { trait = legendary_paladin }
			}

			if = {
				limit = {
					has_ambition = obj_cls_paladin
				}
				change_variable = { which = paladin_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				paladin = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = paladin_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = paladin_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = paladin
							add_trait = trained_paladin
						}
						else = {
							set_character_flag = class_upgrading_paladinlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_paladin = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = paladin_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = paladin_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_paladin
							add_trait = journeyman_paladin
						}
						else = {
							set_character_flag = class_upgrading_paladinlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_paladin = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = paladin_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = paladin_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_paladin
							add_trait = expert_paladin
						}
						else = {
							set_character_flag = class_upgrading_paladinlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_paladin = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = paladin_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = paladin_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_paladin
							add_trait = master_paladin
						}
						else = {
							set_character_flag = class_upgrading_paladinlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_paladin = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = paladin_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = paladin_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_paladin
							add_trait = renowned_paladin
						}
						else = {
							set_character_flag = class_upgrading_paladinlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_paladin = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = paladin_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = paladin_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_paladin
							add_trait = legendary_paladin
						}
						else = {
							set_character_flag = class_upgrading_paladinlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		#Ranger block
		if = {
			limit = {
				z_ranger = yes
				NOT = { trait = legendary_ranger }
			}

			if = {
				limit = {
					has_ambition = obj_cls_ranger
				}
				change_variable = { which = ranger_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				ranger = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = ranger_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = ranger_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = ranger
							add_trait = trained_ranger
						}
						else = {
							set_character_flag = class_upgrading_rangerlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_ranger = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = ranger_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = ranger_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_ranger
							add_trait = journeyman_ranger
						}
						else = {
							set_character_flag = class_upgrading_rangerlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_ranger = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = ranger_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = ranger_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_ranger
							add_trait = expert_ranger
						}
						else = {
							set_character_flag = class_upgrading_rangerlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_ranger = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = ranger_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = ranger_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_ranger
							add_trait = master_ranger
						}
						else = {
							set_character_flag = class_upgrading_rangerlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_ranger = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = ranger_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = ranger_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_ranger
							add_trait = renowned_ranger
						}
						else = {
							set_character_flag = class_upgrading_rangerlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_ranger = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = ranger_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = ranger_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_ranger
							add_trait = legendary_ranger
						}
						else = {
							set_character_flag = class_upgrading_rangerlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		#Rogue block
		if = {
			limit = {
				z_rogue = yes
				NOT = { trait = legendary_rogue }
			}

			if = {
				limit = {
					has_ambition = obj_cls_rogue
				}
				change_variable = { which = rogue_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				rogue = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = rogue_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = rogue_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = rogue
							add_trait = trained_rogue
						}
						else = {
							set_character_flag = class_upgrading_roguelvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_rogue = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = rogue_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = rogue_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_rogue
							add_trait = journeyman_rogue
						}
						else = {
							set_character_flag = class_upgrading_roguelvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_rogue = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = rogue_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = rogue_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_rogue
							add_trait = expert_rogue
						}
						else = {
							set_character_flag = class_upgrading_roguelvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_rogue = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = rogue_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = rogue_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_rogue
							add_trait = master_rogue
						}
						else = {
							set_character_flag = class_upgrading_roguelvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_rogue = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = rogue_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = rogue_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_rogue
							add_trait = renowned_rogue
						}
						else = {
							set_character_flag = class_upgrading_roguelvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_rogue = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = rogue_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = rogue_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_rogue
							add_trait = legendary_rogue
						}
						else = {
							set_character_flag = class_upgrading_roguelvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		#Shadow block
		if = {
			limit = {
				z_shadow = yes
				NOT = { trait = legendary_shadow }
			}

			if = {
				limit = {
					has_ambition = obj_cls_shadow
				}
				change_variable = { which = shadow_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				shadow = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = shadow_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = shadow_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = shadow
							add_trait = trained_shadow
						}
						else = {
							set_character_flag = class_upgrading_shadowlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_shadow = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = shadow_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = shadow_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_shadow
							add_trait = journeyman_shadow
						}
						else = {
							set_character_flag = class_upgrading_shadowlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_shadow = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = shadow_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = shadow_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_shadow
							add_trait = expert_shadow
						}
						else = {
							set_character_flag = class_upgrading_shadowlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_shadow = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = shadow_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = shadow_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_shadow
							add_trait = master_shadow
						}
						else = {
							set_character_flag = class_upgrading_shadowlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_shadow = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = shadow_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = shadow_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_shadow
							add_trait = renowned_shadow
						}
						else = {
							set_character_flag = class_upgrading_shadowlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_shadow = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = shadow_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = shadow_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_shadow
							add_trait = legendary_shadow
						}
						else = {
							set_character_flag = class_upgrading_shadowlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		#Sorcerer block
		if = {
			limit = {
				z_sorcerer = yes
				NOT = { trait = legendary_sorcerer }
			}
			
			if = {
				limit = {
					has_ambition = obj_cls_sorcerer
				}
				change_variable = { which = sorcerer_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				sorcerer = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = sorcerer_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = sorcerer_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = sorcerer
							add_trait = trained_sorcerer
						}
						else = {
							set_character_flag = class_upgrading_sorcererlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_sorcerer = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = sorcerer_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = sorcerer_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_sorcerer
							add_trait = journeyman_sorcerer
						}
						else = {
							set_character_flag = class_upgrading_sorcererlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_sorcerer = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = sorcerer_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = sorcerer_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_sorcerer
							add_trait = expert_sorcerer
						}
						else = {
							set_character_flag = class_upgrading_sorcererlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_sorcerer = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = sorcerer_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = sorcerer_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_sorcerer
							add_trait = master_sorcerer
						}
						else = {
							set_character_flag = class_upgrading_sorcererlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_sorcerer = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = sorcerer_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = sorcerer_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_sorcerer
							add_trait = renowned_sorcerer
						}
						else = {
							set_character_flag = class_upgrading_sorcererlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_sorcerer = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = sorcerer_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = sorcerer_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_sorcerer
							add_trait = legendary_sorcerer
						}
						else = {
							set_character_flag = class_upgrading_sorcererlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = {
								OR = {
									culture = netherese
									culture = shadovar
									trait = patron_shar
								}
							}
							change_variable = {
								which = global_counter_shadow
								value = 1
							}
						}
					}
				}
			}
		}
		#Warlock block
		if = {
			limit = {
				z_warlock = yes
				NOT = { trait = legendary_warlock }
			}
			
			if = {
				limit = {
					has_minor_title = title_magic_apprentice
					liege = { z_warlock = yes }
				}
				change_variable = { which = warlock_xp value = 15 }
			}
			if = {
				limit = {
					has_ambition = obj_cls_warlock
				}
				change_variable = { which = warlock_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				warlock = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = warlock_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = warlock_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = warlock
							add_trait = trained_warlock
						}
						else = {
							set_character_flag = class_upgrading_warlocklvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_warlock = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = warlock_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = warlock_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_warlock
							add_trait = journeyman_warlock
						}
						else = {
							set_character_flag = class_upgrading_warlocklvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = journeyman_warlock }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				journeyman_warlock = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = warlock_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = warlock_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_warlock
							add_trait = expert_warlock
						}
						else = {
							set_character_flag = class_upgrading_warlocklvl3
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = expert_warlock }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				expert_warlock = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = warlock_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = warlock_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_warlock
							add_trait = master_warlock
						}
						else = {
							set_character_flag = class_upgrading_warlocklvl4
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = master_warlock }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				master_warlock = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = warlock_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = warlock_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_warlock
							add_trait = renowned_warlock
						}
						else = {
							set_character_flag = class_upgrading_warlocklvl5
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = renowned_warlock }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				renowned_warlock = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = warlock_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = warlock_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_warlock
							add_trait = legendary_warlock
						}
						else = {
							set_character_flag = class_upgrading_warlocklvl6
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = {
								OR = {
									culture = netherese
									culture = shadovar
									trait = patron_shar
								}
							}
							change_variable = {
								which = global_counter_shadow
								value = 1
							}
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice
							}

							remove_title = title_magic_apprentice
						}
					}
				}
			}
		}
		#Wizard block
		if = {
			limit = {
				z_wizard = yes
				NOT = { trait = legendary_wizard }
			}

			if = {
				limit = {
					has_minor_title = title_magic_apprentice
					liege = { z_wizard = yes }
				}
				change_variable = { which = wizard_xp value = 15 }
			}
			if = {
				limit = {
					has_ambition = obj_cls_wizard
				}
				change_variable = { which = wizard_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				wizard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = wizard_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = wizard_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = wizard
							add_trait = trained_wizard
						}
						else = {
							set_character_flag = class_upgrading_wizardlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_wizard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = wizard_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = wizard_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_wizard
							add_trait = journeyman_wizard
						}
						else = {
							set_character_flag = class_upgrading_wizardlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = journeyman_wizard }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				journeyman_wizard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = wizard_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = wizard_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_wizard
							add_trait = expert_wizard
						}
						else = {
							set_character_flag = class_upgrading_wizardlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = expert_wizard }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				expert_wizard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = wizard_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = wizard_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_wizard
							add_trait = master_wizard
						}
						else = {
							set_character_flag = class_upgrading_wizardlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = master_wizard }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				master_wizard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = wizard_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = wizard_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_wizard
							add_trait = renowned_wizard
						}
						else = {
							set_character_flag = class_upgrading_wizardlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice 
								trigger_if = {
									limit = { trait = loyal }

									liege = { trait = renowned_wizard }
								}
							}

							remove_title = title_magic_apprentice
						}
					}
				}
				renowned_wizard = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = wizard_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = wizard_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_wizard
							add_trait = legendary_wizard
						}
						else = {
							set_character_flag = class_upgrading_wizardlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
						if = {
							limit = {
								OR = {
									culture = netherese
									culture = shadovar
									trait = patron_shar
								}
							}
							change_variable = {
								which = global_counter_shadow
								value = 1
							}
						}
						if = {
							limit = { 
								has_minor_title = title_magic_apprentice
							}

							remove_title = title_magic_apprentice
						}
					}
				}
			}
		}
		#Psion block
		if = {
			limit = {
				z_psion = yes
				NOT = { trait = legendary_psion }
			}

			if = {
				limit = {
					has_ambition = obj_cls_psion
				}
				change_variable = { which = psion_xp value = 10 }
			}
			#Now to check for level up
			trigger_switch = {
				on_trigger = trait
				psion = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = psion_xp which >= global_trained_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = psion_xp which >= global_trained_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = psion
							add_trait = trained_psion
						}
						else = {
							set_character_flag = class_upgrading_psionlvl1
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				trained_psion = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = psion_xp which >= global_journeyman_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = psion_xp which >= global_journeyman_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = trained_psion
							add_trait = journeyman_psion
						}
						else = {
							set_character_flag = class_upgrading_psionlvl2
							set_character_flag = class_upgrading_trigger_flag
						}
						if = { #lolth test
							limit = {
								religion = lolth_cult
								trait = creature_drow
								NOT = { has_character_flag = lolth_tested_flag }
							}
							character_event = { id = conv.20 days = 150 random = 60 }
						}
					}
				}
				journeyman_psion = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = psion_xp which >= global_expert_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = psion_xp which >= global_expert_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = journeyman_psion
							add_trait = expert_psion
						}
						else = {
							set_character_flag = class_upgrading_psionlvl3
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				expert_psion = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = psion_xp which >= global_master_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = psion_xp which >= global_master_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = expert_psion
							add_trait = master_psion
						}
						else = {
							set_character_flag = class_upgrading_psionlvl4
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				master_psion = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = psion_xp which >= global_renowned_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = psion_xp which >= global_renowned_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = master_psion
							add_trait = renowned_psion
						}
						else = {
							set_character_flag = class_upgrading_psionlvl5
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
				renowned_psion = {
					if = {
						limit = {
							trigger_if = {
								limit = { z_multiclass = yes }
								check_variable = { which = psion_xp which >= global_legendary_xp_multiclass }
							}
							trigger_else = {
								check_variable = { which = psion_xp which >= global_legendary_xp }
							}
						}
						if = {
							limit = { ai = yes }
							remove_trait = renowned_psion
							add_trait = legendary_psion
						}
						else = {
							set_character_flag = class_upgrading_psionlvl6
							set_character_flag = class_upgrading_trigger_flag
						}
					}
				}
			}
		}
		# player lvlup
		character_event = { id = frxp.3 }
	}
}

character_event = {
	id = frxp.3
	desc = TBXP.3.DESC
	picture = GFX_evt_battle
	is_triggered_only = yes

	ai = no # ai gets a lvl-up without going to this event
	has_character_flag = class_upgrading_trigger_flag # only if there are lvlups pending

	option = {
		name = TBXP.3.OPT
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_bardlvl1 = { add_trait = trained_bard }
			class_upgrading_bardlvl2 = { add_trait = journeyman_bard }
			class_upgrading_bardlvl3 = { add_trait = expert_bard }
			class_upgrading_bardlvl4 = { add_trait = master_bard }
			class_upgrading_bardlvl5 = { add_trait = renowned_bard }
			class_upgrading_bardlvl6 = { add_trait = legendary_bard }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_barbarianlvl1 = { add_trait = trained_barbarian }
			class_upgrading_barbarianlvl2 = { add_trait = journeyman_barbarian }
			class_upgrading_barbarianlvl3 = { add_trait = expert_barbarian }
			class_upgrading_barbarianlvl4 = { add_trait = master_barbarian }
			class_upgrading_barbarianlvl5 = { add_trait = renowned_barbarian }
			class_upgrading_barbarianlvl6 = { add_trait = legendary_barbarian }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_clericlvl1 = { add_trait = trained_cleric }
			class_upgrading_clericlvl2 = { add_trait = journeyman_cleric }
			class_upgrading_clericlvl3 = { add_trait = expert_cleric }
			class_upgrading_clericlvl4 = { add_trait = master_cleric }
			class_upgrading_clericlvl5 = { add_trait = renowned_cleric }
			class_upgrading_clericlvl6 = { add_trait = legendary_cleric }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_druidlvl1 = { add_trait = trained_druid }
			class_upgrading_druidlvl2 = { add_trait = journeyman_druid }
			class_upgrading_druidlvl3 = { add_trait = expert_druid }
			class_upgrading_druidlvl4 = { add_trait = master_druid }
			class_upgrading_druidlvl5 = { add_trait = renowned_druid }
			class_upgrading_druidlvl6 = { add_trait = legendary_druid }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_fighterlvl1 = { add_trait = trained_fighter }
			class_upgrading_fighterlvl2 = { add_trait = journeyman_fighter }
			class_upgrading_fighterlvl3 = { add_trait = expert_fighter }
			class_upgrading_fighterlvl4 = { add_trait = master_fighter }
			class_upgrading_fighterlvl5 = { add_trait = renowned_fighter }
			class_upgrading_fighterlvl6 = { add_trait = legendary_fighter }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_monklvl1 = { add_trait = trained_monk }
			class_upgrading_monklvl2 = { add_trait = journeyman_monk }
			class_upgrading_monklvl3 = { add_trait = expert_monk }
			class_upgrading_monklvl4 = { add_trait = master_monk }
			class_upgrading_monklvl5 = { add_trait = renowned_monk }
			class_upgrading_monklvl6 = { add_trait = legendary_monk }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_paladinlvl1 = { add_trait = trained_paladin }
			class_upgrading_paladinlvl2 = { add_trait = journeyman_paladin }
			class_upgrading_paladinlvl3 = { add_trait = expert_paladin }
			class_upgrading_paladinlvl4 = { add_trait = master_paladin }
			class_upgrading_paladinlvl5 = { add_trait = renowned_paladin }
			class_upgrading_paladinlvl6 = { add_trait = legendary_paladin }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_rangerlvl1 = { add_trait = trained_ranger }
			class_upgrading_rangerlvl2 = { add_trait = journeyman_ranger }
			class_upgrading_rangerlvl3 = { add_trait = expert_ranger }
			class_upgrading_rangerlvl4 = { add_trait = master_ranger }
			class_upgrading_rangerlvl5 = { add_trait = renowned_ranger }
			class_upgrading_rangerlvl6 = { add_trait = legendary_ranger }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_roguelvl1 = { add_trait = trained_rogue }
			class_upgrading_roguelvl2 = { add_trait = journeyman_rogue }
			class_upgrading_roguelvl3 = { add_trait = expert_rogue }
			class_upgrading_roguelvl4 = { add_trait = master_rogue }
			class_upgrading_roguelvl5 = { add_trait = renowned_rogue }
			class_upgrading_roguelvl6 = { add_trait = legendary_rogue }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_shadowlvl1 = { add_trait = trained_shadow }
			class_upgrading_shadowlvl2 = { add_trait = journeyman_shadow }
			class_upgrading_shadowlvl3 = { add_trait = expert_shadow }
			class_upgrading_shadowlvl4 = { add_trait = master_shadow }
			class_upgrading_shadowlvl5 = { add_trait = renowned_shadow }
			class_upgrading_shadowlvl6 = { add_trait = legendary_shadow }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_sorcererlvl1 = { add_trait = trained_sorcerer }
			class_upgrading_sorcererlvl2 = { add_trait = journeyman_sorcerer }
			class_upgrading_sorcererlvl3 = { add_trait = expert_sorcerer }
			class_upgrading_sorcererlvl4 = { add_trait = master_sorcerer }
			class_upgrading_sorcererlvl5 = { add_trait = renowned_sorcerer }
			class_upgrading_sorcererlvl6 = { add_trait = legendary_sorcerer }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_warlocklvl1 = { add_trait = trained_warlock }
			class_upgrading_warlocklvl2 = { add_trait = journeyman_warlock }
			class_upgrading_warlocklvl3 = { add_trait = expert_warlock }
			class_upgrading_warlocklvl4 = { add_trait = master_warlock }
			class_upgrading_warlocklvl5 = { add_trait = renowned_warlock }
			class_upgrading_warlocklvl6 = { add_trait = legendary_warlock }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_wizardlvl1 = { add_trait = trained_wizard }
			class_upgrading_wizardlvl2 = { add_trait = journeyman_wizard }
			class_upgrading_wizardlvl3 = { add_trait = expert_wizard }
			class_upgrading_wizardlvl4 = { add_trait = master_wizard }
			class_upgrading_wizardlvl5 = { add_trait = renowned_wizard }
			class_upgrading_wizardlvl6 = { add_trait = legendary_wizard }
		}
		trigger_switch = {
			on_trigger = has_character_flag
			class_upgrading_psionlvl1 = { add_trait = trained_psion }
			class_upgrading_psionlvl2 = { add_trait = journeyman_psion }
			class_upgrading_psionlvl3 = { add_trait = expert_psion }
			class_upgrading_psionlvl4 = { add_trait = master_psion }
			class_upgrading_psionlvl5 = { add_trait = renowned_psion }
			class_upgrading_psionlvl6 = { add_trait = legendary_psion }
		}
		clear_flags_with_prefix = class_upgrading_
	}
}

#xp for winning battle
character_event = {
	id = frxp.4
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_alive = yes
	}

	immediate = {
		hidden_tooltip = {
			set_variable = { which = local_xp_to_add value = 4 }
			add_custom_xp_effect = yes
		}
	}
}

#xp for losing battle
character_event = {
	id = frxp.5
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_alive = yes
	}

	immediate = {
		hidden_tooltip = {
			set_variable = { which = local_xp_to_add value = 2 }
			add_custom_xp_effect = yes
		}
	}
}

#extra xp if you won a major battle
character_event = {
	id = frxp.6
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_alive = yes
	}

	immediate = {
		hidden_tooltip = {
			set_variable = { which = local_xp_to_add value = 4 }
			add_custom_xp_effect = yes
		}
	}
}

#extra xp if you lost a major battle
character_event = {
	id = frxp.7
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_alive = yes
	}

	immediate = {
		hidden_tooltip = {
			set_variable = { which = local_xp_to_add value = 2 }
			add_custom_xp_effect = yes
		}
	}
}

namespace = HF

#Written by Joachim
#HF.40000 - HF.40099

#A character is eligible for Beatification
character_event = {
	id = HF.40000
	hide_window = yes
	is_triggered_only = yes
	min_age = 16
    only_playable = yes
	religion = triadic
	has_dlc = "Holy Fury"

	trigger = {
		death_in_shou_lung_trigger = no
		death_no_trace_trigger = no
		NOR = {
			trait = drunkard
			trait = hedonist
			trait = cannibal_trait
			#controls_religion = yes
            is_any_kinslayer_trigger = yes
            has_character_modifier = voice_of_satan
            has_character_modifier = known_satanist
            has_character_modifier = suspected_demon_spawn
            has_character_modifier = suspected_witch
            has_character_modifier = known_witch
            has_character_modifier = crazy_cannibal
            has_character_modifier = demon_child_non_pagan
            has_character_modifier = corrupting_magic_minor
            has_character_modifier = corrupting_magic_major
		}
		OR = {
			AND = {
				tier = Emperor
				piety >= 1250
			}

			AND = {
				tier = King
				piety >= 1000
			}
			AND = {
				tier = Duke
				piety >= 750
			}
			AND = {
				tier = Count
				piety >= 500
			}
		}
		has_vice_trigger = no
		is_benevolent_trigger = yes
		is_pious_trigger = yes
		has_virtue_trigger = yes
		is_adult = yes
	}

	immediate = {
        #Beatification
        save_event_target_as = saint_person
        event_target:saint_person = {
        	capital_scope = {
        		save_event_target_as = saint_capital
        	}
        }
        random_demesne_province = {
        	limit = {
        		NOR = {
        			has_province_modifier = tomb_of_a_saint
        			has_province_modifier = pillaged_tomb_of_a_saint
        		}
        	}
        	save_event_target_as = random_saint_demesne_province
        }
        random_realm_province = {
        	limit = {
        		NOR = {
        			has_province_modifier = tomb_of_a_saint
        			has_province_modifier = pillaged_tomb_of_a_saint
        		}
        	}
        	save_event_target_as = random_saint_realm_province
        }
        if = {
									limit = {
										any_realm_character = {
											ai = yes
											OR = {
												z_cleric = yes
												is_priest = yes
											}
											religion = triadic
										}
									}
				          random = {
				              chance = 100
				              modifier = {
				                  factor = 0.25
				                  event_target:saint_person = {
				                      any_owned_bloodline = {
				                          has_bloodline_flag = saintly_bloodline
				                      }
				                  }
				              }
				              modifier = {
				                  factor = 0.25
				                  event_target:saint_person = {
				                      any_dynasty_member = {
				                          any_owned_bloodline = {
				                              has_bloodline_flag = saintly_bloodline
				                          }
				                      }
				                  }
				              }
				              modifier = {
				                  factor = 0.8
				                  event_target:saint_person = {
				                      trait = cynical
				                  }
				              }
				              random_realm_province = {
				                  province_event = { id = HF.40001 }
				              }
				              event_target:saint_person = {
				                  set_character_flag = beatified
				              }
				          }
        }

        if = {
            limit = {
                event_target:saint_person = {
                    ai = no
                }
            }
            event_target:saint_person = {
                add_trait = i_used_to_be_a_player
            }
        }
        #Potential for sainthood
        deciding_upon_saint_effect = yes
	}
}

#Decision if to be Beatified
province_event = {
	id = HF.40001
    hide_window = yes
	is_triggered_only = yes
    has_dlc = "Holy Fury"

	immediate = {
        if = {
            limit = {
                has_global_flag = qa_testing
            }
            province_event = { id = HF.40002 days = 3 }
        }
        else = {
            province_event = { id = HF.40002 days = 180 random = 360 }
        }
	}
}

#Decision has been made to be Beatified
province_event = {
    id = HF.40002
    hide_window = yes
    is_triggered_only = yes
    has_dlc = "Holy Fury"

    immediate = {
        holder_scope = {
	        random_realm_character = {
	            limit = {
					ai = yes
					OR = {
						z_cleric = yes
						is_priest = yes
					}
					religion = event_target:saint_person
	            }
				character_event = { id = HF.40003 }
			}
        }
    }
}

#Local priest sends out letters declaring beatification
character_event = {
    id = HF.40003
    is_triggered_only = yes
    hide_window = yes
    has_dlc = "Holy Fury"

    immediate = {
        save_event_target_as = bishopric_holder
        event_target:saint_person = {
            add_trait = beatified
            if = {
                limit = {
                    is_female = yes
                }
                set_special_character_title = BLESSED_TITLE_FEMALE
            }
            else = {
                set_special_character_title = BLESSED_TITLE
            }
        }
    	top_liege = {
            any_realm_character = {
        		limit = {
                    NOT = {
                        family = event_target:saint_person
                    }
        			religion = triadic
        		}
        		narrative_event = { id = HF.40004 }
                set_character_flag = had_beatification_notification #Flags to make sure you only get the event once
            }
    	}
        event_target:saint_person = {
            any_dynasty_member = {
                limit = {
                    religion = triadic
                    NOT = { has_character_flag = had_beatification_notification }
                }
                narrative_event = { id = HF.40004 }
                set_character_flag = had_beatification_notification
            }
        }
        top_liege = {
            if = {
                limit = {
                    NOR = {
                        family = event_target:saint_person
                        has_character_flag = had_beatification_notification
                    }
                    religion = triadic
                }
                narrative_event = { id = HF.40004 }
            }
        }
    }
    after = { #To remove the flags
        any_realm_character = {
            limit = {
                has_character_flag = had_beatification_notification
            }
            clr_character_flag = had_beatification_notification
        }
        event_target:saint_person = {
            any_dynasty_member = {
                limit = {
                    has_character_flag = had_beatification_notification
                }
                clr_character_flag = had_beatification_notification
            }
        }
        top_liege = {
            if = {
                limit = {
                    has_character_flag = had_beatification_notification
                }
                clr_character_flag = had_beatification_notification
            }
        }
    }
}

#Beatification is made official
narrative_event = {
	id = HF.40004
	title = TITLEHF.40004
	desc = EVTDESC_HF_40004
	portrait = event_target:saint_person
	is_triggered_only = yes
	picture = GFX_evt_beatification
	border = GFX_event_narrative_frame_religion
    has_dlc = "Holy Fury"

	option = {
		name = EVTOPTAHF.40004
        if = {
            limit = {
                event_target:saint_person = {
                    family = ROOT
                }
            }
            piety = 50
        }
        show_portrait = event_target:bishopric_holder
	}
}

#Pope sends out letters declaring beatification - Removed, was HF.40005


#Papal beatification Event - Removed, was HF.40006

#Checking time left to Canonization
province_event = {
    id = HF.40010
    hide_window = yes
    is_triggered_only = yes
    has_dlc = "Holy Fury"
    immediate = {
        if = {
            limit = {
                OR = {
                    has_global_flag = qa_testing
                    event_target:saint_person = {
                        NOT = { religion = triadic }
                    }
                }
            }
            province_event = { id = HF.40015 days = 5 }
        }
        else_if = {
            limit = {
                event_target:saint_person = {
                    trait = i_used_to_be_a_player
                }
            }
            province_event = { id = HF.40015 days = 1000 random = 1000 }
        }
        else = {
            province_event = { id = HF.40015 days = 1000 random = 10000 }
        }
    }
}

#Preparing Canonization
province_event = {
    id = HF.40015
    hide_window = yes
    is_triggered_only = yes
    has_dlc = "Holy Fury"
    trigger = {
        event_target:saint_person = {
            OR = {
                trait = beatified
                NOT = { religion = triadic }
            }
            NOT = {
                has_character_flag = blessed_ancestor_prestige
            }
        }
    }

    immediate = {
        if = {
            limit = {
                event_target:saint_capital = {
                    owner = {
                        religion = event_target:saint_person
                    }
                }
            }
            event_target:saint_capital = {
                owner = {
					if = {
						limit = {
							religion = triadic
						}
						random_character = {
							limit = {
								ai = yes
								OR = {
									z_cleric = yes
									is_priest = yes
								}
								religion = triadic
							}
							preferred_limit = {
								trait = legendary_cleric
							}
							preferred_limit = {
								trait = renowned_cleric
							}
							preferred_limit = {
								trait = master_cleric
							}
							preferred_limit = {
								trait = expert_cleric
							}
							preferred_limit = {
								trait = journeyman_cleric
							}
							preferred_limit = {
								trait = trained_cleric
							}
							preferred_limit = {
								trait = cleric
							}
							character_event = { id = HF.40020 }
						}
					}
					else_if = {
						limit = {
							NOT = { religion = triadic }
						}
						rightful_religious_head_scope = {
							character_event = { id = HF.40020 }
						}
					}
                }
            }
        }
    }
}

#Canonization
character_event = {
    id = HF.40020
    desc = {
        trigger = {
            event_target:saint_person = {
                religion = triadic
            }
        }
        text = EVTDESC_HF_40020_A
    }
    desc = {
        trigger = {
            event_target:saint_person = {
                NOT = { religion = triadic }
            }
        }
        text = EVTDESC_HF_40020_B
    }
    picture = GFX_evt_council
    is_triggered_only = yes
    has_dlc = "Holy Fury"

    immediate = {
        save_event_target_as = canonizer_person
    }

    option = {
        name = EVTOPTA_HF_40020

        if = {
            limit = {
                religion = triadic
            }
            custom_tooltip = {
                text = pope_cannonize_choice_TT
            }
        }
        else_if = {
            limit = {
                NOT = { religion = triadic }
            }
            custom_tooltip = {
                text = pagan_pope_cannonize_choice_TT
            }
        }

        hidden_tooltip = {
            # Give nickname - Pagan only
            if = {
                limit = {
                    event_target:saint_person = {
                        OR = {
                            has_nickname = no
                            has_nickname = nick_the_blessed
                        }
                    }
                }
                event_target:saint_person = {
                    random_list = {
                        1 = {
                            give_nickname = nick_the_noble
                        }
                        1 = {
                            give_nickname = nick_the_gentle
                        }
                        3 = {
                            trigger = {
                                trait = chaste
                            }
                            give_nickname = nick_the_chaste
                        }
                        3 = {
                            trigger = {
                                trait = just
                            }
                            give_nickname = nick_the_just
                        }
                        3 = {
                            trigger = {
                                has_fair_trait_trigger = yes
                            }
                            give_nickname = nick_the_fair
                        }
                        3 = {
                            trigger = {
                                trait = is_malnourished
                            }
                            give_nickname = nick_the_hollow
                        }
                        3 = {
                            trigger = {
                                OR = {
                                    is_smart_trigger = yes
                                    learning = 15
                                }
                            }
                            give_nickname = nick_the_wise
                        }
                        3 = {
                            trigger = {
                                trait = one_eyed
                            }
                            give_nickname = nick_one_eye
                        }
                        3 = {
                            trigger = {
                                is_strong_trigger = yes
								can_apply_cool_nickname_trigger = yes
                            }
                            give_nickname = nick_the_bear
                        }
                        3 = {
                            trigger = {
                                trait = brave
								can_apply_average_nickname_trigger = yes
                            }
                            give_nickname = nick_the_bold
                        }
                    }
                }
            }
            # Messages
            any_playable_ruler = {
                limit = {
                    NOT = {
                        family = event_target:saint_person
                    }
                    religion = ROOT
                }
                narrative_event = { id = HF.40025 }
            }
            event_target:saint_person = {
                any_dynasty_member = {
                    limit = {
                        religion = ROOT
                    }
                    narrative_event = { id = HF.40025 }
                }
            }
            ROOT = {
                narrative_event = { id = HF.40025 }
            }
            # Trait change
            event_target:saint_person = {
                if = {
                    limit = {
                        religion = triadic
                    }
                    remove_trait = beatified
                    add_trait = saint
                    if = {
                        limit = {
                            is_female = yes
                        }
                        set_special_character_title = SAINT_TITLE_FEMALE
                    }
                    else = {
                        set_special_character_title = SAINT_TITLE
                    }
                }
                else_if = {
                    limit = {
                        NOT = { religion = triadic }
                    }
                    add_trait = blessed_ancestor
                    set_special_character_title = BLESSED_TITLE
                }
            }
            # Burial Site setting - Christian only
            if = {
                limit = {
                    event_target:saint_person = {
                        religion = triadic
                    }
                }
                #Confirm that a burial site exists, for pilgrimage
                set_global_flag = saintly_burial_sites_exist
                event_target:saint_capital = {
                    owner = {
                        save_event_target_as = saint_capital_owner
                    }
                }
                if = {
                    limit = {
                        NOR = {
                            event_target:saint_capital = {
                                has_province_modifier = tomb_of_a_saint
                            }
                            event_target:saint_capital = {
                                has_province_modifier = pillaged_tomb_of_a_saint
                            }
                        }
                    }
                    event_target:saint_capital = {
                        setting_up_saintly_burial_site_effect = yes
                    }
                }
                else_if = {
                    limit = {
                        event_target:saint_capital = {
                            any_neighbor_province = {
                                owner = {
                                    character = event_target:saint_capital_owner
                                }
                                NOR = {
                                    has_province_modifier = tomb_of_a_saint
                                    has_province_modifier = pillaged_tomb_of_a_saint
                                }
                            }
                        }
                    }
                    event_target:saint_capital = {
                        random_neighbor_province = {
                            limit = {
                                owner = {
                                    character = event_target:saint_capital_owner
                                }
                                NOR = {
                                    has_province_modifier = tomb_of_a_saint
                                    has_province_modifier = pillaged_tomb_of_a_saint
                                }
                            }
                            setting_up_saintly_burial_site_effect = yes
                        }
                    }
                }
                else_if = {
                    limit = {
                        NOR = {
                            event_target:random_saint_demesne_province = {
                                has_province_modifier = tomb_of_a_saint
                            }
                            event_target:random_saint_demesne_province = {
                                has_province_modifier = pillaged_tomb_of_a_saint
                            }
                        }
                    }
                    event_target:random_saint_demesne_province = {
                        setting_up_saintly_burial_site_effect = yes
                    }
                }
                else_if = {
                    limit = {
                        NOR = {
                            event_target:random_saint_realm_province = {
                                has_province_modifier = tomb_of_a_saint
                            }
                            event_target:random_saint_realm_province = {
                                has_province_modifier = pillaged_tomb_of_a_saint
                            }
                        }
                    }
                    event_target:random_saint_realm_province = {
                        setting_up_saintly_burial_site_effect = yes
                    }
                }
            }
            # Bloodline creation
            random_list = {
                20 = {
                    trigger = {
                        event_target:saint_person = {
                            OR = {
                                trait = zealous
                                trait = holy_warrior
                            }
                        }
                    }
                    event_target:saint_person = {
						if = {
							limit = {
								event_target:saint_person = {
                                    religion = triadic
                                }
							}
							random_list  = {
								1 = {
									create_bloodline = {
										type = saintly_bloodline_orthodox_01
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_nestorian_01
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_coptic_01
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_catholic_01
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									new_bloodline = {
										set_name = saintly_bloodline_name
										set_description = saintly_bloodline_description
									}
								}
							}
						}
                        else_if = {
                            limit = {
                                event_target:saint_person = {
                                    NOT = { religion = triadic }
                                }
                            }
                            new_bloodline = {
                                set_name = blessed_bloodline_name
                                set_description = blessed_bloodline_description
                            }
                        }
                    }
                }
                20 = {
                    trigger = {
                        has_dlc = "Mystics"
                        OR = {
                            event_target:saint_person = {
                                trait = celibate
                            }
                            event_target:saint_person = {
                                trait = monk
                            }
                        }
                        event_target:saint_person = {
                            religion = triadic
                        }
                    }
                    event_target:saint_person = {
                        if = {
                            limit = {
                                religion = triadic
                            }
							random_list = {
								1 = {
									create_bloodline = {
										type = saintly_bloodline_orthodox_02
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_nestorian_02
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_coptic_02
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_catholic_02
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
							}
                        }
                        if = {
                            limit = {
                                event_target:saint_person = {
                                    religion = triadic
                                }
                            }
                            new_bloodline = {
                                set_name = saintly_bloodline_name
                                set_description = saintly_bloodline_description
                            }
                        }
                        else_if = {
                            limit = {
                                event_target:saint_person = {
                                    NOT = { religion = triadic }
                                }
                            }
                            new_bloodline = {
                                set_name = blessed_bloodline_name
                                set_description = blessed_bloodline_description
                            }
                        }
                    }
                }
                5 = {
                    event_target:saint_person = {
                        if = {
                            limit = {
                                religion = triadic
                            }
							random_list = {
								1 = {
									create_bloodline = {
										type = saintly_bloodline_orthodox_03
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_nestorian_03
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_coptic_03
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_catholic_03
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
							}
						}
                        if = {
                            limit = {
                                event_target:saint_person = {
                                    religion = triadic
                                }
                            }
                            new_bloodline = {
                                set_name = saintly_bloodline_name
                                set_description = saintly_bloodline_description
                            }
                        }
                        else_if = {
                            limit = {
                                event_target:saint_person = {
                                    NOT = { religion = triadic }
                                }
                            }
                            new_bloodline = {
                                set_name = blessed_bloodline_name
                                set_description = blessed_bloodline_description
                            }
                        }
                    }
                }
                5 = {
                    modifier = {
                        factor = 4
                        OR = {
                            event_target:saint_person = {
                                trait = zealous
                            }
                            event_target:saint_person = {
                                trait = holy_warrior
                            }
                        }
                    }
                    event_target:saint_person = {
                        if = {
                            limit = {
                                religion = triadic
                            }
							random_list = {
								1 = {
									create_bloodline = {
										type = saintly_bloodline_orthodox_04
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_nestorian_04
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_coptic_04
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_catholic_04
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
							}
						}
                        if = {
                            limit = {
                                event_target:saint_person = {
                                    religion = triadic
                                }
                            }
                            new_bloodline = {
                                set_name = saintly_bloodline_name
                                set_description = saintly_bloodline_description
                            }
                        }
                        else_if = {
                            limit = {
                                event_target:saint_person = {
                                    NOT = { religion = triadic }
                                }
                            }
                            new_bloodline = {
                                set_name = blessed_bloodline_name
                                set_description = blessed_bloodline_description
                            }
                        }
                    }
                }
                5 = {
                    event_target:saint_person = {
                        if = {
                            limit = {
                                religion = triadic
                            }
							random_list = {
								1 = {
									create_bloodline = {
										type = saintly_bloodline_orthodox_06
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_nestorian_06
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_coptic_06
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
								1 = {
									create_bloodline = {
										type = saintly_bloodline_catholic_06
										religion = event_target:saint_person
										inheritance = all_descendants
									}
									new_bloodline = {
										any_bloodline_member = {
											limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }
											any_owned_bloodline = {
												limit = { bloodline = PREVPREV }
												remove_bloodline_member = PREV
											}
										}
									}
								}
							}
						}
                        if = {
                            limit = {
                                event_target:saint_person = {
                                    religion = triadic
                                }
                            }
                            new_bloodline = {
                                set_name = saintly_bloodline_name
                                set_description = saintly_bloodline_description
                            }
                        }
                        else_if = {
                            limit = {
                                event_target:saint_person = {
                                    NOT = { religion = triadic }
                                }
                            }
                            new_bloodline = {
                                set_name = blessed_bloodline_name
                                set_description = blessed_bloodline_description
                            }
                        }
                    }
                }
            }
        }

        ai_chance = {
            factor = 1
        }
    }

    option = {
        name = EVTOPTB_HF_40020

        ai_chance = {
            factor = 0
        }
    }
}

#Notification about Burial Site
province_event = {
    id = HF.40021
    is_triggered_only = yes
    hide_window = yes
    has_dlc = "Holy Fury"

   	immediate = {
   		owner = {
			character_event = { id = HF.40022 }
   		}
   	}
}

#Notification sent out to all players
character_event = {
    id = HF.40022
    desc = EVTDESC_HF_40022
    picture = GFX_evt_large_army
    is_triggered_only = yes
    notification = yes
    has_dlc = "Holy Fury"

    option = {
        name = OK
    }
}

#Canonization Official
narrative_event = {
    id = HF.40025
    desc = {
        trigger = {
            event_target:saint_person = {
                religion = triadic
            }
        }
        text = EVTDESC_HF_40025
        picture = GFX_evt_beatification
    }
    desc = {
        trigger = {
            event_target:saint_person = {
                NOT = { religion = triadic }
            }
        }
        text = EVTDESC_HF_40025_B
        picture = GFX_evt_pagan_reformation
    }
    title = EVTTITLE_HF_40025
    portrait = event_target:saint_person
	picture = GFX_evt_beatification
	border = GFX_event_narrative_frame_religion
    is_triggered_only = yes
    has_dlc = "Holy Fury"

    immediate = {
        if = {
            limit = {
                event_target:saint_person = {
                    religion = triadic
                }
            }
            sound_effect = saint_proclaimed
        }
        opinion = {
            name = opinion_very_grateful_donation
            who = FROM
            years = 30
        }
    }

    option = {
        name = EVTOPTA_HF_40025
        show_portrait = FROM
        if = {
            limit = {
                event_target:saint_person = {
                    family = ROOT
                }
            }
            piety = 100
            if = {
                limit = {
                    religion = triadic
                }
                custom_tooltip = { text = TT_CANONIZATION_FAMILY }
            }
            else_if = {
                limit = {
                    NOT = { religion = triadic }
                }
                custom_tooltip = { text = TT_PAGAN_CANONIZATION_FAMILY}
            }
        }
    }
}

#Bad Beatification - Removed, was HF.40050

#Bishop considers making a sinful Beatified - Removed, was HF.40051

#Bishop decided to make a Sinful Beatified - Removed, was HF.40052

#Bishop sends out the letters with the news of the sinful Beatification - Removed, was HF.40053

#Sinful Beatification event - Removed, was HF.40055

#Pope preparing a response - Removed, was HF.40056

#Pope finished response - Removed, was HF.40057

#Pope sending out letters - Removed, was HF.40058

#Vatican Outrage over Sinful Beatification - Removed, was HF.40060

#Bad Papal saint - Removed, was HF.40090

#Bad Papal Saint decision - Removed, was HF.40091

#Pope sends out letters deciding bad Saint - Removed, was HF.40092

#Bad Papal Saint main event - Removed, was HF.40098

#War against the Pope - Removed, was HF.40099

#The Pope loses and have to abdicate - Removed, was HF.40094

#The Pope wins - Removed, was HF.40095

# TEST SCRIPT
character_event = {
    id = HF.40097
    hide_window = yes
    is_triggered_only = yes
    trigger = {

    }

    immediate = {
        rightful_religious_head_scope = {
            piety = 5000
        }
    }
}

#Setting up Saintly Burial Site in a province
province_event = {
	id = HF.40099
	hide_window = yes
	is_triggered_only = yes
    has_dlc = "Holy Fury"

	immediate = {
		add_province_modifier = {
			name = tomb_of_a_saint
			duration = -1
		}
	}
}

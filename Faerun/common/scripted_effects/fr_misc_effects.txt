barb_legend_raise_tier = {
	if = {
		limit = {
			has_character_modifier = barbarian_legend_0
		}
		add_character_modifier = {
			name = barbarian_legend_1
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_0
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_1
		}
		add_character_modifier = {
			name = barbarian_legend_2
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_1
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_2
		}
		add_character_modifier = {
			name = barbarian_legend_3
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_2
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_3
		}
		add_character_modifier = {
			name = barbarian_legend_4
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_3
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_4
		}
		add_character_modifier = {
			name = barbarian_legend_5
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_4
		}
	}
}

barb_legend_lower_tier = {
	if = {
		limit = {
			has_character_modifier = barbarian_legend_0
		}
		set_character_flag = barb_legend_fail
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_1
		}
		add_character_modifier = {
			name = barbarian_legend_0
			duration = -1
		}
		remove_character_modifier = barbarian_legend_1
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_2
		}
		add_character_modifier = {
			name = barbarian_legend_1
			duration = -1
		}
		remove_character_modifier = barbarian_legend_2
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_3
		}
		add_character_modifier = {
			name = barbarian_legend_2
			duration = -1
		}
		remove_character_modifier = barbarian_legend_3
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_4
		}
		add_character_modifier = {
			name = barbarian_legend_3
			duration = -1
		}
		remove_character_modifier = barbarian_legend_4
	}
}

small_psi_stress = {
	if = {
		limit = {
			has_character_flag = recentpsi
			NOT = { # this means that block fires if the flag has been on for less than the determined time
				had_character_flag = {
					flag = recentpsi
					months = 2 # might bump to 3
				}
			}
		}
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		random_list = {
			1 = {
				set_character_flag = psiupgrade
				med_psi_stress = yes
			}
			3 = {
				if = {
					limit = {
						NOR = {
							has_character_modifier = small_psi_stress
							has_character_modifier = medium_psi_stress
							has_character_modifier = big_psi_stress
						}
					}
					add_character_modifier = {
						name = small_psi_stress
						duration = -1
					}
				}
				else_if = {
					limit = {
						has_character_modifier = big_psi_stress
					}
					random = {
						chance = 20
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = big_psi_stress
						add_trait = stressed
					}
				}
				else_if = {
					limit = {
						has_character_modifier = medium_psi_stress
					}
					random = {
						chance = 35
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = medium_psi_stress
						add_character_modifier = {
							name = big_psi_stress
							duration = -1
						}
					}
				}
				else_if = {
					limit = {
						has_character_modifier = small_psi_stress
					}
					random = {
						chance = 50
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = small_psi_stress
						add_character_modifier = {
							name = medium_psi_stress
							duration = -1
						}
					}
				}
			}
		}
	}
	else = {
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		if = {
			limit = {
				NOR = {
					has_character_modifier = small_psi_stress
					has_character_modifier = medium_psi_stress
					has_character_modifier = big_psi_stress
				}
			}
			add_character_modifier = {
				name = small_psi_stress
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_character_modifier = big_psi_stress
			}
			random = {
				chance = 20
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = big_psi_stress
				add_trait = stressed
			}
		}
		else_if = {
			limit = {
				has_character_modifier = medium_psi_stress
			}
			random = {
				chance = 35
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = medium_psi_stress
				add_character_modifier = {
					name = big_psi_stress
					duration = -1
				}
			}
		}
		else_if = {
			limit = {
				has_character_modifier = small_psi_stress
			}
			random = {
				chance = 50
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = small_psi_stress
				add_character_modifier = {
					name = medium_psi_stress
					duration = -1
				}
			}
		}
	}
}

med_psi_stress = {
	if = {
		limit = {
			NOT = { has_character_flag = psiupgrade }
			has_character_flag = recentpsi
			NOT = { # this means that block fires if the flag has been on for less than the determined time
				had_character_flag = {
					flag = recentpsi
					months = 2 # might bump to 3
				}
			}
		}
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		random_list = {
			1 = {
				big_psi_stress = yes
			}
			3 = {
				if = {
					limit = {
						NOR = {
							has_character_modifier = small_psi_stress
							has_character_modifier = medium_psi_stress
							has_character_modifier = big_psi_stress
						}
					}
					add_character_modifier = {
						name = medium_psi_stress
						duration = -1
					}
				}
				else_if = {
					limit = {
						has_character_modifier = big_psi_stress
					}
					random = {
						chance = 70
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = big_psi_stress
						add_trait = stressed
					}
				}
				else_if = {
					limit = {
						has_character_modifier = medium_psi_stress
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = medium_psi_stress
						add_character_modifier = {
							name = big_psi_stress
							duration = -1
						}
						}
						2 = {
							
						}
					}
				}
				else_if = {
					limit = {
						has_character_modifier = small_psi_stress
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = small_psi_stress
							add_character_modifier = {
								name = big_psi_stress
								duration = -1
							}
						}
						10 = {
							remove_character_modifier = small_psi_stress
							add_character_modifier = {
								name = medium_psi_stress
								duration = -1
							}
						}
					}
				}
			}
		}
	}
	else = {
		clr_character_flag = psiupgrade
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		if = {
			limit = {
				NOR = {
					has_character_modifier = small_psi_stress
					has_character_modifier = medium_psi_stress
					has_character_modifier = big_psi_stress
				}
			}
			add_character_modifier = {
				name = medium_psi_stress
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_character_modifier = big_psi_stress
			}
			random = {
				chance = 70
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = big_psi_stress
				add_trait = stressed
			}
		}
		else_if = {
			limit = {
				has_character_modifier = medium_psi_stress
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = medium_psi_stress
				add_character_modifier = {
					name = big_psi_stress
					duration = -1
				}
				}
				2 = {
					
				}
			}
		}
		else_if = {
			limit = {
				has_character_modifier = small_psi_stress
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = small_psi_stress
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
				10 = {
					remove_character_modifier = small_psi_stress
					add_character_modifier = {
						name = medium_psi_stress
						duration = -1
					}
				}
			}
		}
	}
}

big_psi_stress = {
	if = {
		limit = {
			NOT = { has_character_flag = psiupgrade }
			has_character_flag = recentpsi
			NOT = { # this means that block fires if the flag has been on for less than the determined time
				had_character_flag = {
					flag = recentpsi
					months = 2 # might bump to 3
				}
			}
		}
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		random_list = {
			1 = {
				remove_character_modifier = big_psi_stress
				add_trait = stressed
			}
			3 = {
				if = {
					limit = {
						NOR = {
							has_character_modifier = small_psi_stress
							has_character_modifier = medium_psi_stress
							has_character_modifier = big_psi_stress
						}
					}
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
				else_if = {
					limit = {
						has_character_modifier = big_psi_stress
					}
					remove_character_modifier = big_psi_stress
					add_trait = stressed
				}
				else_if = {
					limit = {
						has_character_modifier = medium_psi_stress
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = medium_psi_stress
							add_trait = stressed
						}
						2 = {
							remove_character_modifier = medium_psi_stress
							add_character_modifier = {
								name = big_psi_stress
								duration = -1
							}
						}
					}
				}
				else_if = {
					limit = {
						has_character_modifier = small_psi_stress
					}
					random_list = {
						33 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = small_psi_stress
							add_trait = stressed
						}
						100 = {
							remove_character_modifier = small_psi_stress
							add_character_modifier = {
								name = big_psi_stress
								duration = -1
							}
						}
					}
				}
			}
		}
	}
	else = {
		clr_character_flag = psiupgrade
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		if = {
			limit = {
				NOR = {
					has_character_modifier = small_psi_stress
					has_character_modifier = medium_psi_stress
					has_character_modifier = big_psi_stress
				}
			}
			add_character_modifier = {
				name = big_psi_stress
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_character_modifier = big_psi_stress
			}
			remove_character_modifier = big_psi_stress
			add_trait = stressed
		}
		else_if = {
			limit = {
				has_character_modifier = medium_psi_stress
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = medium_psi_stress
					add_trait = stressed
				}
				2 = {
					remove_character_modifier = medium_psi_stress
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
			}
		}
		else_if = {
			limit = {
				has_character_modifier = small_psi_stress
			}
			random_list = {
				33 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = small_psi_stress
					add_trait = stressed
				}
				100 = {
					remove_character_modifier = small_psi_stress
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
			}
		}
	}
}


remove_all_classes = {
	remove_trait = wizard
	remove_trait = trained_wizard
	remove_trait = journeyman_wizard
	remove_trait = expert_wizard
	remove_trait = master_wizard
	remove_trait = renowned_wizard
	remove_trait = legendary_wizard
	remove_trait = wiz_abjuration
	remove_trait = wiz_conjuration
	remove_trait = wiz_divination
	remove_trait = wiz_enchantment
	remove_trait = wiz_evocation
	remove_trait = wiz_illusion
	remove_trait = wiz_necromancy
	remove_trait = wiz_transmutation
	clr_character_flag = wizard_init

	remove_trait = sorcerer
	remove_trait = trained_sorcerer
	remove_trait = journeyman_sorcerer
	remove_trait = expert_sorcerer
	remove_trait = master_sorcerer
	remove_trait = renowned_sorcerer
	remove_trait = legendary_sorcerer
	set_variable = { which = sorcspellpoints value = 0 }
	clr_character_flag = sorcspellinit
	remove_character_modifier = sorc_spellpoint_mod
	clr_character_flag = sorcerer_init

	remove_trait = warlock
	remove_trait = trained_warlock
	remove_trait = journeyman_warlock
	remove_trait = expert_warlock
	remove_trait = master_warlock
	remove_trait = renowned_warlock
	remove_trait = legendary_warlock
	remove_trait = warlock_celestial
	remove_trait = warlock_elemental
	remove_trait = warlock_fey
	remove_trait = warlock_fiend
	remove_trait = warlock_old_one
	remove_trait = angered_patron
	clr_character_flag = warlock_init

	remove_trait = bard
	remove_trait = trained_bard
	remove_trait = journeyman_bard
	remove_trait = expert_bard
	remove_trait = master_bard
	remove_trait = renowned_bard
	remove_trait = legendary_bard
	clr_character_flag = bard_init

	remove_trait = class_monk
	remove_trait = trained_monk
	remove_trait = journeyman_monk
	remove_trait = expert_monk
	remove_trait = master_monk
	remove_trait = renowned_monk
	remove_trait = legendary_monk
	clr_character_flag = monk_init

	remove_trait = psion
	remove_trait = trained_psion
	remove_trait = journeyman_psion
	remove_trait = expert_psion
	remove_trait = master_psion
	remove_trait = renowned_psion
	remove_trait = legendary_psion
	clr_character_flag = psion_init

	remove_trait = fighter
	remove_trait = trained_fighter
	remove_trait = journeyman_fighter
	remove_trait = expert_fighter
	remove_trait = master_fighter
	remove_trait = renowned_fighter
	remove_trait = legendary_fighter
	clr_character_flag = fighter_init

	remove_trait = barbarian
	remove_trait = trained_barbarian
	remove_trait = journeyman_barbarian
	remove_trait = expert_barbarian
	remove_trait = master_barbarian
	remove_trait = renowned_barbarian
	remove_trait = legendary_barbarian
	clr_character_flag = barbarian_init

	remove_trait = ranger
	remove_trait = trained_ranger
	remove_trait = journeyman_ranger
	remove_trait = expert_ranger
	remove_trait = master_ranger
	remove_trait = renowned_ranger
	remove_trait = legendary_ranger
	clr_character_flag = ranger_init

	remove_trait = paladin
	remove_trait = trained_paladin
	remove_trait = journeyman_paladin
	remove_trait = expert_paladin
	remove_trait = master_paladin
	remove_trait = renowned_paladin
	remove_trait = legendary_paladin
	remove_character_modifier = oath_of_conquest
	remove_character_modifier = oath_of_devotion
	remove_character_modifier = oath_of_redemption
	remove_character_modifier = oath_of_the_ancients
	remove_character_modifier = oath_of_the_crown
	remove_character_modifier = oath_of_vengeance
	clr_character_flag = paladin_init

	remove_trait = druid
	remove_trait = trained_druid
	remove_trait = journeyman_druid
	remove_trait = expert_druid
	remove_trait = master_druid
	remove_trait = renowned_druid
	remove_trait = legendary_druid
	clr_character_flag = druid_init

	remove_trait = cleric
	remove_trait = trained_cleric
	remove_trait = journeyman_cleric
	remove_trait = expert_cleric
	remove_trait = master_cleric
	remove_trait = renowned_cleric
	remove_trait = legendary_cleric
	clr_character_flag = cleric_init

	remove_trait = rogue
	remove_trait = trained_rogue
	remove_trait = journeyman_rogue
	remove_trait = expert_rogue
	remove_trait = master_rogue
	remove_trait = renowned_rogue
	remove_trait = legendary_rogue
	clr_character_flag = rogue_init

	remove_trait = shadow
	remove_trait = trained_shadow
	remove_trait = journeyman_shadow
	remove_trait = expert_shadow
	remove_trait = master_shadow
	remove_trait = renowned_shadow
	remove_trait = legendary_shadow
	clr_character_flag = shadow_init
}

pick_random_class_effect = {
	custom_tooltip = {
		text = pick_random_class_tp

		hidden_effect = {
			random_list = {
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_wizard
						}
						is_wizard_class_allowed = yes
						z_wizard = no
					}
					modifier = {
						factor = 0.5
						trait = slothful
					}
					modifier = {
						factor = 0.5
						trait = content
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = diligent
							trait = ambitious
						}
					}
					modifier = {
						factor = 2.0
						trait = erudite
					}
					modifier = {
						factor = 2.0
						is_smart_trigger = yes
					}
					modifier = {
						factor = 2.0
						trait = patient
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 3.0
						trait = scholar
					}
					modifier = {
						factor = 3.0
						#government = magocratic_feudal_government
						realm = {
							OR = {
								has_law = succ_magic_elective
								has_law = succ_magic_dynastic
								has_law = succ_magic_wizard
								#has_law = succ_magic_zulkir
							}
						}
					}
					modifier = {
						factor = 3.0
						is_member_of_any_arcane_society_trigger = yes
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_wizard_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_warlock
						}
						is_warlock_class_allowed = yes
						z_warlock = no
					}
					modifier = {
						factor = 2.0
						trait = cynical
					}
					modifier = {
						factor = 0.5
						trait = humble
					}
					modifier = {
						factor = 3.0
						trait = ambitious
					}
					modifier = {
						factor = 0.3
						trait = content
					}
					modifier = {
						factor = 2.0
						is_smart_trigger = yes
					}
					modifier = {
						factor = 2.0
						trait = proud
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 2.0
						trait = mystic
					}
					modifier = {
						factor = 1.5
						trait = wroth
					}
					modifier = {
						factor = 3.0
						#government = magocratic_feudal_government
						realm = {
							OR = {
								has_law = succ_magic_elective
								has_law = succ_magic_dynastic
								has_law = succ_magic_warlock
							}
						}
					}
					modifier = {
						factor = 3.0
						OR = {
							is_member_of_any_zhent_like_society_trigger = yes
							society_member_of = the_satanists
						}
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_warlock_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_sorcerer
						}
						is_sorcerer_class_allowed = yes
						z_sorcerer = no
					}
					modifier = {
						factor = 0.5
						trait = slothful
					}
					modifier = {
						factor = 0.5
						trait = humble
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 3.0
						trait = ambitious
					}
					modifier = {
						factor = 0.3
						trait = content
					}
					modifier = {
						factor = 2.0
						is_smart_trigger = yes
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 2.0
						trait = mystic
					}
					modifier = {
						factor = 1.5
						trait = patient
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = creature_kobold
							trait = creature_dragonborn
						}
					}
					modifier = {
						factor = 3.0
						#government = magocratic_feudal_government
						realm = {
							OR = {
								has_law = succ_magic_elective
								has_law = succ_magic_dynastic
							}
						}
					}
					modifier = {
						factor = 3.0
						is_member_of_any_arcane_society_trigger = yes
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_sorcerer_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_monk
						}
						is_monk_class_allowed = yes
						z_monk = no
					}
					modifier = {
						factor = 3.0
						culture = githzerai
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.2
						trait = slothful
					}
					modifier = {
						factor = 3.0
						trait = patient
					}
					modifier = {
						factor = 2.0
						trait = humble
					}
					modifier = {
						factor = 2.0
						trait = temperate
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = sturdy
							is_strong_trigger = yes
						}
					}
					modifier = {
						factor = 2.5
						trait = zealous
					}
					modifier = {
						factor = 0.1
						trait = cynical
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 2.0
						trait = theologian
					}
					modifier = {
						factor = 2.0
						trait = mystic
					}
					modifier = {
						factor = 0.5
						trait = hedonist
					}
					modifier = {
						factor = 0.5
						trait = gluttonous
					}
					modifier = {
						factor = 0.2
						trait = drunkard
					}
					modifier = {
						factor = 0.1
						OR = {
							trait = one_handed
							trait = one_legged
							trait = grounded
							trait = mangled
							trait = maimed
						}
					}
					modifier = {
						factor = 2.0
						OR = {
							government = divine_feudal_government
							government = theocratic_feudal_government
							government = theocracy_government
							realm = {
								OR = {
									has_law = succ_divine_elective
									has_law = succ_divine_dynastic
								}
							}
						}
					}
					modifier = {
						factor = 3.0
						government = nomadic_tribal_government
					}
					modifier = {
						factor = 3.0
						realm = {
							has_law = succ_divine_monk
						}
					}
					modifier = {
						factor = 3.0
						is_member_of_any_monastic_order_trigger = yes
					}		
					modifier = {
						factor = 1.5
						OR = {
							culture_group = taan_group
							culture_group = shou_group
							culture_group = celestial_sea_group
							culture_group = malatran_group
							culture_group = old_zakharan_group
						}
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_monk_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_psion
						}
						is_psion_class_allowed = yes
						z_psion = no
					}
					modifier = {
						factor = 0.5
						trait = slothful
					}
					modifier = {
						factor = 0.5
						trait = humble
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 3.0
						trait = ambitious
					}
					modifier = {
						factor = 0.3
						trait = content
					}
					modifier = {
						factor = 2.0
						is_smart_trigger = yes
					}
					modifier = {
						factor = 2.0
						trait = proud
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 2.0
						trait = mystic
					}
					modifier = {
						factor = 1.5
						trait = wroth
					}
					modifier = {
						factor = 1.5
						culture_group = chondathan_group
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_psion_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_paladin
						}
						is_paladin_class_allowed = yes
						z_paladin = no
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.2
						trait = slothful
					}
					modifier = {
						factor = 3.0
						trait = patient
					}
					modifier = {
						factor = 2.0
						trait = wroth
					}
					modifier = {
						factor = 2.0
						trait = duelist
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = sturdy
							is_strong_trigger = yes
						}
					}
					modifier = {
						factor = 2.5
						trait = zealous
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = misguided_warrior
							trait = tough_soldier
							trait = skilled_tactician
							trait = brilliant_strategist
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 2.0
						trait = theologian
					}
					modifier = {
						factor = 0.5
						trait = gluttonous
					}
					modifier = {
						factor = 0.2
						trait = drunkard
					}
					modifier = {
						factor = 0.1
						OR = {
							trait = one_handed
							trait = one_legged
							trait = grounded
							trait = mangled
							trait = maimed
						}
					}
					modifier = {
						factor = 2.0
						OR = {
							government = divine_feudal_government
							government = theocracy_government
						}
					}
					modifier = {
						factor = 3.0
						is_member_of_any_knight_order_trigger = yes
					}
					modifier = {
						factor = 1.5
						OR = {
							trait = creature_celestial
							trait = creature_aasimar
						}
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_paladin_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_cleric
						}
						is_cleric_class_allowed = yes
						z_cleric = no
					}
					modifier = {
						factor = 4.0
						trait = zealous
					}
					modifier = {
						factor = 3.0
						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 3.0
						trait = theologian
					}
					modifier = {
						factor = 2.0
						trait = mystic
					}
					modifier = {
						factor = 2.0
						OR = {
							government = divine_feudal_government
							government = theocratic_feudal_government
							government = theocracy_government
						}
					}
					modifier = {
						factor = 2.0
						realm = {
							OR = {
								has_law = succ_divine_elective
								has_law = succ_divine_dynastic
							}
						}
					}
					modifier = {
						factor = 3.0
						realm = {
							has_law = succ_divine_cleric
						}
					}
					modifier = {
						factor = 1.5
						OR = {
							is_member_of_any_knight_order_trigger = yes
							is_member_of_any_monastic_order_trigger = yes
						}
					}		
					add_character_modifier = { name = class_cd years = 3 }
					become_cleric_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_druid
						}
						is_druid_class_allowed = yes
						z_druid = no
					}
					modifier = {
						factor = 4.0
						trait = zealous
					}
					modifier = {
						factor = 3.0
						OR = {
							trait = detached_priest
							trait = martial_cleric
							trait = scholarly_theologian
							trait = mastermind_theologian
						}
					}
					modifier = {
						factor = 2.0
						trait = gardener
					}
					modifier = {
						factor = 2.0
						trait = theologian
					}
					modifier = {
						factor = 2.0
						trait = mystic
					}
					modifier = {
						factor = 2.0
						OR = {
							government = divine_feudal_government
							government = theocratic_feudal_government
							government = theocracy_government
						}
					}
					modifier = {
						factor = 2.0
						realm = {
							OR = {
								has_law = succ_divine_elective
								has_law = succ_divine_dynastic
							}
						}
					}
					modifier = {
						factor = 3.0
						realm = {
							has_law = succ_divine_druid
						}
					}
					modifier = {
						factor = 3.0
						is_member_of_any_druid_society_trigger = yes
					}
					modifier = {
						factor = 1.5
						OR = {
							culture_group = gnome_group
							culture_group = sylvan_elf_group
						}
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_druid_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_fighter
						}
						is_fighter_class_allowed = yes
						z_fighter = no
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.2
						trait = slothful
					}
					modifier = {
						factor = 3.0
						trait = brave
					}
					modifier = {
						factor = 2.0
						trait = wroth
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = sturdy
							is_strong_trigger = yes
						}
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = misguided_warrior
							trait = tough_soldier
							trait = skilled_tactician
							trait = brilliant_strategist
						}
					}
					modifier = {
						factor = 2.0
						trait = duelist
					}
					modifier = {
						factor = 2.0
						trait = strategist
					}
					modifier = {
						factor = 0.1
						OR = {
							trait = one_handed
							trait = one_legged
							trait = grounded
							trait = mangled
							trait = maimed
						}
					}
					modifier = {
						factor = 4.0
						government = nomadic_tribal_government
					}
					modifier = {
						factor = 1.5
						is_member_of_any_knight_order_trigger = yes
					}
					modifier = {
						factor = 3.0
						is_member_of_any_warrior_lodge_trigger = yes
					}	
					add_character_modifier = { name = class_cd years = 3 }
					become_fighter_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_barbarian
						}
						is_barbarian_class_allowed = yes
						z_barbarian = no
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.2
						trait = slothful
					}
					modifier = {
						factor = 3.0
						trait = brave
					}
					modifier = {
						factor = 3.0
						trait = wroth
					}
					modifier = {
						factor = 3.0
						trait = berserker
					}
					modifier = {
						factor = 2.0
						trait = stubborn
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = sturdy
							is_strong_trigger = yes
						}
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = misguided_warrior
							trait = tough_soldier
							trait = skilled_tactician
							trait = brilliant_strategist
						}
					}
					modifier = {
						factor = 2.0
						trait = duelist
					}
					modifier = {
						factor = 2.0
						trait = hunter
					}
					modifier = {
						factor = 0.1
						OR = {
							trait = one_handed
							trait = one_legged
							trait = grounded
							trait = mangled
							trait = maimed
						}
					}
					modifier = {
						factor = 4.0
						government = nomadic_tribal_government
					}
					modifier = {
						factor = 0.25
						is_tribal = no
					}
					modifier = {
						factor = 2.0
						is_member_of_any_warrior_lodge_trigger = yes
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_barbarian_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_ranger
						}
						is_ranger_class_allowed = yes
						z_ranger = no
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.2
						trait = slothful
					}
					modifier = {
						factor = 3.0
						trait = brave
					}
					modifier = {
						factor = 2.0
						trait = temperate
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = sturdy
							is_strong_trigger = yes
						}
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = misguided_warrior
							trait = tough_soldier
							trait = skilled_tactician
							trait = brilliant_strategist
						}
					}
					modifier = {
						factor = 2.0
						trait = duelist
					}
					modifier = {
						factor = 2.0
						trait = hunter
					}
					modifier = {
						factor = 2.0
						trait = gardener
					}
					modifier = {
						factor = 3.0
						realm = {
							has_law = succ_divine_druid
						}
					}
					modifier = {
						factor = 0.1
						OR = {
							trait = one_handed
							trait = one_legged
							trait = grounded
							trait = mangled
							trait = maimed
						}
					}
					modifier = {
						factor = 4.0
						government = nomadic_tribal_government
					}
					modifier = {
						factor = 1.5
						is_member_of_any_warrior_lodge_trigger = yes
					}		
					add_character_modifier = { name = class_cd years = 3 }
					become_ranger_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_bard
						}
						is_bard_class_allowed = yes
						z_bard = no
					}
					modifier = {
						factor = 0.5
						trait = slothful
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.25
						trait = shy
					}
					modifier = {
						factor = 0.2
						trait = disfigured
					}
					modifier = {
						factor = 2.0
						is_smart_non_congenital_trigger = yes
					}
					modifier = {
						factor = 3.0
						trait = socializer
					}
					modifier = {
						factor = 3.0
						trait = gregarious
					}
					modifier = {
						factor = 2.5
						OR = {
							trait = naive_appeaser
							trait = underhanded_rogue
							trait = charismatic_negotiator
							trait = grey_eminence
							trait = amateurish_plotter
							trait = flamboyant_schemer
							trait = intricate_webweaver
							trait = elusive_shadow
						}
					}
					modifier = {
						factor = 0.1
						trait = possessed
					}
					modifier = {
						factor = 3.0
						society_member_of = harpers
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_bard_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_rogue
						}
						is_rogue_class_allowed = yes
						z_rogue = no
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.2
						trait = trusting
					}
					modifier = {
						factor = 0.8
						trait = content
					}
					modifier = {
						factor = 0.6
						trait = just
					}
					modifier = {
						factor = 2.0
						trait = ambitious
					}
					modifier = {
						factor = 2.0
						trait = paranoid
					}
					modifier = {
						factor = 3.0
						trait = deceitful
					}
					modifier = {
						factor = 2.0
						trait = arbitrary
					}
					modifier = {
						factor = 3.0
						OR = {
							trait = amateurish_plotter
							trait = flamboyant_schemer
							trait = intricate_webweaver
							trait = elusive_shadow
						}
					}
					modifier = {
						factor = 3.0
						trait = schemer
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = seducer
							trait = seductress
						}
					}
					modifier = {
						factor = 1.5
						trait = impaler
					}
					modifier = {
						factor = 2.0
						is_smart_non_congenital_trigger = yes
					}
					modifier = {
						factor = 3.0
						OR = {
							is_member_of_any_thieves_guild_trigger = yes
							is_member_of_any_zhent_like_society_trigger = yes
						}
					}
					add_character_modifier = { name = class_cd years = 3 }
					become_rogue_effect = yes
				}
				50 = {
					trigger = {
						trigger_if = {
							limit = { picking_from_class_selection = yes }
							has_character_flag = class_selection_includes_shadow
						}
						is_shadow_class_allowed = yes
						z_shadow = no
					}
					modifier = {
						factor = 2.0
						trait = diligent
					}
					modifier = {
						factor = 0.2
						trait = trusting
					}
					modifier = {
						factor = 0.8
						trait = content
					}
					modifier = {
						factor = 0.6
						trait = just
					}
					modifier = {
						factor = 2.0
						trait = ambitious
					}
					modifier = {
						factor = 2.0
						trait = paranoid
					}
					modifier = {
						factor = 3.0
						trait = deceitful
					}
					modifier = {
						factor = 2.0
						trait = arbitrary
					}
					modifier = {
						factor = 3.0
						OR = {
							trait = amateurish_plotter
							trait = flamboyant_schemer
							trait = intricate_webweaver
							trait = elusive_shadow
						}
					}
					modifier = {
						factor = 3.0
						trait = schemer
					}
					modifier = {
						factor = 2.0
						OR = {
							trait = seducer
							trait = seductress
						}
					}
					modifier = {
						factor = 1.5
						trait = impaler
					}
					modifier = {
						factor = 2.0
						is_smart_non_congenital_trigger = yes
					}
					modifier = {
						factor = 2.0
						OR = {
							is_member_of_any_zhent_like_society_trigger = yes
							is_member_of_any_thieves_guild_trigger = yes
							is_member_of_any_alliance_society_trigger = yes
							is_member_of_any_harper_like_society_trigger = yes
						}
					}	
					add_character_modifier = { name = class_cd years = 3 }
					become_shadow_effect = yes
				}
				fallback = {
					
				}
			}
		}
	}
	
}

pick_martial_class_effect = {
	set_character_flag = class_selection_includes_fighter
	set_character_flag = class_selection_includes_barbarian
	set_character_flag = class_selection_includes_ranger
	pick_random_class_effect = yes
}

pick_arcane_magic_class_effect = {
	set_character_flag = class_selection_includes_wizard
	set_character_flag = class_selection_includes_warlock
	set_character_flag = class_selection_includes_sorcerer
	pick_random_class_effect = yes
}

pick_divine_magic_class_effect = {
	set_character_flag = class_selection_includes_druid
	set_character_flag = class_selection_includes_cleric
	set_character_flag = class_selection_includes_paladin
	pick_random_class_effect = yes
}

pick_stealth_class_effect = {
	set_character_flag = class_selection_includes_bard
	set_character_flag = class_selection_includes_rogue
	set_character_flag = class_selection_includes_shadow
	pick_random_class_effect = yes
}

become_wizard_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_wizard
	}
	else = { add_trait = wizard }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_warlock_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_warlock
	}
	else = { add_trait = warlock }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_sorcerer_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_sorcerer
	}
	else = { add_trait = sorcerer }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_monk_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_monk
	}
	else = { add_trait = class_monk }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_psion_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_psion
	}
	else = { add_trait = psion }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_druid_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_druid
	}
	else = { add_trait = druid }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_cleric_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_cleric
	}
	else = { add_trait = cleric }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_paladin_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_paladin
	}
	else = { add_trait = paladin }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_fighter_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_fighter
	}
	else = { add_trait = fighter }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_barbarian_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_barbarian
	}
	else = { add_trait = barbarian }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_ranger_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_ranger
	}
	else = { add_trait = ranger }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_bard_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_bard
	}
	else = { add_trait = bard }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_rogue_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_rogue
	}
	else = { add_trait = rogue }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_shadow_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_shadow
	}
	else = { add_trait = shadow }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

clear_class_selection_effect = {
	set_variable = { which = local_class_selection_lvl value = 0 }
	clear_flags_with_prefix = class_selection_includes_
}

faerun_first_start_effect = {
	set_global_flag = faerun_started

	character_event = { id = frmaint.2 } # main maintenance event
	character_event = { id = monster.2 } # Monster Mobs and modifiers for all monster provinces
	character_event = { id = frmaint.53 } # permanent faith authority for some faiths
	character_event = { id = frmaint.7 } # Hidden strength initialization
	setup_global_lvlup_thresholds_effect = yes
	setup_arcane_titles_effect = yes
	setup_druidic_titles_effect = yes
	setup_rogue_titles_effect = yes

	# Finish the setup of historical characters
	any_character = {
		limit = { historical = yes }

		character_event = { id = character_trait.2 } # Planetouched subtypes
		character_event = { id = racial_aging.5 } # getting initial age setup for immortals
		character_event = { id = racial_aging.6 } # Lifespan traits
		set_freckles_effect = yes

		# set duration for replacing the adventurer trait with the former_adventurer
		if = {
			limit = { trait = adventurer }
			add_trait_adventurer_effect = yes
		}
	}
}

clear_monster_province_effect = {
	remove_province_modifier = monsters_trolls
	remove_province_modifier = monsters_beholders
	remove_province_modifier = monsters_minotaurs
	remove_province_modifier = monsters_goblins
	remove_province_modifier = monsters_orcs
	remove_province_modifier = monsters_illithids
	remove_province_modifier = monsters_demons
	remove_province_modifier = monsters_frost_giants
	remove_province_modifier = monsters_red_dragons
	remove_province_modifier = monsters_green_dragons
	remove_province_modifier = monsters_black_dragons
	remove_province_modifier = monsters_white_dragons
	remove_province_modifier = monsters_giants
	remove_province_modifier = monsters_ogres
	remove_province_modifier = monsters_gnolls	
}

refresh_immortal_age_effect = {
	if = {
		limit = { immortal = yes }

		if = {
			limit = { trait = longevity }
			set_character_flag = longevity_character
			remove_trait = longevity
		}
		if = {
			limit = { trait = immortal }
			set_character_flag = immortal_character
			remove_trait = immortal
		}
		if = {
			limit = { trait = avatar }
			set_character_flag = avatar_character
			remove_trait = avatar
		}

		trigger_switch = {
			on_trigger = trait
			lifespan_ageless = {
				remove_trait = lifespan_ageless
				add_trait = lifespan_ageless
			}
			lifespan_1000 = {
				remove_trait = lifespan_1000
				add_trait = lifespan_1000
			}
			lifespan_800 = {
				remove_trait = lifespan_800
				add_trait = lifespan_800
			}
			lifespan_600 = {
				remove_trait = lifespan_600
				add_trait = lifespan_600
			}
			lifespan_500 = {
				remove_trait = lifespan_500
				add_trait = lifespan_500
			}
			lifespan_400 = {
				remove_trait = lifespan_400
				add_trait = lifespan_400
			}
			lifespan_350 = {
				remove_trait = lifespan_350
				add_trait = lifespan_350
			}
			lifespan_300 = {
				remove_trait = lifespan_300
				add_trait = lifespan_300
			}
			lifespan_250 = {
				remove_trait = lifespan_250
				add_trait = lifespan_250
			}
			lifespan_200 = {
				remove_trait = lifespan_200
				add_trait = lifespan_200
			}
			lifespan_180 = {
				remove_trait = lifespan_180
				add_trait = lifespan_180
			}
			lifespan_160 = {
				remove_trait = lifespan_160
				add_trait = lifespan_160
			}
			lifespan_150 = {
				remove_trait = lifespan_150
				add_trait = lifespan_150
			}
		}

		if = {
			limit = { has_character_flag = longevity_character }
			clr_character_flag = longevity_character
			add_trait = longevity
		}
		if = {
			limit = { has_character_flag = immortal_character }
			clr_character_flag = immortal_character
			add_trait = immortal
		}
		if = {
			limit = { has_character_flag = avatar_character }
			clr_character_flag = avatar_character
			add_trait = avatar
		}
	}
}

spellplague_random_culture_swap = {
	random_list = {
		10 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = troll
			religion = vaprak
		}
		10 = {
			culture = lizardfolk
			random_list = {
				10 = {
					religion = scale_cult
				}
				4 = {
					religion = abyssal_cult
				}
				2 = {
					religion = primordial
				}
				1 = {
					religion = natural
				}
			}
		}
		10 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			religion = abyssal_cult
			random_list = {
				10 = {
					culture = gnoll
				}
				1 = {
					culture = flind
				}
			}
		}
		2 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = lamia
			random_list = {
				1 = {
					religion = dead_three
				}
				1 = {
					religion = abyssal_cult
				}
				1 = {
					religion = shadow_gods
				}
				1 = {
					religion = church_of_cyric
				}
				1 = {
					religion = infernal
				}
				1 = {
					religion = scale_cult
				}
			}
		}
		2 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = troglodyte
			religion = scale_cult
		}
		6 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = goblin
			religion = goblin_pantheon
		}
		4 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = bugbear
			religion = goblin_pantheon
		}
		6 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			religion = orc_pantheon
			random_list = {
				10 = {
					culture = orc
				}
				4 = {
					culture = orog
				}
				4 = {
					culture = gray_orc
				}
			}
		}
		1 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = baatezu
			religion = infernal
		}
		1 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = tanarri
			religion = abyssal_cult
		}
		3 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = dragonspawn
			religion = tiamat
		}
		5 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = kobold
			random_list = {
				5 = {
					religion = draconic_pantheon
				}
				1 = {
					religion = tiamat
				}
			}
		}
		10 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = ogre
			religion = vaprak
		}
		2 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			random_list = {
				25 = {
					culture = minotaur
				}
				1 = {
					culture = baphitaur
				}
			}
			random_list = {
				1 = {
					religion = abyssal_cult
				}
				1 = {
					religion = infernal
				}
				1 = {
					religion = primordial
				}
			}
		}
		10 = {
			modifier = {
				NOT = { has_province_flag = flood_this }
				factor = 0
			}
			culture = sahuagin
			religion = sekolah
		}
		6 = {
			modifier = {
				NOT = { has_province_flag = flood_this }
				factor = 0
			}
			culture = merrow
			religion = vaprak
		}
		5 = {
			modifier = {
				NOT = { has_province_flag = flood_this }
				factor = 0
			}
			culture = kuo_toa
			religion = abyssal_cult
		}
	}
}

reduce_province_to_tribal = {
	any_province_holding = {
		if = {
			limit = {
				is_capital = no
			}
			destroy_settlement = yes
		}
		else = {
			convert_to = tribal
		}
	}
}

planeshift_landed_ai_characters = {
	any_realm_character = { # to catch them all
		if = {
			limit = {
				OR = {
					tier == BARON
					is_landed = no
				}
			}
			death = { death_reason = death_planes }
		}
		#else = {
		#	if = {
		#		limit = {
		#			ai = no
		#		}
		#		character_event = { id = frstory.94 }
		#	}
		#	else = {
		#		planeshift_landed_ai_characters = yes
		#	}
		#}
	}
	any_demesne_title = {
		if = {
			limit = {
				higher_tier_than = COUNT
			}
			destroy_landed_title = yes
		}
	}
	any_demesne_province = {
		limit = {
			NOT = { is_capital = PREV }
		}
		
		reduce_province_to_tribal = yes
		spellplague_random_culture_swap = yes
		county = {
			create_character = {
				age = 25
				random_traits = yes
				culture = PREV
				religion = PREV
				female = random
				dynasty = random
			}
			new_character = {
				grant_title = PREV
				set_defacto_liege = THIS
			}
		}
	}
	death = { death_reason = death_planes }
	
}

spellplague_change_province = {
	holder_scope = { save_event_target_as = prev_holder }
	save_event_target_as = current_province
	county = { save_event_target_as = current_county }
	if = {
		limit = {
			has_province_flag = flood_this
		}
		holder_scope = {
			character_event = { id = frmaint.65 }
		}
		flooded_effect = yes
	}
	if = {
		limit = {
			has_province_flag = spellplague_me
		}
		holder_scope = {
			character_event = { id = frmaint.66 }
		}
		plaguelands_effect = yes
	}
	if = {
		limit = {
			has_province_flag = underchasm_flag
		}
		holder_scope = {
			character_event = { id = frmaint.68 }
		}
		underchasm_effect = yes
	}
	
}

setup_society_title_scopes_effect = {
	arcane_brotherhood = {
		if = {
			limit = { society_is_active = yes }
			
			set_flag = competitive_society
			save_persistent_event_target = {
				name = society_title_persist
				scope = e_a_brotherhood
			}
			e_a_brotherhood = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	brotherhood_of_true_flame = {
		if = {
			limit = { society_is_active = yes }

			set_flag = competitive_society
			save_persistent_event_target = {
				name = society_title_persist
				scope = e_brotherhood_of_true_flame
			}
			e_brotherhood_of_true_flame = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	black_network = {
		if = {
			limit = { society_is_active = yes }

			set_flag = competitive_society
			save_persistent_event_target = {
				name = society_title_persist
				scope = e_zhentarim
			}
			e_zhentarim = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	shadow_druids = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_shadow_druids
			}
			e_shadow_druids = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	emerald_enclave = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_emerald_enclave
			}
			e_emerald_enclave = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	warlock_knights = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_warlock_knights
			}
			e_warlock_knights = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	shadow_thieves = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_shadow_thieves
			}
			e_shadow_thieves = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
}

setup_arcane_titles_effect = {
	d_enclave = { set_title_flag = arcane_title }
	d_grand_cabal = { set_title_flag = arcane_title }
	k_covenant = { set_title_flag = arcane_title }
	k_windlass = { set_title_flag = arcane_title }
	e_a_brotherhood = { set_title_flag = arcane_title }
	e_brotherhood_of_true_flame = { set_title_flag = arcane_title }
	e_warlock_knights = { set_title_flag = arcane_title }
	d_destroyers = { set_title_flag = arcane_title }
	d_hand_behind_the_mirror = { set_title_flag = arcane_title }
	k_court_of_the_three = { set_title_flag = arcane_title }
}

setup_druidic_titles_effect = {
	k_circle_of_leth = { set_title_flag = druidic_title }
	k_blightlords = { set_title_flag = druidic_title }
	d_dusk_circle = { set_title_flag = druidic_title }
	d_emerald_grove = { set_title_flag = druidic_title }
	e_shadow_druids = { set_title_flag = druidic_title }
	e_emerald_enclave = { set_title_flag = druidic_title }
	d_umber_council = { set_title_flag = druidic_title }
	d_deep_glade = { set_title_flag = druidic_title }
	d_great_oak = { set_title_flag = druidic_title }
	d_wyvern_circle = { set_title_flag = druidic_title }
}
setup_rogue_titles_effect = {
	e_zhentarim = { set_title_flag = rogue_title }
	d_chieftains_in_gold = { set_title_flag = rogue_title }
	d_skeletal_finger = { set_title_flag = rogue_title }
	e_shadow_thieves = { set_title_flag = rogue_title }
	activate_title = { title = e_shadow_thieves status = no }
	d_victorious_blade = { set_title_flag = rogue_title }
	d_citadel_of_assassins = { set_title_flag = rogue_title }
	d_iron_throne = { set_title_flag = rogue_title }
	d_teeth = { set_title_flag = rogue_title }
	d_masquerade = { set_title_flag = rogue_title }
	d_black_watch = { set_title_flag = rogue_title }
	d_bregan_daerthe = { set_title_flag = rogue_title }
}

spawn_random_disease = {
	#have to split into having RIP and not
	if = {
		limit = {
			NOT = { has_dlc = "Reapers" }
		}
		random_list = {
			1 = {
				spawn_disease = tuberculosis
			}
			1 = {
				spawn_disease = typhoid_fever
			}
			1 = {
				spawn_disease = typhus
			}
			1 = {
				spawn_disease = measles
			}
			1 = {
				spawn_disease = small_pox
			}
			1 = {
				spawn_disease = syphilis
			}
		}
	}
	else = {
		random_list = {
			1 = {
				spawn_disease = tuberculosis
			}
			1 = {
				spawn_disease = typhoid_fever
			}
			1 = {
				spawn_disease = typhus
			}
			1 = {
				spawn_disease = measles
			}
			1 = {
				spawn_disease = small_pox
			}
			1 = {
				spawn_disease = syphilis
			}
		}
	}
}

modifier_spreader_effect = {
	if = {
		limit = {
			OR = {
				has_province_flag = plaguelands_spreader_0
				has_province_flag = plaguelands_spreader_1
				has_province_flag = plaguelands_spreader_2
				has_province_flag = plaguelands_spreader_3
			}
		}
		if = {
			limit = {
				has_province_flag = plaguelands_spreader_0
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					is_island = no
					NOT = { has_province_modifier = plaguelands }
				}
				random = {
					chance = 70
					plaguelands_effect = yes
					set_province_flag = plaguelands_spreader_1
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = plaguelands_spreader_1
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					is_island = no
					NOT = { has_province_modifier = plaguelands }
				}
				random = {
					chance = 33
					plaguelands_effect = yes
					set_province_flag = plaguelands_spreader_2
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = plaguelands_spreader_2
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					is_island = no
					NOT = { has_province_modifier = plaguelands }
				}
				random = {
					chance = 15
					plaguelands_effect = yes
					set_province_flag = plaguelands_spreader_3
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = plaguelands_spreader_3
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					is_island = no
					NOT = { has_province_modifier = plaguelands }
				}
				random = {
					chance = 2
					plaguelands_effect = yes
				}
			}
		}
	}
	
	if = {
		limit = {
			OR = {
				has_province_flag = flooded_spreader_0
				has_province_flag = flooded_spreader_1
				has_province_flag = flooded_spreader_2
				has_province_flag = flooded_spreader_3
			}
		}
		if = {
			limit = {
				has_province_flag = flooded_spreader_0
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = flooded_mod }
					NOR = {
						terrain = hills
						terrain = mountain
						terrain = subterranean
						terrain = desert
					}
				}
				random = {
					chance = 70
					flooded_effect = yes
					set_province_flag = flooded_spreader_1
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = flooded_spreader_1
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = flooded_mod }
					NOR = {
						terrain = hills
						terrain = mountain
						terrain = subterranean
						terrain = desert
					}
				}
				random = {
					chance = 33
					flooded_effect = yes
					set_province_flag = flooded_spreader_2
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = flooded_spreader_2
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = flooded_mod }
					NOR = {
						terrain = hills
						terrain = mountain
						terrain = subterranean
						terrain = desert
					}
				}
				random = {
					chance = 15
					flooded_effect = yes
					set_province_flag = flooded_spreader_3
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = flooded_spreader_3
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = flooded_mod }
					NOR = {
						terrain = hills
						terrain = mountain
						terrain = subterranean
						terrain = desert
					}
				}
				random = {
					chance = 2
					flooded_effect = yes
				}
			}
		}
	}
	
	if = {
		limit = {
			OR = {
				has_province_flag = underchasm_spreader_0
				has_province_flag = underchasm_spreader_1
				has_province_flag = underchasm_spreader_2
				has_province_flag = underchasm_spreader_3
			}
		}
		if = {
			limit = {
				has_province_flag = underchasm_spreader_0
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = underchasm }
					port = no
				}
				random = {
					chance = 70
					underchasm_effect = yes
					set_province_flag = underchasm_spreader_1
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = underchasm_spreader_1
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = underchasm }
					port = no
				}
				random = {
					chance = 33
					underchasm_effect = yes
					set_province_flag = underchasm_spreader_2
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = underchasm_spreader_2
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = underchasm }
					port = no
				}
				random = {
					chance = 15
					underchasm_effect = yes
					set_province_flag = underchasm_spreader_3
					modifier_spreader_effect = yes
				}
			}
		}
		else_if = {
			limit = {
				has_province_flag = underchasm_spreader_3
			}
			any_neighbor_province = {
				limit = {
					has_owner = yes
					NOT = { has_province_modifier = underchasm }
					port = no
				}
				random = {
					chance = 2
					underchasm_effect = yes
				}
			}
		}
	}
}

plaguelands_effect = {
	if = {
		limit = {
			holder_scope = {
				NOR = {
					is_undead = yes
					trait = creature_aboleth
				}
			}
		}
		remove_province_modifier = plaguelands
		remove_province_modifier = plaguelands_nerf
		add_province_modifier = {
			name = plaguelands
			duration = -1
		}
	}
	else = {
		remove_province_modifier = plaguelands
		remove_province_modifier = plaguelands_nerf
		add_province_modifier = {
			name = plaguelands_nerf
			duration = -1
		}
	}
}

flooded_effect = {
	if = {
		limit = {
			holder_scope = {
				is_faerun_aquatic_culture = no
			}
		}
		remove_province_modifier = flooded_mod
		remove_province_modifier = flooded_mod_nerf
		add_province_modifier = {
			name = flooded_mod
			duration = -1
		}
	}
	else = {
		remove_province_modifier = flooded_mod
		remove_province_modifier = flooded_mod_nerf
		add_province_modifier = {
			name = flooded_mod_nerf
			duration = -1
		}
	}
}

underchasm_effect = {
	if = {
		limit = {
			holder_scope = {
				is_faerun_subterranean_culture = no
			}
		}
		remove_province_modifier = underchasm
		remove_province_modifier = underchasm_nerf
		add_province_modifier = {
			name = underchasm
			duration = -1
		}
	}
	else = {
		remove_province_modifier = underchasm
		remove_province_modifier = underchasm_nerf
		add_province_modifier = {
			name = underchasm_nerf
			duration = -1
		}
	}
}

elfharrow_effect = {
	location = {
		add_province_modifier = {
			name = elfharrow
			duration = -1
		}
	}
	holder_scope = {
		if = {
			limit = {
				NOT = { has_character_flag = elfharrow_notified }
			}
			set_character_flag = elfharrow_notified
			narrative_event = {
				id = frstory.101
			}
		}
	}
	if = {
		limit = {
			holder_scope = {
				NOR = {
					trait = creature_elf
					trait = creature_centaur
					is_undead = yes
				}
			}
		}
		holder_scope = {
			random_list = {
				7 = {
					create_character = {
						age = 70
						random_traits = yes
						female = random
						religion = elven_pantheon
						culture = green_elf
						dynasty = actually_culture
						immortal_age = 30
					}
				}
				2 = {
					create_character = {
						age = 70
						random_traits = yes
						female = random
						religion = sylvan
						culture = centaur
						dynasty = actually_culture
						immortal_age = 30
					}
				}
			}
			new_character = {
				create_title = {
					tier = DUKE
					name = MIGRATION_HOST
					short_name = yes
					holder = THIS
					landless = yes
					temporary = yes
				}
				if = {
					limit = { culture_group = sylvan_elf_group }
					spawn_unit = {
						province = c_misty_vale
						home = c_misty_vale
						owner = THIS
						leader = THIS
						troops = {
							light_infantry = { 100 100 }
							archers = { 60 60 }
							light_cavalry = { 50 50 }
							mages_troops = { 1 1 }
						}
						match_character = PREV
						match_mult = 0.8
						attrition = 0.4
						maintenance_multiplier = 0
						reinforces = no
						disband_on_peace = yes
						cannot_inherit = yes
						can_toggle_looting = no
					}
				}
				else = {
					spawn_unit = {
						province = c_misty_vale
						home = c_misty_vale
						owner = THIS
						leader = THIS
						troops = {
							light_cavalry = { 130 130 }
							archers = { 60 60 }
							warpriests = { 1 1 }
						}
						match_character = PREV
						match_mult = 0.8
						attrition = 0.4
						maintenance_multiplier = 0
						reinforces = no
						disband_on_peace = yes
						cannot_inherit = yes
						can_toggle_looting = no
					}
				}
				war = {
					target = PREV
					casus_belli = displacement
					thirdparty_title = PREVPREV
				}
			}
		}
	}
}

# Bloodline scope
remove_adopted_bloodline_members_effect = {
	any_bloodline_member = {
		limit = { trait = adopted NOT = { is_bloodline_founder_of = PREV } }

		remove_from_bloodline = PREV
	}
}

add_trait_adventurer_effect = {
	if = {
		limit = { NOT = { trait = adventurer } }

		if = { limit = { trait = former_adventurer } remove_trait = former_adventurer }
		add_trait = adventurer
	}

	# Set/refresh minimum time before the adventurer trait turns into the former_adventurer trait
	hidden_effect = {
		if = { limit = { has_character_modifier = adv_trait_perseverance_modifier } remove_character_modifier = adv_trait_perseverance_modifier }

		if = {
			limit = { has_character_flag = adv_forever  }

			add_character_modifier = { name = adv_trait_perseverance_modifier hidden = yes duration = -1 }
		}
		else = { add_character_modifier = { name = adv_trait_perseverance_modifier hidden = yes years = 5 } }
	}
}

add_trait_adventurer_permanent_effect = {
	set_character_flag = adv_forever
	add_trait_adventurer_effect = yes
}

# Character scope
spawn_extra_fleet_effect = {
	spawn_fleet = {
		province = closest # closest sea zone
		owner = THIS
		disband_on_peace = yes

		troops = {
			galleys = { 200 200 }
		}
	}
}

cancel_pregnancy_fully_effect = {
	if = {
		limit = { is_pregnant = yes }

		hidden_effect = {
			if = { limit = { trait = pregnant } remove_trait = pregnant }
			if = { limit = { trait = pregnancy_finishing } remove_trait = pregnancy_finishing }
			if = { limit = { trait = hard_pregnancy } remove_trait = hard_pregnancy }
			if = { limit = { trait = troubled_pregnancy } remove_trait = troubled_pregnancy }
			if = { limit = { trait = in_hiding } remove_trait = in_hiding }
			if = { limit = { trait = travelling } remove_trait = travelling }
			if = { limit = { has_character_modifier = mother_praying_health } remove_character_modifier = mother_praying_health }
			if = { limit = { has_character_modifier = mother_resting_health } remove_character_modifier = mother_resting_health }
			if = { limit = { has_character_modifier = mother_partying_health } remove_character_modifier = mother_partying_health }
			
			clr_character_flag = mother_asked_retirement 
			clear_flags_with_prefix = flag_mother
			clear_flags_with_prefix = mother_gossip
			clear_flags_with_prefix = mom_hopes

			clear_delayed_event = { id = HFP.20030 }
			clear_delayed_event = { id = HFP.20402 }
			clear_delayed_event = { id = HFP.20557 }
			clear_delayed_event = { id = HFP.20558 }
			clear_delayed_event = { id = HFP.20559 }
			clear_delayed_event = { id = HFP.20560 }
			clear_delayed_event = { id = HFP.20565 }
			clear_delayed_event = { id = HFP.20567 }
			clear_delayed_event = { id = HFP.20587 }
			
			cancel_pregnancy = yes
		}
	}
}

# Title Scope
grant_temp_landless_title_to_PREV_effect = {
	set_title_landless = { title = THIS status = yes }
	grant_title = PREV
	save_event_target_as = temp_landless_title
	c_waterdeep = { location = { province_event = { id = frmaint.73 days = 28 } } }
}

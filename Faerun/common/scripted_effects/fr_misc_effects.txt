barb_legend_raise_tier = {
	if = {
		limit = {
			has_character_modifier = barbarian_legend_0
		}
		add_character_modifier = {
			name = barbarian_legend_1
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_0
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_1
		}
		add_character_modifier = {
			name = barbarian_legend_2
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_1
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_2
		}
		add_character_modifier = {
			name = barbarian_legend_3
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_2
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_3
		}
		add_character_modifier = {
			name = barbarian_legend_4
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_3
		}
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_4
		}
		add_character_modifier = {
			name = barbarian_legend_5
			duration = -1
		}
		hidden_effect = {
			remove_character_modifier = barbarian_legend_4
		}
	}
}

barb_legend_lower_tier = {
	if = {
		limit = {
			has_character_modifier = barbarian_legend_0
		}
		set_character_flag = barb_legend_fail
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_1
		}
		add_character_modifier = {
			name = barbarian_legend_0
			duration = -1
		}
		remove_character_modifier = barbarian_legend_1
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_2
		}
		add_character_modifier = {
			name = barbarian_legend_1
			duration = -1
		}
		remove_character_modifier = barbarian_legend_2
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_3
		}
		add_character_modifier = {
			name = barbarian_legend_2
			duration = -1
		}
		remove_character_modifier = barbarian_legend_3
	}
	else_if = {
		limit = {
			has_character_modifier = barbarian_legend_4
		}
		add_character_modifier = {
			name = barbarian_legend_3
			duration = -1
		}
		remove_character_modifier = barbarian_legend_4
	}
}

small_psi_stress = {
	if = {
		limit = {
			has_character_flag = recentpsi
			NOT = { # this means that block fires if the flag has been on for less than the determined time
				had_character_flag = {
					flag = recentpsi
					months = 2 # might bump to 3
				}
			}
		}
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		random_list = {
			1 = {
				set_character_flag = psiupgrade
				med_psi_stress = yes
			}
			3 = {
				if = {
					limit = {
						NOR = {
							has_character_modifier = small_psi_stress
							has_character_modifier = medium_psi_stress
							has_character_modifier = big_psi_stress
						}
					}
					add_character_modifier = {
						name = small_psi_stress
						duration = -1
					}
				}
				else_if = {
					limit = {
						has_character_modifier = big_psi_stress
					}
					random = {
						chance = 20
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = big_psi_stress
						add_trait = stressed
					}
				}
				else_if = {
					limit = {
						has_character_modifier = medium_psi_stress
					}
					random = {
						chance = 35
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = medium_psi_stress
						add_character_modifier = {
							name = big_psi_stress
							duration = -1
						}
					}
				}
				else_if = {
					limit = {
						has_character_modifier = small_psi_stress
					}
					random = {
						chance = 50
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = small_psi_stress
						add_character_modifier = {
							name = medium_psi_stress
							duration = -1
						}
					}
				}
			}
		}
	}
	else = {
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		if = {
			limit = {
				NOR = {
					has_character_modifier = small_psi_stress
					has_character_modifier = medium_psi_stress
					has_character_modifier = big_psi_stress
				}
			}
			add_character_modifier = {
				name = small_psi_stress
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_character_modifier = big_psi_stress
			}
			random = {
				chance = 20
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = big_psi_stress
				add_trait = stressed
			}
		}
		else_if = {
			limit = {
				has_character_modifier = medium_psi_stress
			}
			random = {
				chance = 35
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = medium_psi_stress
				add_character_modifier = {
					name = big_psi_stress
					duration = -1
				}
			}
		}
		else_if = {
			limit = {
				has_character_modifier = small_psi_stress
			}
			random = {
				chance = 50
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = small_psi_stress
				add_character_modifier = {
					name = medium_psi_stress
					duration = -1
				}
			}
		}
	}
}

med_psi_stress = {
	if = {
		limit = {
			NOT = { has_character_flag = psiupgrade }
			has_character_flag = recentpsi
			NOT = { # this means that block fires if the flag has been on for less than the determined time
				had_character_flag = {
					flag = recentpsi
					months = 2 # might bump to 3
				}
			}
		}
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		random_list = {
			1 = {
				big_psi_stress = yes
			}
			3 = {
				if = {
					limit = {
						NOR = {
							has_character_modifier = small_psi_stress
							has_character_modifier = medium_psi_stress
							has_character_modifier = big_psi_stress
						}
					}
					add_character_modifier = {
						name = medium_psi_stress
						duration = -1
					}
				}
				else_if = {
					limit = {
						has_character_modifier = big_psi_stress
					}
					random = {
						chance = 70
						modifier = {
							factor = 0.8
							trait = journeyman_psion
						}
						modifier = {
							factor = 0.75
							trait = expert_psion
						}
						modifier = {
							factor = 0.7
							trait = master_psion
						}
						modifier = {
							factor = 0.6
							trait = renowned_psion
						}
						modifier = {
							factor = 0.5
							trait = legendary_psion
						}
						remove_character_modifier = big_psi_stress
						add_trait = stressed
					}
				}
				else_if = {
					limit = {
						has_character_modifier = medium_psi_stress
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = medium_psi_stress
						add_character_modifier = {
							name = big_psi_stress
							duration = -1
						}
						}
						2 = {
							
						}
					}
				}
				else_if = {
					limit = {
						has_character_modifier = small_psi_stress
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = small_psi_stress
							add_character_modifier = {
								name = big_psi_stress
								duration = -1
							}
						}
						10 = {
							remove_character_modifier = small_psi_stress
							add_character_modifier = {
								name = medium_psi_stress
								duration = -1
							}
						}
					}
				}
			}
		}
	}
	else = {
		clr_character_flag = psiupgrade
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		if = {
			limit = {
				NOR = {
					has_character_modifier = small_psi_stress
					has_character_modifier = medium_psi_stress
					has_character_modifier = big_psi_stress
				}
			}
			add_character_modifier = {
				name = medium_psi_stress
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_character_modifier = big_psi_stress
			}
			random = {
				chance = 70
				modifier = {
					factor = 0.8
					trait = journeyman_psion
				}
				modifier = {
					factor = 0.75
					trait = expert_psion
				}
				modifier = {
					factor = 0.7
					trait = master_psion
				}
				modifier = {
					factor = 0.6
					trait = renowned_psion
				}
				modifier = {
					factor = 0.5
					trait = legendary_psion
				}
				remove_character_modifier = big_psi_stress
				add_trait = stressed
			}
		}
		else_if = {
			limit = {
				has_character_modifier = medium_psi_stress
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = medium_psi_stress
				add_character_modifier = {
					name = big_psi_stress
					duration = -1
				}
				}
				2 = {
					
				}
			}
		}
		else_if = {
			limit = {
				has_character_modifier = small_psi_stress
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = small_psi_stress
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
				10 = {
					remove_character_modifier = small_psi_stress
					add_character_modifier = {
						name = medium_psi_stress
						duration = -1
					}
				}
			}
		}
	}
}

big_psi_stress = {
	if = {
		limit = {
			NOT = { has_character_flag = psiupgrade }
			has_character_flag = recentpsi
			NOT = { # this means that block fires if the flag has been on for less than the determined time
				had_character_flag = {
					flag = recentpsi
					months = 2 # might bump to 3
				}
			}
		}
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		random_list = {
			1 = {
				remove_character_modifier = big_psi_stress
				add_trait = stressed
			}
			3 = {
				if = {
					limit = {
						NOR = {
							has_character_modifier = small_psi_stress
							has_character_modifier = medium_psi_stress
							has_character_modifier = big_psi_stress
						}
					}
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
				else_if = {
					limit = {
						has_character_modifier = big_psi_stress
					}
					remove_character_modifier = big_psi_stress
					add_trait = stressed
				}
				else_if = {
					limit = {
						has_character_modifier = medium_psi_stress
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = medium_psi_stress
							add_trait = stressed
						}
						2 = {
							remove_character_modifier = medium_psi_stress
							add_character_modifier = {
								name = big_psi_stress
								duration = -1
							}
						}
					}
				}
				else_if = {
					limit = {
						has_character_modifier = small_psi_stress
					}
					random_list = {
						33 = {
							modifier = {
								factor = 0.8
								trait = journeyman_psion
							}
							modifier = {
								factor = 0.75
								trait = expert_psion
							}
							modifier = {
								factor = 0.7
								trait = master_psion
							}
							modifier = {
								factor = 0.6
								trait = renowned_psion
							}
							modifier = {
								factor = 0.5
								trait = legendary_psion
							}
							remove_character_modifier = small_psi_stress
							add_trait = stressed
						}
						100 = {
							remove_character_modifier = small_psi_stress
							add_character_modifier = {
								name = big_psi_stress
								duration = -1
							}
						}
					}
				}
			}
		}
	}
	else = {
		clr_character_flag = psiupgrade
		clr_character_flag = recentpsi
		set_character_flag = recentpsi
		if = {
			limit = {
				NOR = {
					has_character_modifier = small_psi_stress
					has_character_modifier = medium_psi_stress
					has_character_modifier = big_psi_stress
				}
			}
			add_character_modifier = {
				name = big_psi_stress
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_character_modifier = big_psi_stress
			}
			remove_character_modifier = big_psi_stress
			add_trait = stressed
		}
		else_if = {
			limit = {
				has_character_modifier = medium_psi_stress
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = medium_psi_stress
					add_trait = stressed
				}
				2 = {
					remove_character_modifier = medium_psi_stress
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
			}
		}
		else_if = {
			limit = {
				has_character_modifier = small_psi_stress
			}
			random_list = {
				33 = {
					modifier = {
						factor = 0.8
						trait = journeyman_psion
					}
					modifier = {
						factor = 0.75
						trait = expert_psion
					}
					modifier = {
						factor = 0.7
						trait = master_psion
					}
					modifier = {
						factor = 0.6
						trait = renowned_psion
					}
					modifier = {
						factor = 0.5
						trait = legendary_psion
					}
					remove_character_modifier = small_psi_stress
					add_trait = stressed
				}
				100 = {
					remove_character_modifier = small_psi_stress
					add_character_modifier = {
						name = big_psi_stress
						duration = -1
					}
				}
			}
		}
	}
}


remove_all_classes = {
	remove_trait = wizard
	remove_trait = trained_wizard
	remove_trait = journeyman_wizard
	remove_trait = expert_wizard
	remove_trait = master_wizard
	remove_trait = renowned_wizard
	remove_trait = legendary_wizard
	remove_trait = wiz_abjuration
	remove_trait = wiz_conjuration
	remove_trait = wiz_divination
	remove_trait = wiz_enchantment
	remove_trait = wiz_evocation
	remove_trait = wiz_illusion
	remove_trait = wiz_necromancy
	remove_trait = wiz_transmutation
	clr_character_flag = wizard_init

	remove_trait = sorcerer
	remove_trait = trained_sorcerer
	remove_trait = journeyman_sorcerer
	remove_trait = expert_sorcerer
	remove_trait = master_sorcerer
	remove_trait = renowned_sorcerer
	remove_trait = legendary_sorcerer
	set_variable = { which = sorcspellpoints value = 0 }
	clr_character_flag = sorcspellinit
	remove_character_modifier = sorc_spellpoint_mod
	clr_character_flag = sorcerer_init

	remove_trait = warlock
	remove_trait = trained_warlock
	remove_trait = journeyman_warlock
	remove_trait = expert_warlock
	remove_trait = master_warlock
	remove_trait = renowned_warlock
	remove_trait = legendary_warlock
	remove_trait = warlock_celestial
	remove_trait = warlock_elemental
	remove_trait = warlock_fey
	remove_trait = warlock_fiend
	remove_trait = warlock_old_one
	clr_character_flag = warlock_init

	remove_trait = bard
	remove_trait = trained_bard
	remove_trait = journeyman_bard
	remove_trait = expert_bard
	remove_trait = master_bard
	remove_trait = renowned_bard
	remove_trait = legendary_bard
	clr_character_flag = bard_init

	remove_trait = class_monk
	remove_trait = trained_monk
	remove_trait = journeyman_monk
	remove_trait = expert_monk
	remove_trait = master_monk
	remove_trait = renowned_monk
	remove_trait = legendary_monk
	clr_character_flag = monk_init

	remove_trait = psion
	remove_trait = trained_psion
	remove_trait = journeyman_psion
	remove_trait = expert_psion
	remove_trait = master_psion
	remove_trait = renowned_psion
	remove_trait = legendary_psion
	clr_character_flag = psion_init

	remove_trait = fighter
	remove_trait = trained_fighter
	remove_trait = journeyman_fighter
	remove_trait = expert_fighter
	remove_trait = master_fighter
	remove_trait = renowned_fighter
	remove_trait = legendary_fighter
	clr_character_flag = fighter_init

	remove_trait = barbarian
	remove_trait = trained_barbarian
	remove_trait = journeyman_barbarian
	remove_trait = expert_barbarian
	remove_trait = master_barbarian
	remove_trait = renowned_barbarian
	remove_trait = legendary_barbarian
	clr_character_flag = barbarian_init

	remove_trait = ranger
	remove_trait = trained_ranger
	remove_trait = journeyman_ranger
	remove_trait = expert_ranger
	remove_trait = master_ranger
	remove_trait = renowned_ranger
	remove_trait = legendary_ranger
	clr_character_flag = ranger_init

	remove_trait = paladin
	remove_trait = trained_paladin
	remove_trait = journeyman_paladin
	remove_trait = expert_paladin
	remove_trait = master_paladin
	remove_trait = renowned_paladin
	remove_trait = legendary_paladin
	remove_character_modifier = oath_of_conquest
	remove_character_modifier = oath_of_devotion
	remove_character_modifier = oath_of_redemption
	remove_character_modifier = oath_of_the_ancients
	remove_character_modifier = oath_of_the_crown
	remove_character_modifier = oath_of_vengeance
	clr_character_flag = paladin_init

	remove_trait = druid
	remove_trait = trained_druid
	remove_trait = journeyman_druid
	remove_trait = expert_druid
	remove_trait = master_druid
	remove_trait = renowned_druid
	remove_trait = legendary_druid
	clr_character_flag = druid_init

	remove_trait = cleric
	remove_trait = trained_cleric
	remove_trait = journeyman_cleric
	remove_trait = expert_cleric
	remove_trait = master_cleric
	remove_trait = renowned_cleric
	remove_trait = legendary_cleric
	clr_character_flag = cleric_init

	remove_trait = rogue
	remove_trait = trained_rogue
	remove_trait = journeyman_rogue
	remove_trait = expert_rogue
	remove_trait = master_rogue
	remove_trait = renowned_rogue
	remove_trait = legendary_rogue
	clr_character_flag = rogue_init

	remove_trait = shadow
	remove_trait = trained_shadow
	remove_trait = journeyman_shadow
	remove_trait = expert_shadow
	remove_trait = master_shadow
	remove_trait = renowned_shadow
	remove_trait = legendary_shadow
	clr_character_flag = shadow_init
}

pick_random_class_effect = {
	random_list = {
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_wizard
				}
				is_wizard_class_allowed = yes
				z_wizard = no
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 0.5
				trait = content
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = diligent
					trait = ambitious
				}
			}
			modifier = {
				factor = 2.0
				trait = erudite
			}
			modifier = {
				factor = 2.0
				is_smart_trigger = yes
			}
			modifier = {
				factor = 2.0
				trait = patient
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 3.0
				trait = scholar
			}
			modifier = {
				factor = 3.0
				#government = magocratic_feudal_government
				realm = {
					OR = {
						has_law = succ_magic_elective
						has_law = succ_magic_dynastic
						has_law = succ_magic_wizard
						#has_law = succ_magic_zulkir
					}
				}
			}
			modifier = {
				factor = 3.0
				is_member_of_any_arcane_society_trigger = yes
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_wizard_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_warlock
				}
				is_warlock_class_allowed = yes
				z_warlock = no
			}
			modifier = {
				factor = 2.0
				trait = cynical
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 3.0
				trait = ambitious
			}
			modifier = {
				factor = 0.3
				trait = content
			}
			modifier = {
				factor = 2.0
				is_smart_trigger = yes
			}
			modifier = {
				factor = 2.0
				trait = proud
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 2.0
				trait = mystic
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 3.0
				#government = magocratic_feudal_government
				realm = {
					OR = {
						has_law = succ_magic_elective
						has_law = succ_magic_dynastic
						has_law = succ_magic_warlock
					}
				}
			}
			modifier = {
				factor = 3.0
				OR = {
					is_member_of_any_zhent_like_society_trigger = yes
					society_member_of = the_satanists
				}
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_warlock_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_sorcerer
				}
				is_sorcerer_class_allowed = yes
				z_sorcerer = no
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 3.0
				trait = ambitious
			}
			modifier = {
				factor = 0.3
				trait = content
			}
			modifier = {
				factor = 2.0
				is_smart_trigger = yes
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 2.0
				trait = mystic
			}
			modifier = {
				factor = 1.5
				trait = patient
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = creature_kobold
					trait = creature_dragonborn
				}
			}
			modifier = {
				factor = 3.0
				#government = magocratic_feudal_government
				realm = {
					OR = {
						has_law = succ_magic_elective
						has_law = succ_magic_dynastic
					}
				}
			}
			modifier = {
				factor = 3.0
				is_member_of_any_arcane_society_trigger = yes
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_sorcerer_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_monk
				}
				is_monk_class_allowed = yes
				z_monk = no
			}
			modifier = {
				factor = 3.0
				culture = githzerai
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 3.0
				trait = patient
			}
			modifier = {
				factor = 2.0
				trait = humble
			}
			modifier = {
				factor = 2.0
				trait = temperate
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = sturdy
					is_strong_trigger = yes
				}
			}
			modifier = {
				factor = 2.5
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = cynical
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 2.0
				trait = theologian
			}
			modifier = {
				factor = 2.0
				trait = mystic
			}
			modifier = {
				factor = 0.5
				trait = hedonist
			}
			modifier = {
				factor = 0.5
				trait = gluttonous
			}
			modifier = {
				factor = 0.2
				trait = drunkard
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = one_handed
					trait = one_legged
					trait = mangled
					trait = maimed
				}
			}
			modifier = {
				factor = 2.0
				OR = {
					government = divine_feudal_government
					government = theocratic_feudal_government
					government = theocracy_government
					realm = {
						OR = {
							has_law = succ_divine_elective
							has_law = succ_divine_dynastic
						}
					}
				}
			}
			modifier = {
				factor = 3.0
				government = nomadic_tribal_government
			}
			modifier = {
				factor = 3.0
				realm = {
					has_law = succ_divine_monk
				}
			}
			modifier = {
				factor = 3.0
				is_member_of_any_monastic_order_trigger = yes
			}		
			modifier = {
				factor = 1.5
				OR = {
					culture_group = taan_group
					culture_group = shou_group
					culture_group = celestial_sea_group
					culture_group = malatran_group
					culture_group = old_zakharan_group
				}
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_monk_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_psion
				}
				is_psion_class_allowed = yes
				z_psion = no
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 3.0
				trait = ambitious
			}
			modifier = {
				factor = 0.3
				trait = content
			}
			modifier = {
				factor = 2.0
				is_smart_trigger = yes
			}
			modifier = {
				factor = 2.0
				trait = proud
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 2.0
				trait = mystic
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 1.5
				culture_group = chondathan_group
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_psion_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_paladin
				}
				is_paladin_class_allowed = yes
				z_paladin = no
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 3.0
				trait = patient
			}
			modifier = {
				factor = 2.0
				trait = wroth
			}
			modifier = {
				factor = 2.0
				trait = duelist
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = sturdy
					is_strong_trigger = yes
				}
			}
			modifier = {
				factor = 2.5
				trait = zealous
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = misguided_warrior
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 2.0
				trait = theologian
			}
			modifier = {
				factor = 0.5
				trait = gluttonous
			}
			modifier = {
				factor = 0.2
				trait = drunkard
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = one_handed
					trait = one_legged
					trait = mangled
					trait = maimed
				}
			}
			modifier = {
				factor = 2.0
				OR = {
					government = divine_feudal_government
					government = theocracy_government
				}
			}
			modifier = {
				factor = 3.0
				is_member_of_any_knight_order_trigger = yes
			}
			modifier = {
				factor = 1.5
				OR = {
					trait = creature_angel
					trait = creature_aasimar
				}
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_paladin_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_cleric
				}
				is_cleric_class_allowed = yes
				z_cleric = no
			}
			modifier = {
				factor = 4.0
				trait = zealous
			}
			modifier = {
				factor = 3.0
				OR = {
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 3.0
				trait = theologian
			}
			modifier = {
				factor = 2.0
				trait = mystic
			}
			modifier = {
				factor = 2.0
				OR = {
					government = divine_feudal_government
					government = theocratic_feudal_government
					government = theocracy_government
				}
			}
			modifier = {
				factor = 2.0
				realm = {
					OR = {
						has_law = succ_divine_elective
						has_law = succ_divine_dynastic
					}
				}
			}
			modifier = {
				factor = 3.0
				realm = {
					has_law = succ_divine_cleric
				}
			}
			modifier = {
				factor = 1.5
				OR = {
					is_member_of_any_knight_order_trigger = yes
					is_member_of_any_monastic_order_trigger = yes
				}
			}		
			add_character_modifier = { name = class_cd years = 3 }
			become_cleric_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_druid
				}
				is_druid_class_allowed = yes
				z_druid = no
			}
			modifier = {
				factor = 4.0
				trait = zealous
			}
			modifier = {
				factor = 3.0
				OR = {
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
			modifier = {
				factor = 2.0
				trait = gardener
			}
			modifier = {
				factor = 2.0
				trait = theologian
			}
			modifier = {
				factor = 2.0
				trait = mystic
			}
			modifier = {
				factor = 2.0
				OR = {
					government = divine_feudal_government
					government = theocratic_feudal_government
					government = theocracy_government
				}
			}
			modifier = {
				factor = 2.0
				realm = {
					OR = {
						has_law = succ_divine_elective
						has_law = succ_divine_dynastic
					}
				}
			}
			modifier = {
				factor = 3.0
				realm = {
					has_law = succ_divine_druid
				}
			}
			modifier = {
				factor = 3.0
				is_member_of_any_druid_society_trigger = yes
			}
			modifier = {
				factor = 1.5
				OR = {
					culture_group = gnome_group
					culture_group = sylvan_elf_group
				}
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_druid_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_fighter
				}
				is_fighter_class_allowed = yes
				z_fighter = no
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 3.0
				trait = brave
			}
			modifier = {
				factor = 2.0
				trait = wroth
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = sturdy
					is_strong_trigger = yes
				}
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = misguided_warrior
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
			modifier = {
				factor = 2.0
				trait = duelist
			}
			modifier = {
				factor = 2.0
				trait = strategist
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = one_handed
					trait = one_legged
					trait = mangled
					trait = maimed
				}
			}
			modifier = {
				factor = 4.0
				government = nomadic_tribal_government
			}
			modifier = {
				factor = 1.5
				is_member_of_any_knight_order_trigger = yes
			}
			modifier = {
				factor = 3.0
				is_member_of_any_warrior_lodge_trigger = yes
			}	
			add_character_modifier = { name = class_cd years = 3 }
			become_fighter_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_barbarian
				}
				is_barbarian_class_allowed = yes
				z_barbarian = no
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 3.0
				trait = brave
			}
			modifier = {
				factor = 3.0
				trait = wroth
			}
			modifier = {
				factor = 3.0
				trait = berserker
			}
			modifier = {
				factor = 2.0
				trait = stubborn
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = sturdy
					is_strong_trigger = yes
				}
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = misguided_warrior
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
			modifier = {
				factor = 2.0
				trait = duelist
			}
			modifier = {
				factor = 2.0
				trait = hunter
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = one_handed
					trait = one_legged
					trait = mangled
					trait = maimed
				}
			}
			modifier = {
				factor = 4.0
				government = nomadic_tribal_government
			}
			modifier = {
				factor = 0.25
				is_tribal = no
			}
			modifier = {
				factor = 2.0
				is_member_of_any_warrior_lodge_trigger = yes
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_barbarian_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_ranger
				}
				is_ranger_class_allowed = yes
				z_ranger = no
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 3.0
				trait = brave
			}
			modifier = {
				factor = 2.0
				trait = temperate
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = sturdy
					is_strong_trigger = yes
				}
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = misguided_warrior
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
			modifier = {
				factor = 2.0
				trait = duelist
			}
			modifier = {
				factor = 2.0
				trait = hunter
			}
			modifier = {
				factor = 2.0
				trait = gardener
			}
			modifier = {
				factor = 3.0
				realm = {
					has_law = succ_divine_druid
				}
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = one_handed
					trait = one_legged
					trait = mangled
					trait = maimed
				}
			}
			modifier = {
				factor = 4.0
				government = nomadic_tribal_government
			}
			modifier = {
				factor = 1.5
				is_member_of_any_warrior_lodge_trigger = yes
			}		
			add_character_modifier = { name = class_cd years = 3 }
			become_ranger_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_bard
				}
				is_bard_class_allowed = yes
				z_bard = no
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.25
				trait = shy
			}
			modifier = {
				factor = 0.2
				trait = disfigured
			}
			modifier = {
				factor = 2.0
				is_smart_non_congenital_trigger = yes
			}
			modifier = {
				factor = 3.0
				trait = socializer
			}
			modifier = {
				factor = 3.0
				trait = gregarious
			}
			modifier = {
				factor = 2.5
				OR = {
					trait = naive_appeaser
					trait = underhanded_rogue
					trait = charismatic_negotiator
					trait = grey_eminence
					trait = amateurish_plotter
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
			modifier = {
				factor = 0.1
				trait = possessed
			}
			modifier = {
				factor = 3.0
				society_member_of = harpers
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_bard_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_rogue
				}
				is_rogue_class_allowed = yes
				z_rogue = no
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = trusting
			}
			modifier = {
				factor = 0.8
				trait = content
			}
			modifier = {
				factor = 0.6
				trait = just
			}
			modifier = {
				factor = 2.0
				trait = ambitious
			}
			modifier = {
				factor = 2.0
				trait = paranoid
			}
			modifier = {
				factor = 3.0
				trait = deceitful
			}
			modifier = {
				factor = 2.0
				trait = arbitrary
			}
			modifier = {
				factor = 3.0
				OR = {
					trait = amateurish_plotter
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
			modifier = {
				factor = 3.0
				trait = schemer
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
			modifier = {
				factor = 1.5
				trait = impaler
			}
			modifier = {
				factor = 2.0
				is_smart_non_congenital_trigger = yes
			}
			modifier = {
				factor = 3.0
				OR = {
					is_member_of_any_thieves_guild_trigger = yes
					is_member_of_any_zhent_like_society_trigger = yes
				}
			}
			add_character_modifier = { name = class_cd years = 3 }
			become_rogue_effect = yes
		}
		50 = {
			trigger = {
				trigger_if = {
					limit = { picking_from_class_selection = yes }
					has_character_flag = class_selection_includes_shadow
				}
				is_shadow_class_allowed = yes
				z_shadow = no
			}
			modifier = {
				factor = 2.0
				trait = diligent
			}
			modifier = {
				factor = 0.2
				trait = trusting
			}
			modifier = {
				factor = 0.8
				trait = content
			}
			modifier = {
				factor = 0.6
				trait = just
			}
			modifier = {
				factor = 2.0
				trait = ambitious
			}
			modifier = {
				factor = 2.0
				trait = paranoid
			}
			modifier = {
				factor = 3.0
				trait = deceitful
			}
			modifier = {
				factor = 2.0
				trait = arbitrary
			}
			modifier = {
				factor = 3.0
				OR = {
					trait = amateurish_plotter
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
			modifier = {
				factor = 3.0
				trait = schemer
			}
			modifier = {
				factor = 2.0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
			modifier = {
				factor = 1.5
				trait = impaler
			}
			modifier = {
				factor = 2.0
				is_smart_non_congenital_trigger = yes
			}
			modifier = {
				factor = 2.0
				OR = {
					is_member_of_any_zhent_like_society_trigger = yes
					is_member_of_any_thieves_guild_trigger = yes
					is_member_of_any_alliance_society_trigger = yes
					is_member_of_any_harper_like_society_trigger = yes
				}
			}	
			add_character_modifier = { name = class_cd years = 3 }
			become_shadow_effect = yes
		}
		fallback = {
			
		}
	}
}

pick_martial_class_effect = {
	set_character_flag = class_selection_includes_fighter
	set_character_flag = class_selection_includes_barbarian
	set_character_flag = class_selection_includes_ranger
	pick_random_class_effect = yes
}

pick_arcane_magic_class_effect = {
	set_character_flag = class_selection_includes_wizard
	set_character_flag = class_selection_includes_warlock
	set_character_flag = class_selection_includes_sorcerer
	pick_random_class_effect = yes
}

pick_divine_magic_class_effect = {
	set_character_flag = class_selection_includes_druid
	set_character_flag = class_selection_includes_cleric
	set_character_flag = class_selection_includes_paladin
	pick_random_class_effect = yes
}

pick_stealth_class_effect = {
	set_character_flag = class_selection_includes_bard
	set_character_flag = class_selection_includes_rogue
	set_character_flag = class_selection_includes_shadow
	pick_random_class_effect = yes
}

become_wizard_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_wizard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_wizard
	}
	else = { add_trait = wizard }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_warlock_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_warlock
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_warlock
	}
	else = { add_trait = warlock }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_sorcerer_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_sorcerer
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_sorcerer
	}
	else = { add_trait = sorcerer }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_monk_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_monk
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_monk
	}
	else = { add_trait = class_monk }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_psion_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_psion
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_psion
	}
	else = { add_trait = psion }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_druid_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_druid
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_druid
	}
	else = { add_trait = druid }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_cleric_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_cleric
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_cleric
	}
	else = { add_trait = cleric }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_paladin_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_paladin
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_paladin
	}
	else = { add_trait = paladin }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_fighter_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_fighter
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_fighter
	}
	else = { add_trait = fighter }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_barbarian_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_barbarian
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_barbarian
	}
	else = { add_trait = barbarian }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_ranger_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_ranger
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_ranger
	}
	else = { add_trait = ranger }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_bard_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_bard
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_bard
	}
	else = { add_trait = bard }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_rogue_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_rogue
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_rogue
	}
	else = { add_trait = rogue }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

become_shadow_effect = {
	if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 6 } }
		add_trait = legendary_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 5 } }
		add_trait = renowned_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 4 } }
		add_trait = master_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 3 } }
		add_trait = expert_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 2 } }
		add_trait = journeyman_shadow
	}
	else_if = {
		limit = { check_variable = { which = local_class_selection_lvl value = 1 } }
		add_trait = trained_shadow
	}
	else = { add_trait = shadow }

	character_event = { id = frxp.1 }
	hidden_effect = { clear_class_selection_effect = yes }
}

clear_class_selection_effect = {
	set_variable = { which = local_class_selection_lvl value = 0 }
	clear_flags_with_prefix = class_selection_includes_
}

faerun_first_start_effect = {
	set_global_flag = faerun_started

	character_event = { id = frmaint.2 } # main maintenance event
	character_event = { id = monster.2 } # Monster Mobs and modifiers for all monster provinces
	character_event = { id = frmaint.53 } # permanent faith authority for some faiths
	character_event = { id = frmaint.7 } # Hidden strength initialization
	setup_global_lvlup_thresholds_effect = yes
	setup_society_title_scopes_effect = yes
}

clear_monster_province_effect = {
	remove_province_modifier = monsters_trolls
	remove_province_modifier = monsters_beholders
	remove_province_modifier = monsters_minotaurs
	remove_province_modifier = monsters_goblins
	remove_province_modifier = monsters_orcs
	remove_province_modifier = monsters_illithids
	remove_province_modifier = monsters_demons
	remove_province_modifier = monsters_frost_giants
	remove_province_modifier = monsters_red_dragons
	remove_province_modifier = monsters_green_dragons
	remove_province_modifier = monsters_black_dragons
	remove_province_modifier = monsters_white_dragons
	remove_province_modifier = monsters_giants
	remove_province_modifier = monsters_ogres
	remove_province_modifier = monsters_gnolls	
}

refresh_immortal_age_effect = {
	if = {
		limit = { trait = longevity }
		set_character_flag = longevity_character
		remove_trait = longevity
	}
	if = {
		limit = { trait = immortal }
		set_character_flag = immortal_character
		remove_trait = immortal
	}
	if = {
		limit = { trait = avatar }
		set_character_flag = avatar_character
		remove_trait = avatar
	}

	trigger_switch = {
		on_trigger = trait
		creature_drow = {
			remove_trait = creature_drow
			add_trait = creature_drow
		}
		creature_elf = {
			remove_trait = creature_elf
			add_trait = creature_elf
		}
		creature_half_elf = {
			remove_trait = creature_half_elf
			add_trait = creature_half_elf
		}
		creature_feyri = {
			remove_trait = creature_feyri
			add_trait = creature_feyri
		}
		creature_draegloth = {
			remove_trait = creature_draegloth
			add_trait = creature_draegloth
		}
		creature_treant = {
			remove_trait = creature_treant
			add_trait = creature_treant
		}
		creature_hengeyokai = {
			remove_trait = creature_hengeyokai
			add_trait = creature_hengeyokai
		}
		creature_centaur = {
			remove_trait = creature_centaur
			add_trait = creature_centaur
		}
		creature_minotaur = {
			remove_trait = creature_minotaur
			add_trait = creature_minotaur
		}
		creature_dwarf = {
			remove_trait = creature_dwarf
			add_trait = creature_dwarf
		}
		creature_troll = {
			remove_trait = creature_troll
			add_trait = creature_troll
		}
		creature_gnome = {
			remove_trait = creature_gnome
			add_trait = creature_gnome
		}
		creature_hag = {
			remove_trait = creature_hag
			add_trait = creature_hag
		}
		creature_halfling = {
			remove_trait = creature_halfling
			add_trait = creature_halfling
		}
		creature_deep_imaskari = {
			remove_trait = creature_deep_imaskari
			add_trait = creature_deep_imaskari
		}
		creature_illithid = {
			remove_trait = creature_illithid
			add_trait = creature_illithid
		}
		creature_ulitharid = {
			remove_trait = creature_ulitharid
			add_trait = creature_ulitharid
		}
		creature_elder_brain = {
			remove_trait = creature_elder_brain
			add_trait = creature_elder_brain
		}
		creature_aboleth = {
			remove_trait = creature_aboleth
			add_trait = creature_aboleth
		}
		creature_sarrukh = {
			remove_trait = creature_sarrukh
			add_trait = creature_sarrukh
		}
		creature_naga = {
			remove_trait = creature_naga
			add_trait = creature_naga
		}
		creature_lamia = {
			remove_trait = creature_lamia
			add_trait = creature_lamia
		}
		creature_dragon = {
			remove_trait = creature_dragon
			add_trait = creature_dragon
		}
		creature_saurial = {
			remove_trait = creature_saurial
			add_trait = creature_saurial
		}
		creature_sahuagin = {
			remove_trait = creature_sahuagin
			add_trait = creature_sahuagin
		}
		creature_malenti = {
			remove_trait = creature_malenti
			add_trait = creature_malenti
		}
		creature_aasimar = {
			remove_trait = creature_aasimar
			add_trait = creature_aasimar
		}
		creature_fiend = {
			remove_trait = creature_fiend
			add_trait = creature_fiend
		}
		creature_genie = {
			remove_trait = creature_genie
			add_trait = creature_genie
		}
		creature_angel = {
			remove_trait = creature_angel
			add_trait = creature_angel
		}
		creature_construct = {
			remove_trait = creature_construct
			add_trait = creature_construct
		}
		lifespan_giant_stone = {
			remove_trait = lifespan_giant_stone
			add_trait = lifespan_giant_stone
		}
		lifespan_giant_storm = {
			remove_trait = lifespan_giant_storm
			add_trait = lifespan_giant_storm
		}
		lifespan_giant_cloud = {
			remove_trait = lifespan_giant_cloud
			add_trait = lifespan_giant_cloud
		}
		lifespan_giant_fire = {
			remove_trait = lifespan_giant_fire
			add_trait = lifespan_giant_fire
		}
		lifespan_giant_frost = {
			remove_trait = lifespan_giant_frost
			add_trait = lifespan_giant_frost
		}
		lifespan_giant_hill = {
			remove_trait = lifespan_giant_hill
			add_trait = lifespan_giant_hill
		}
		lifespan_earth_titan = {
			remove_trait = lifespan_earth_titan
			add_trait = lifespan_earth_titan
		}
		lifespan_merrow = {
			remove_trait = lifespan_merrow
			add_trait = lifespan_merrow
		}
		elder_orb = {
			remove_trait = elder_orb
			add_trait = elder_orb
		}
	}

	if = {
		limit = { has_character_flag = longevity_character }
		clr_character_flag = longevity_character
		add_trait = longevity
	}
	if = {
		limit = { has_character_flag = immortal_character }
		clr_character_flag = immortal_character
		add_trait = immortal
	}
	if = {
		limit = { has_character_flag = avatar_character }
		clr_character_flag = avatar_character
		add_trait = avatar
	}
}

spellplague_random_culture_swap = {
	random_list = {
		10 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = troll
			religion = vaprak
		}
		10 = {
			culture = lizardfolk
			random_list = {
				10 = {
					religion = scale_cult
				}
				4 = {
					religion = abyssal_cult
				}
				2 = {
					religion = primordial
				}
				1 = {
					religion = natural
				}
			}
		}
		10 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			religion = abyssal_cult
			random_list = {
				10 = {
					culture = gnoll
				}
				1 = {
					culture = flind
				}
			}
		}
		2 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = lamia
			random_list = {
				1 = {
					religion = dead_three
				}
				1 = {
					religion = abyssal_cult
				}
				1 = {
					religion = shadow_gods
				}
				1 = {
					religion = church_of_cyric
				}
				1 = {
					religion = infernal
				}
				1 = {
					religion = scale_cult
				}
			}
		}
		2 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = troglodyte
			religion = scale_cult
		}
		6 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = goblin
			religion = goblin_pantheon
		}
		4 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = bugbear
			religion = goblin_pantheon
		}
		6 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			religion = orc_pantheon
			random_list = {
				10 = {
					culture = orc
				}
				4 = {
					culture = orog
				}
				4 = {
					culture = gray_orc
				}
			}
		}
		1 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = baatezu
			religion = infernal
		}
		1 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = tanarri
			religion = abyssal_cult
		}
		3 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = dragonspawn
			religion = tiamat
		}
		5 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = kobold
			random_list = {
				5 = {
					religion = draconic_pantheon
				}
				1 = {
					religion = tiamat
				}
			}
		}
		10 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			culture = ogre
			religion = vaprak
		}
		2 = {
			modifier = {
				has_province_flag = flood_this
				factor = 0
			}
			random_list = {
				25 = {
					culture = minotaur
				}
				1 = {
					culture = baphitaur
				}
			}
			random_list = {
				1 = {
					religion = abyssal_cult
				}
				1 = {
					religion = infernal
				}
				1 = {
					religion = primordial
				}
			}
		}
		10 = {
			modifier = {
				NOT = { has_province_flag = flood_this }
				factor = 0
			}
			culture = sahuagin
			religion = sekolah
		}
		6 = {
			modifier = {
				NOT = { has_province_flag = flood_this }
				factor = 0
			}
			culture = merrow
			religion = vaprak
		}
		5 = {
			modifier = {
				NOT = { has_province_flag = flood_this }
				factor = 0
			}
			culture = kuo_toa
			religion = abyssal_cult
		}
	}
}

reduce_province_to_tribal = {
	any_province_holding = {
		if = {
			limit = {
				is_capital = no
			}
			destroy_settlement = yes
		}
		else = {
			convert_to = tribal
		}
	}
}

planeshift_landed_ai_characters = {
	any_realm_character = { # to catch them all
		if = {
			limit = {
				OR = {
					tier == BARON
					is_landed = no
				}
			}
			death = { death_reason = death_planes }
		}
		#else = {
		#	if = {
		#		limit = {
		#			ai = no
		#		}
		#		character_event = { id = frstory.94 }
		#	}
		#	else = {
		#		planeshift_landed_ai_characters = yes
		#	}
		#}
	}
	any_demesne_title = {
		if = {
			limit = {
				higher_tier_than = COUNT
			}
			destroy_landed_title = yes
		}
	}
	any_demesne_province = {
		limit = {
			NOT = { is_capital = PREV }
		}
		
		reduce_province_to_tribal = yes
		spellplague_random_culture_swap = yes
		county = {
			create_character = {
				age = 25
				random_traits = yes
				culture = PREV
				religion = PREV
				female = random
				dynasty = random
			}
			new_character = {
				grant_title = PREV
				set_defacto_liege = THIS
			}
		}
	}
	death = { death_reason = death_planes }
	
}

spellplague_change_province = {
	holder_scope = { save_event_target_as = prev_holder }
	save_event_target_as = current_province
	county = { save_event_target_as = current_county }
	if = {
		limit = {
			has_province_flag = flood_this
		}
		add_province_modifier = {
			name = flooded_mod
			duration = -1
		}
	}

	# if held by AI in an AI-only realm
	if = {
		limit = {
			holder_scope = {
				ai = yes
				NOT = { any_realm_lord = { ai = no } }
			}
		}
		reduce_province_to_tribal = yes
		spellplague_random_culture_swap = yes
		county = {
			create_character = {
				age = 25
				random_traits = yes
				culture = PREV
				religion = PREV
				female = random
				dynasty = random
			}
			new_character = {
				grant_title = PREV
				set_defacto_liege = THIS
			}
		}
		event_target:prev_holder = {
			if = {
				limit = {
					is_landed = no
				}
				death = { death_reason = death_spellplague }
			}
		}
	}

	#If either player-held or if a vassal of a player
	else_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = spellplague_character_effects_rule
					value = merciful
				}
			}

			trigger_if = {
				limit = { holder_scope = { ai = no } }
				event_target:current_province = {
					is_capital = no
				}
				has_game_rule = {
					name = spellplague_character_effects_rule
					value = full
				}
			}
		}
		random_list = {
			10 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = troll
					religion = vaprak
					trait = creature_troll
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			10 = {
				create_character = {
					age = 25
					culture = lizardfolk
					religion = scale_cult
					trait = creature_lizardfolk
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = {
					random_list = {
						10 = {
							religion = scale_cult
						}
						4 = {
							religion = abyssal_cult
						}
						2 = {
							religion = primordial
						}
						1 = {
							religion = natural
						}
					}
					save_event_target_as = target_char
				}
			}
			10 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = gnoll
					religion = abyssal_cult
					trait = creature_gnoll
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = {
					random_list = {
						10 = {
							culture = gnoll
						}
						1 = {
							culture = flind
						}
					}
					save_event_target_as = target_char
				}
			}
			2 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = lamia
					religion = dead_three
					trait = creature_lamia
					random_traits = yes
					female = random
					dynasty = culture
				}
				random_list = {
					1 = {
						religion = dead_three
					}
					1 = {
						religion = abyssal_cult
					}
					1 = {
						religion = shadow_gods
					}
					1 = {
						religion = church_of_cyric
					}
					1 = {
						religion = infernal
					}
					1 = {
						religion = scale_cult
					}
				}
				new_character = { save_event_target_as = target_char }
			}
			2 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = troglodyte
					religion = scale_cult
					trait = creature_lizardfolk
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			6 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = goblin
					religion = goblin_pantheon
					trait = creature_goblin
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			4 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = bugbear
					religion = goblin_pantheon
					trait = creature_bugbear
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			6 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = orc
					religion = orc_pantheon
					trait = creature_orc
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = {
					random_list = {
						10 = {
							culture = orc
						}
						4 = {
							culture = orog
						}
						4 = {
							culture = gray_orc
						}
					}
					save_event_target_as = target_char
				}
			}
			1 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = baatezu
					religion = infernal
					trait = creature_fiend
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			1 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = tanarri
					religion = abyssal_cult
					trait = creature_fiend
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			3 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = dragonspawn
					religion = tiamat
					trait = creature_dragonborn
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			5 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = kobold
					religion = draconic_pantheon
					trait = creature_kobold
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = {
					random_list = {
						5 = {
							religion = draconic_pantheon
						}
						1 = {
							religion = tiamat
						}
					}
					save_event_target_as = target_char
				}
			}
			10 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = ogre
					religion = vaprak
					trait = creature_ogre
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			2 = {
				trigger = {
					NOT = { has_province_flag = flood_this }
				}
				create_character = {
					age = 25
					culture = minotaur
					religion = abyssal_cult
					trait = creature_minotaur
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = {
					random_list = {
						25 = {
							culture = minotaur
						}
						1 = {
							culture = baphitaur
						}
					}
					random_list = {
						1 = {
							religion = abyssal_cult
						}
						1 = {
							religion = infernal
						}
						1 = {
							religion = primordial
						}
					}
					save_event_target_as = target_char
				}
			}
			10 = {
				trigger = {
					has_province_flag = flood_this
				}
				create_character = {
					age = 25
					culture = sahuagin
					religion = sekolah
					trait = creature_sahuagin
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			6 = {
				trigger = {
					has_province_flag = flood_this
				}
				create_character = {
					age = 25
					culture = merrow
					religion = vaprak
					trait = creature_ogre
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			5 = {
				trigger = {
					has_province_flag = flood_this
				}
				create_character = {
					age = 25
					culture = kuo_toa
					religion = vaprak
					trait = creature_kuotoa
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
			1 = {
				trigger = {
					has_province_flag = flood_this
				}
				create_character = {
					age = 25
					culture = aboleth
					religion = faithless
					trait = creature_aboleth
					random_traits = yes
					female = random
					dynasty = culture
				}
				new_character = { save_event_target_as = target_char }
			}
		}
		event_target:current_province = {
			capital_holding = {
				event_target:target_char = {
					spawn_unit = {
						province = event_target:current_province
						owner = THIS
						leader = THIS
						troops = {
							light_infantry = { 400 400 }
							heavy_infantry = { 200 200 }
							pikemen = { 300 300 }
							archers = { 400 400 }
						}
						match_settlement = PREV
						match_mult = 1.5
						match_min = 1000
						disband_on_peace = yes
						cannot_inherit = yes
						reinforces = no
						is_looter = no
						attrition = 0
					}
				}
			}
		}
		event_target:target_char = {
			if = {
				limit = {
					location = {
						has_province_modifier = plaguelands
					}
				}
				religion = blue_flame
			}
			create_title = {
				tier = DUKE
				culture = THIS
				name = MONSTER_HOST
				short_name = yes
				temporary = yes
				landless = yes
			}

			if = {
				limit = { culture = baatezu }
				spawn_random_baatezu = yes
			}
			else_if = {
				limit = { culture = tanarri }
				spawn_random_tanarri = yes
			}
		}

		if = {
			limit = {
				independent = yes
			}
			event_target:target_char = {
				war = {
					target = PREV
					casus_belli = displacement
					thirdparty_title = event_target:current_county
				}
			}
		}
		else = {
			top_liege = {
				event_target:target_char = {
					war = {
						target = PREV
						casus_belli = displacement
						thirdparty_title = event_target:current_county
					}
				}
			}
		}
	}
}

setup_society_title_scopes_effect = {
	arcane_brotherhood = {
		if = {
			limit = { society_is_active = yes }
			
			set_flag = competitive_society
			save_persistent_event_target = {
				name = society_title_persist
				scope = e_a_brotherhood
			}
			e_a_brotherhood = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	brotherhood_of_true_flame = {
		if = {
			limit = { society_is_active = yes }

			set_flag = competitive_society
			save_persistent_event_target = {
				name = society_title_persist
				scope = e_brotherhood_of_true_flame
			}
			e_brotherhood_of_true_flame = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	black_network = {
		if = {
			limit = { society_is_active = yes }

			set_flag = competitive_society
			save_persistent_event_target = {
				name = society_title_persist
				scope = e_zhentarim
			}
			e_zhentarim = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	shadow_druids = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_shadow_druids
			}
			e_shadow_druids = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	emerald_enclave = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_emerald_enclave
			}
			e_emerald_enclave = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	warlock_knights = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_warlock_knights
			}
			e_warlock_knights = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
	shadow_thieves = {
		if = {
			limit = { society_is_active = yes }

			save_persistent_event_target = {
				name = society_title_persist
				scope = e_shadow_thieves
			}
			e_shadow_thieves = {
				save_persistent_event_target = {
					name = society_persist
					scope = PREV
				}
			}
		}
	}
}
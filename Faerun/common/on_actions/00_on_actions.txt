#character
on_startup = {
	events = {
		FaerunSorcerer.4 # Assign a sorcerer origin if none is there already
		FaerunSorcerer.5 # reveal origin if hidden
		minorpurg.1
		GR.13 #True cognatic for rule gender = all
		JD.10006 #Save game fix for setting the name of the Chinese empire
		JD.50401 # Set correct value of the Silk Road
		monster.3 # monster trait distribution
		JD.30504 # Clean up living members of the chinese dynasty
		HF.1 # Set up Great Conquerors for Shattered World
		HF.2 # Set up Primogeniture in Shattered World
		HF.5 # Alternate Start General maintenance
		HF.23205 # Altstart Dogmatic/Cosmopolitan effects.
		HF.23035 #Status of Women cleanup for customized religions on Random Start.
		689 # scripted default elective token setup
		HFP.24025 #Enable Eldership for appropriate religions/Doctrines.
		absent.1
		FaerunMercenaries.1000 # maintenance event for pruning male courtiers from enatic mercenary companies
		character_trait.0 # assign creature traits to automatically generated characters
		HF.23778 #Setting up god-emperors on Altstart.
		HFP.11051 # Hidden event to give commanders (who do not have it already) the commander bonus
		LT.32000 # Adding the historical flag to wonders and setting Hagia Sophia cult flag.
		frxp.1 # initializing character's classes
		sorcinit.1
		GR.30 # Generate random families for characters without
		fertility.0 #makes normal-lifespan races infertile after between ages 45-50
		FSC.0003
		dragon_type.1 #Dragon aging
		womenstatusmaint.1
		nomadtribalmaint.2 # Empowers nomad council
		nomadtribalmaint.11 # builds nomad buildings
		nomadtribalmaint.13 # Startup event to enable nomadic succession for nomads
		frmaint.5
		uthgar.0
		frmaint.15
		frtut.16 # Nomadic Tribal Land Demand one time warning
		CM.503 # Start of Viking Age - Heavily repurposed to give shipyards to island realms
		frelections.1 # Merchant Republic periodic elections
		frmaint.28 # lycan court maint
		ADVN.200 #AI ruler assigns adventurer titles
		generalmisc.4 # Add Thayan tattoo.
		frmaint.47 # polyamorous religions have only legit bastards
		dragon_type.3 # Hoard on Startup
		dragon_type.4 # King of Justice gets a free gold dragon courtier
		frmaint.57 # Fill council.
		FaerunMercenaries.1001 # spawn additional female mercenary courtiers
		PATRONS_NEW.3 # set a flag for a fast patron-checking
		frmaint.70
		frmaint.72 # add minion culture modifier to provinces
	}

	effect = {
		if = {
			limit = { NOT = { has_global_flag = faerun_started } } # put here everything that must be resolved first and only once per a campaign

			faerun_first_start_effect = yes
		}
		if = {
			limit = { is_multiplayer_host_character = yes }

			character_event = { id = frmaint.10 days = 1 }

			# title persistent event targets are bugged: they seemingly stop working after loading a save, so we need to reapply them on each start up
			setup_reformed_religion_scope = yes
			setup_society_title_scopes_effect = yes
		}
	}
}

#character
on_yearly_pulse = {
	events = {
		monster.1 # monster culling
		frxp.1 # annual check if a character's class wasn't initialized
		frxp.2 # annual xp gain and lvl-up check
		sorcinit.2 # annual sorcerer spellpoints regen
		generalmisc.14 # annual psion psi stress loss
		HL.1030 # Wolf Child growing older, rumors of real mother being a wolf
		63106 # (Safety flag clearance check event)
		ZE.1100 # Disobedient daughter is unhappy
		ZE.9000 # Ally not contributing in war
		ZE.10000 # Mercenary event tombola
		RIP.11700 # Prosperity system
		RIP.5050 # Scurvy event
		MNM.70030 # Secret society visibility reduction
		JD.20041 # Chinese commander teaching other commanders their leadership trait
		JD.4000 # Character raiding China result events
		GR.23 # Repeat exclave purge for AI's every year if they are at war
		HF.21999 #Main Appease hidden event, no further pulses are required.
		HF.22999 #Main Antagonize hidden event, no further pulses are required.
		HF.3 # Activate GHW's and holy orders when running randomized rel names
		HF.304 # Child of Destiny gains bloodline if above Duke tier
		HFP.44002 # Holy Orders check if their liege, if any, is still fit to rule them
		89000  # Wives fall in love with each other

		# Court maintenance events
		LT.61001 #Add/remove stats
		LT.61002 #Add relationship
		LT.61003 #Add modifiers
		LT.61004 #Add nicknames

		FSC.0003 # Sahuagin aging
		frstory.1 # End of the Five
		dragon_type.1 # Dragon aging
		dragon_type.5 # Dragon grounding
		fr_uprising.1 # Start of Nomad Instability Chain
		ARTF.2 # Regenerating trolls, oni and lucky owners of the right item
		generalmisc.24 # abyssal piety for sins
		frmaint.47 # polyamorous religions have only legit bastards
		frmaint.49 # kill out any health = 0 characters who ain't true immortals
		frmaint.52
		frmaint.57 # Fill council.
		nomadtribalmaint.2 # Empowers nomad council
		nomadtribalmaint.11 # builds nomad buildings
		nomadtribalmaint.13 # enable nomadic succession for nomads
		FaerunMercenaries.1001 # spawn additional female mercenary courtiers
		frstory.100 # Elfharrow
	}

	random_events = {
		# Feudal Life Events
		100 = 4000
		100 = 4005
		100 = 4010
		100 = 4015
		100 = 4020
		100 = 4035
		100 = 4036
		100 = 4040
		100 = 4041
		100 = 4045
		100 = 4050
		100 = 4055
		100 = 4060
		100 = 4085
		100 = 4110
		100 = 4115
		100 = 4120
		100 = 4125
		100 = 4130
		100 = 4135
		100 = 4145
		100 = 4150
		100 = 4155
		100 = 4175

		# Married Life Events
		100 = 30000 # Unhappy marriage, separate bedchambers
		100 = 30001 # Try to divorce spouse
		100 = 30004 # Poisoning stepchildren: Marie of Brabant, Sikelgaita
		100 = 30020 # Accuses spouse of poisoning primary heir
		100 = 30021 # Spouse accuses spouse of poisoning her/him
		100 = 30025 # Homosexual spouse
		100 = 30030 # Spouse in prison: spouse is trying to free her/him
		100 = 30039 # Annoying courtier
		100 = 30045 # Push courtier into river?
		100 = 30050 # Give spouse a gift: jewellery
		100 = 30051 # Give spouse a gift: horse
		100 = 30052 # Give spouse a gift: falcon
		100 = 30055 # Wife offers advice: Diplomacy
		100 = 30056 # Wife offers advice: Martial
		100 = 30057 # Wife offers advice: Stewardship
		100 = 30058 # Wife offers advice: Intrigue
		100 = 30059 # Wife offers advice: Learning
		100 = 30061 # Wife suggests new Chancellor: Start
		100 = 30064 # Wife suggests new Marshal: Start
		100 = 30067 # Wife suggests new Steward: Start
		100 = 30070 # Wife suggests new Spymaster: Start
		100 = 30073 # Wife suggests new Lord Spiritual: Start
		100 = 30075 # Pregnant with courtier: Start
		100 = 30085 # Bored wife
		100 = 30100 # Active sexlife
		100 = 30105 # Wife, suspecting husband is infertile, tries to produce an heir with someone else
		# 100 = 30110 # Wife offers advice - Muslim: Learning # CleanSlate: Merged with event 30059

		# Old Lover Events (Disabled in "Way of Life")
		100 = 64000 # Confronts spouse about lover. Rivalries, lover lost.
		100 = 64005 # Lover is ill. Give comfort.
		100 = 64006 # Wounded lover. Wound removed.
		100 = 64010 # Teenage infatuation starts.
		100 = 64015 # Wife is old and ugly. Take a mistress?
		100 = 64025 # Fallen in love with spouse
		100 = 64030 # Vacation with lover
		100 = 64035 # Party/hunting/nothing with lover
		100 = 64040 # Ruler confronts spouse about lover

		#Job Flavour Events
		100 = 75010
		100 = 75020
		100 = 75030
		100 = 75040
		100 = 75050
		100 = 75060
		100 = 75065
		100 = 75070
		100 = 75075
		100 = 75080
		100 = 75085
		100 = 75090
		100 = 75095
		100 = 75105
		100 = 75110
		100 = 75120

		#Dynasty requests
		#250 = 66000
		250 = 66099 # Landless claimant asks dynasty head to press the claim in a war

		#Hedge Knights Events
		100 = 71000
		100 = 71006

		#Rumours Events
		# 10 = 69000
		# 10 = 69003
		10 = 69010
		10 = 69014
		10 = 69020
		10 = 69023
		10 = 69030
		10 = 69037
		10 = 69040
		10 = 69043
		10 = 69050
		10 = 69052
		10 = 69054
		10 = 69056
		10 = 69058
		10 = 69060
		10 = 69063
		10 = 69070
		10 = 69073
		10 = 69100
		10 = 69095

		#Court Events
		100 = 73000
		100 = 73001
		100 = 73002
		100 = 73003
		100 = 73004
		100 = 73005
		100 = 73006
		100 = 73007
		100 = 73008
		100 = 73009
		100 = 73010

		#Religious Events
		# 100 = 39230

		# Bastard Events
		100 = 76000 # Irresistable young wench
		100 = 76005 # Unwed daughter
		100 = 76010 # Get rid of a bastard?
		100 = 76015 # Recognise bastard son as a legitimate heir?
		100 = 76020 # Bastard son ask to be included in the succession
		100 = 76025 # I have a bastard child
		100 = 76030 # A dream is born and a sword sharpened
		100 = 76035 # I am teased about my inferior status
		100 = 76040 # I'm a bastard, what does that mean?

		#Ward Events
		100 = 78000
		100 = 78005
		100 = 78010
		100 = 78015
		100 = 78018
		100 = 78025
		100 = 78030
		100 = HL.10610

		#Various Events
		100 = TOG.3403
		100 = TOG.3401
		100 = TOG.3402
		100 = 100019
		100 = 100024
		50 = 79007 # Shieldmaiden training event
		150 = 37250 #Wife of same education offers to help
		
		# Reincarnation: Memories of the previous life
		1000 = RoI.10020
		1000 = RoI.10021
		1000 = RoI.10022

		# Way of Life events
		100 = WoL.12506 # Legendary Wisdom
		100 = WoL.12507 # Respected Ruler

		# Hero knight adventure events
		#200 = CM.2010
		200 = CM.2020
		#200 = CM.2100

		# Effects of being in hiding
		100 = CM.6100
		100 = CM.6102
		100 = CM.6104
		100 = CM.6106
		100 = CM.6108
		100 = CM.6110
		100 = CM.6112
		100 = CM.6114
		100 = CM.6116
		100 = CM.6118
		100 = CM.6120
		100 = CM.6122
		100 = CM.6124
		100 = CM.6126
		100 = CM.6128
		100 = CM.6130
		100 = CM.6132

		# Horse Lords Mercenary Events
		300 = HL.10100
		300 = HL.10200
		300 = HL.10210
		300 = HL.10220
		300 = HL.10230
		300 = HL.10240
		300 = HL.10250
		300 = HL.10260
		300 = HL.10270
		300 = HL.10400
		100 = HL.10410
		300 = HL.10500
		300 = HL.10510
		300 = HL.10530
		300 = HL.10600

		# Wolf's Blood events
		100 = HL.1010 # Wolf Child found in woods
		100 = HL.1020 # Child lost in woods and is rescued by wolves
		500 = HL.1200 # Call of the Wolves
		#500 = HL.1300 # The Lost Cub
		150 = HL.1400 # Werewolf first occurrence
		1500 = HL.1401 # Werewolf subsequent occurrences

		300 = HL.1500 # Become cannibal
		300 = HL.1510 # Howl at the moon
		300 = HL.1520 # Hunter instinct strikes unexpectedly (and awkwardly) at court
		300 = HL.1530 # Hunter instincts in martial training (upgrade martial education)
		300 = HL.1540 # Become strong
		300 = HL.1550 # Cunning as a wolf (quick)
		300 = HL.1560 # Animal instincts take over... (lustful)
		300 = HL.1570 # Pack instinct (gregarious)
		300 = HL.1580 # Wolf is brave (brave)
		300 = HL.1590 # Animal cruelty (cruel)
		300 = HL.1610 # Rabid wolf (wroth)
		300 = HL.1620 # Wolf-face (ugly)
		300 = HL.1630 # Animal mind (lower learning trait level)
		300 = HL.1640 # Really howl at the moon! (lunatic)

		# Horse Lords Horse Events
		800 = HL.6010 # Ward can't ride yet
		100 = HL.6020 # Dangerous river crossing - save spouse or favorite horse?
		100 = HL.6030 # A loyal retinue warrior's family have lost their horses to sickness
		100 = HL.6510 # Your horse gets bitten by another horse
		100 = HL.6520 # Foreign portrait painter offers his services

		# Zeus Disobedient Daughter Events
		2000 = ZE.1300 # Disobedient daughter asks to marry lover

		# Zeus Councillor Random Events
		300 = ZE.4000 # Marshal suggests new commander
		300 = ZE.4010 # Marshal wants to do experiments with new weaponry
		200 = ZE.4100 # Marshal on mission turns against liege
		100 = ZE.4120 # Marshal - abuse of office, runs protection racket in province

		#100 = ZE.5000 # Zealous Lord Spiritual asks to go and proselytize among heathens
		200 = ZE.5010 # Zealous Lord Spiritual insists in building more temple holdings, willing to donate own money
		300 = ZE.5020 # Lord Spiritual on mission turns disloyal
		100 = ZE.5030 # Lord Spiritual - abuse of office - charges money from populace for godly favor
		500 = ZE.5040 # Craven or Cynical Lord Spiritual complains about dangerous mission to convert heathens


		100 = ZE.3000 # Steward takes loan to cover up incompetence
		100 = ZE.3002 # Steward makes extra money because of high stewardship
		100 = ZE.3004 # Steward offers to make statue for liege
		100 = ZE.3011 # Steward offers to teach liege

		100 = ZE.2060 # Councillor steals money from the realm coffers

		100 = ZE.2020 # Chancellor tries to teach ruler foreign languages
		100 = ZE.2030 # Chancellor sets up bureaucratic scheme to get hearings with the ruler

		100 = ZE.2070 # Spymaster uses realm spynetwork to blackmail people
		100 = ZE.2075 # Spymaster tries to improve spy defenses

		#Alliance events
		100 = ZE.8000
		100 = ZE.8010
		300 = ZE.9100

		#Favor events
		20 = ZE.8100 # Drank too much and fell
		100 = ZE.8110 # Vassal arguing with spouse
		100 = ZE.23000 # Councillor is Overburden with Work
		100 = ZE.23005 # Troublesome Peasants
		100 = ZE.22300 # Pardon a young noble
		200 = ZE.22400 # Voter saves another voters face at a Council Meeting
		200 = ZE.22500 # Godly voter shows you how to be more pious
		100 = ZE.22600 # Ask foreign voter for help
		200 = ZE.22700 # Give land to an unlanded friend for a favor
		200 = ZE.22800 # Offer to train your Liege's commanders

		#Dynamic mercenary events
		50 = ZE.23150 # Band Leader Speaks Highly of Employer

		#AI secretly convert event
		35 = MNM.3948 # Convert to spouse/friend/province

		#Female councillors
		100 = 77777 # Visit from talented woman
		100 = 77790 # Female relative wants to get on council
		150 = 77760 # Female vassal wants to get on council

		#End of days events
		#50 = RIP.14000

		#Chess with death
		25 = RIP.30220

		#Immortal vassal crisis
		#25 = RIP.30315
		#50 = RIP.30318
		#Immortal rival
		25 = RIP.30300

		#Gamebook
		100 = GBC.1 # Making a friend in mourning

		#Physician Flavor events
		100 = RIP.4010 # Court Physician recommends that you "Take it Easy"
		100 = RIP.4011 # Court Physician gifts you a guide dog
		200 = RIP.4013 # Court Physician suggests fertility treatment
		100 = RIP.4020 # Court Physician Friend teaches you medicine
		100 = RIP.4022 # Court Physician suggests you implement provincial apothecaries (prosperity boost)
		100 = RIP.4030 # Court Physician asks for patronage
		200 = RIP.4040 # Court Physician training event
		# 200 = RIP.4100 # A Physician-Missionary arrives in a Tribal or Nomadic Court (disabled for now)

		#Random Prosperity Increasing Events
		125 = RIP.4300 # Steward suggests building new roads
		125 = RIP.4301 # Lord Spiritual suggests building shrines
		125 = RIP.4302 # Marshal suggests building outposts
		125 = RIP.4303 # Spymaster suggests setting up local messenger stations
		125 = RIP.4304 # Chancellor suggests sponsoring local harvest festivals
		125 = RIP.4305 # You decide upon personally visiting a province

		#Maimed Flavor events
		100 = RIP.29100 # Disfigured events
		100 = RIP.29200 # One-eyed events
		100 = RIP.29300 # One-handed events
		100 = RIP.29400	# One-legged events
		100 = RIP.29450	# Grounded events
		100 = RIP.29511 # Close relation taking care of you

		#Hospital events
		100 = RIP.4501 # Pilgrim physician arrives
		100 = RIP.4504 # Perform charity
		100 = RIP.4512 # Religious heads demand money for hospital presence
		75 = RIP.4514 # Leper arrives at court
		100 = RIP.4520 # Soup kitchen is damaged
		100 = RIP.4530 # Court physician seek learning at hospital

		#Pet events
		100 = 77850 # Cat event tombola
		150 = 77860 # Cat makes you happy
		25 = 6360 #Mittens

		#Monks and Mystics events
		100 = MNM.9000 # Artifact rumor
		100 = MNM.3910 # Commission painting
		30 = MNM.7829 # AI-only disciple recruitment

		#Artifact events
		# 500 = MNM.9816 # Blessed Mantle allows you to make Water of the Blessed Mantle (-> logic)

		#Jade Dragon events
		150 = JD.20000 # Visit by Chinese councilor
		150 = JD.30000 # Traders acting dishonest
		150 = JD.10009 # Courtier offers to visit the Western Protectorate
		200 = JD.30010 # Courtier from Chinese court compliments/berates
		25 = JD.60000 # Envoy from China offers trade for artifacts
		150 = JD.70000 # Escaped Chinese Noble
		200 = JD.10030 # Gifted refugee appears
		150 = JD.7000 # Chinese Teacher visits
		#150 = JD.7010 # Radhanite Merchant asks for money

		20 = JD.2100 # Chance of Religious Liberation CB

		#150 = JD.4100

		# Holy Fury Flavor
		200 = HFP.1 # Giant-trait character gains Feeble or Brawny
		200 = HFP.4 # Giant-trait character gets health problems
		100 = HFP.30000 # Family member confronts you about your drinking
		20 = HFP.30010 # Giant-trait character keeps hitting their head on doorways
		100 = HFP.30020 # Court Physician offers you a potion that might stop you being depressed
		# 10 = HFP.30100 # Meteorite Falls

		# Holy Fury Bloodline Events
		350 = HF.110 # Gain Sympathy for Founder religion
		200 = HF.120 # Chance of gaining a personality trait of Founder
		300 = HF.43000 # Chance for zealots to help aid your cause
		200 = HF.43200 # Chance for Great Theologian to join your Court
		150 = HF.43300 # Frenzied zealots at your capital

		# Trans-Saharan Trade Post Events
		#75 = HFP.80000 # Gold Rush!
		#100 = HFP.80010 # Gold mine depleted
		#100 = HFP.80020 # Gold inflation in province

		# Former MTTH Events
		# Varangian events moved to tombola in HFP.19102...

		#Wonder Flavor Events
		100 = LT.20001 # Lost Book event chain,
		100 = LT.60101 # Library lets you write cooler book
		100 = LT.60301 # Tavern lets you blow off stress
		100 = LT.60501 # Opinion boost from your liege if you have a wonder in your province
		100 = LT.60601 # A part of the wonder has fallen off!
		100 = LT.60701 # Chance to pick some cool herbs

		# Court events
		100 = LT.61006 # Decide nickname (court maintenance)
		150 = LT.10103 # Courtiers praise your hospitality

		5000 = 0 # Chance of no yearly event

		#Faerunian events
		500 = triad.1 # Triadic reject sin ambitions
		500 = generalmisc.28 # Joyful reject sin ambitions
		500 = generalmisc.30 # Muhjari reject sin ambitions

		150 = WAR_HELP_OFFERS.1 # Get help fighting your war

		500 = aberrationevt.3
		250 = aberrationevt.5
		5 = aberrationevt.6

		10 = frwerebeast.1 # Random infection via attack
		10 = frvamp.1 # Random infection via attack

		50 = frmeltpot.2 # borderer spreads

		50 = frwerebeast.14 # Lycanthrope found by accident
		50 = frvamp.5 # Vampire found by accident

		#vampire events to twist their personality
		500 = frvamp.28
		500 = frvamp.29
		500 = frvamp.30
		500 = frvamp.31
		500 = frvamp.32
		500 = frvamp.33
		500 = frvamp.34
		500 = frvamp.35
		500 = frvamp.36
		500 = frvamp.37
		500 = frvamp.38
		500 = frvamp.39
		500 = frvamp.40
		500 = frvamp.41
		500 = frvamp.42
		500 = frvamp.43

		friends_rivals_adults = {
			delay = 36
			20000 = 0

			1500 = 100050 # A girl at court is very flirtatious and seems to get away with everything... - Formerly 80 month MTTH
			# 1500 = 100105 # Crusaders becomes friends/rivals - Formerly 80 month MTTH
			1500 = 100110 # Learn from the best (and take his job)
			1500 = 100115 # Sharing the wonders of childbearing has made you a new friend - Formerly 80 month MTTH
			1500 = 100160 # I'm at war and need help! - Formerly 80 month MTTH
			1500 = 100180 # My friend is a heretic/infidel! - Formerly 80 month MTTH
			1500 = 100190 # My friend is a much better diplomat than me, ask for help? - Formerly 80 month MTTH
			1500 = 100200 # My friend has much better martial stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100210 # My friend has much better stewardship stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100220 # My friend has much better intrigue stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100230 # My friend has much better learning stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100550 # My friend has much better learning stats than me, ask for help? Muslim - Formerly 80 month MTTH
			1250 = 100520 # Poison rival during liege's feast - Formerly 100 month MTTH
			1000 = 100150 # Friend at war - send help? - Formerly 120 month MTTH
			750 = 100240 # My friend is celibate - Formerly 200 month MTTH
			750 = 100250 # My friend is a hedonist - Formerly 200 month MTTH
			750 = 100260 # My friend is a scholar - Formerly 200 month MTTH
			750 = 100400 # My friend's rival tried to kill/maim/wound him/her! - Formerly 200 month MTTH
			750 = 100420 # Accuse rival of cheating in tournament - Formerly 200 month MTTH
			500 = 100170 # My friend's friend is my friend - Formerly 240 month MTTH
			350 = 100440 # Your fierce rival has embraced heretical ways - Formerly 300 month MTTH
			350 = 100450 # Make your liege distrust your rival - Formerly 300 month MTTH
			# 350 = 100460 # My rival is homosexual! - Formerly 300 month MTTH (Not a big deal in Faerun)
			350 = 100470 # A rival of yours is so much beneath you that it seems a bit silly of you to hold him as an enemy - Formerly 300 month MTTH
			350 = 100480 # Your rivalry to your liege is straining your commitment to your feudal duties  - Formerly 300 month MTTH
			350 = 100510 # Root tries to wound rival during hunt  - Formerly 300 month MTTH
			100 = 100530 # Revenge seeker seeks revenge - Formerly 500 month MTTH
			100 = 100540 # Son seeks revenge for his father - Formerly 500 month MTTH
			50 = 100350 # I don't recognize my friend anymore, I don't know if we really are friends... - Formerly 1000 month MTTH
			25 = 100410 # I ask permission to challenge my rival into a duel - Formerly 1500 month MTTH
		}

		health = {
			delay = 15
			25000 = 0

			15 = 6000 # Syphilitic
			12 = 6001 # Remove Syphilitic
			12 = 6010 # Leper
			12 = 6011 # Remove Leper
			6 = 6020 # Lunatic
			25 = 6021 # Remove Lunatic
			20 = 6030 # Possessed
			20 = 6031 # Remove Possessed
			150 = 6040 # Stressed
			250 = 6041 # Remove Stressed
			25 = 6050 # Depressed
			250 = 6051 # Remove Depressed
			833 = 6063 # Meta ill
			#30 = 6080 # Wounded
			1250 = 6082 # Illness from wound
			250 = 6100 # Infirm
			2500 = 6110 # Incapable
		}

		# demon_child_magic = {
		# 	delay = 17
		# 	1000 = 0
		# 	1000 = SoA.3050 # Demon Child recovers from maiming
		# 	1000 = SoA.3051 # Demon Child recovers from blinding
		# 	1000 = SoA.3052 # Demon Child recovers from castration
		# 	1000 = SoA.3053 # Demon Child recovers from brain damage
		# 	1000 = SoA.3060 # Demon Child escapes from prison
		# }

		ambition_events = {
			delay = 60
			220 = 0

			50 = 94001
			50 = 94011
			50 = 94126

			10 = 94000
			10 = 94005
			10 = 94010
			10 = 94016
			10 = 94017
			10 = 94018
			10 = 94050
			10 = 94065
			10 = 94070
			10 = 94072
			10 = 94073
			10 = 94074
			10 = 94080
			10 = 94098
			10 = 94100
			10 = 94102
			10 = 94107
			10 = 94108
			10 = 94109
			10 = 94110
			10 = 94125
			10 = 94130
			10 = 94138
			10 = 94139
			10 = 94156
			10 = 94140
			10 = 94160
			10 = 94165
			10 = 94169
			10 = 94172
			10 = 94173
			10 = 94170
			10 = 94175
			10 = 94180
			10 = 94185
			10 = 94186
			10 = 94187
 		}

		yearly_child_of_destiny_chance = {
			9999 = 0
			1 = HF.199
		}
		regency_events = {
			delay = 23
			10000 = 0

			430 = 61000 # Regent embezzles money
			320 = 61100 # Regent steals holding
			430 = 61105 # Regent gives Ruler's money to charity
			670 = 61110 # Regent is a better administrator
			320 = 61120 # Regent humiliates Ruler
			320 = 61135 # Ruler, if child, kills Regent
			350 = 61140 # Regent attempts to declare ruler insane when he's not
			500 = 61141 # Regent attempts to declare ruler insane
			670 = 61165 # Ruler escapes from tower
			750 = 61190 # Regent sends ruler to scrub roof
			250 = 61215 # Courtier thinks he/she would do a better job than current Regent
			500 = 61237 # Queen takes over regency
			#500 = 61237 # Queen Mother takes over regency
		}

		# Old Lover Events (Disabled in "Way of Life")
		lover_events = {
			delay = 45

			400 = 0

			15 = 64000 # Confronts spouse about lover. Rivalries, lover lost.
			15 = 64005 # Lover is ill. Give comfort.
			15 = 64006 # Wounded lover. Wound removed.
			15 = 64010 # Teenage infatuation starts.
			15 = 64015 # Wife is old and ugly. Take a mistress?
			15 = 64025 # Fallen in love with spouse
			15 = 64030 # Vacation with lover
			15 = 64035 # Party/hunting/nothing with lover
			15 = 64040 # Ruler confronts spouse about lover

			 90 = 64045 # You have lost that loving feeling
			100 = 64050 # Infatuation turned into love?
			100 = 64055 # Child has teenage_infatuation with courtier
			100 = 64060 # Loving a married woman is being quite a pain to your soul
			 95 = 64065 # This kind of unsatisfying relationship to a married woman is really becoming irksome to you
			200 = 64070 # Seeing someone else behind your spouse's back is becoming quite troublesome for you
			 70 = 64075 # You are having a special occasion with your lover in the near future, but your wife is insistent on alternate plans
			 65 = 64080 # Your wife has retired to the convent for a short while
			100 = 64085 # Two adult character are lovers and neither is married
			100 = 64090 # Childless marriage
			100 = 64100 # Your lover is eager to comfort you after you have had a particularly fiery row with your wife
			 33 = 64110 # Your spouse has grown suspicious of your behaviour
			 25 = 64115 # Lover thinks you love spouse more than him/her
			 33 = 64120 # Your spouse has made your adulterous affair public
			 33 = 64125 # Your wife has humiliated you publicly by too open association with her lover
			 50 = 64130 # Being married to someone you love is a blissful state
			 15 = 64135 # You want to give a special surprise to your loved one, what shall it be?
			 10 = 64140 # Being separated from your love by the needs of war is heart-aching
		}

		oldgods_adventurers = {
			970 = 0

			20 = TOG.1200
			10 = TOG.1210
		}

		courtiers_adventurers = {
			delay = 90
			
			600 = 0
			100 = faerun_ruler_events.1
		}

		courtier_liege_romance = {
			delay = 80

			900 = 0
			100 = 449 # A courtier initiates romance with their liege
		}

	}
}


#character
on_bi_yearly_pulse = {
	events = {
		frmaint.3
		frmaint.4
		fr_uprising.10 # revolt against players hoarding titles
		TOG.3005 # Lose Berserker Trait when too old
		WARL.4 # Pact boon selection for AIs warlocks
		wizinit.3 # Assign wizard specialization for AIs
		PATRONS_NEW.2 # Patron selection for AIs
		ADVN.200 #AI ruler assigns adventurer titles
		RIP.30316 # clean up immortal crisis
		minorpurg.2 #alien culture leaves occupied province
		frmaint.45 # clear monk modifiers if incapable
		frimmortal.1 # vampire hunter
	}


	random_events = {

		#Various Traits Events
		10 = 65000
		10 = 65001
		10 = 65003
		10 = 65005
		10 = 65007
		10 = 65009
		10 = 65166
		10 = 65011
		10 = 65020
		10 = 65021
		10 = 65022
		10 = 65023
		10 = 65030
		10 = 65031
		10 = 65032
		10 = 65033
		10 = 65034
		10 = 65035
		10 = 65036
		10 = 65037
		10 = 65040
		10 = 65041
		10 = 65042
		10 = 65043
		10 = 65165
		10 = 65044
		10 = 65045
		10 = 65048
		10 = 65049
		10 = 65050
		10 = 65051
		10 = 65052
		10 = 65053
		10 = 65055
		10 = 65057
		10 = 65060
		10 = 65061
		10 = 65065
		10 = 65070
		10 = 65071
		10 = 65072
		10 = 65074
		10 = 65080
		10 = 65081
		10 = 65085
		10 = 65090
		10 = 65095
		10 = 65100
		10 = 65101
		10 = 65102
		10 = 65105
		10 = 65106
		10 = 65107
		10 = 65110
		10 = 65115
		10 = 65120
		10 = 65125
		10 = 65126
		10 = 65130
		10 = 65135
		10 = 65140
		10 = 65145
		10 = 65150
		10 = 65155
		10 = 65160

		#Seven Virtues
		10 = 3020
		#10 = 3021
		10 = 3022
		10 = 3025
		10 = 3026
		10 = 3030
		10 = 3035
		10 = 3012
		10 = 3013
		10 = 3095
		10 = 3080
		10 = 3081
		10 = 3082
		10 = 3083
		10 = 3084
		10 = 3085
		10 = 3120
		10 = 3121
		10 = 3123
		10 = 3124
		10 = 3125
		10 = 3126
		10 = 3200
		10 = 3202
		10 = 3203
		10 = 3205
		10 = 3240
		10 = 3242
		10 = 3243
		10 = 3245
		10 = 3246
		10 = 3247
		10 = 3248
		10 = 3258
		10 = 3160
		#10 = 3165 - deleted
		10 = 3170
		10 = 3175

		#Seven Deadly Sins
		10 = 3000
		10 = 3001
		10 = 3005
		10 = 3010
		10 = 3011
		10 = 3040
		10 = 3045
		10 = 3050
		10 = 3055
		10 = 3060
		10 = 3065
		10 = 3070
		10 = 3075
		10 = 3100
		10 = 3105
		10 = 3110
		10 = 3115
		10 = 3180
		10 = 3185
		10 = 3190
		10 = 3195
		10 = 3140
		10 = 3141
		10 = 3142
		10 = 3143
		10 = 3144
		10 = 3145
		10 = 3220
		10 = 3225
		10 = 3230
		10 = 3235


		#Misc Traits, Paranoid, Honest,Gregagrious, Craven
		10 = 3480
		10 = 3485
		10 = 3490
		10 = 3495
		10 = 3280
		10 = 3282
		#10 = 3283
		10 = 3710
		10 = 3715
		10 = 3720
		10 = 3725
		10 = 3300
		10 = 3305
		10 = 3310
		10 = 3315


		#Deceitful
		10 = 3260
		10 = 3261
		10 = 3262
		10 = 3263


		#Lifestyle events
		10 = 3520
		10 = 3525
		10 = 3530
		10 = 3535
		10 = 3540
		10 = 3543
		10 = 3546
		10 = 3550
		10 = 3555
		10 = 3560
		10 = 3563
		10 = 3568
		10 = 3570
		10 = 3575
		10 = 3585
		10 = 3590
		10 = 3593
		10 = 3600
		10 = 3605
		10 = 3610
		10 = 3615
		10 = 3620
		10 = 3625
		10 = 3630
		10 = 3635
		10 = 3640
		10 = 3645
		10 = 3650
		10 = 3655
		10 = 3660
		10 = 3665
		10 = 3675
		10 = 3680
		10 = 3685
		10 = 3690
		10 = 3700

		20 = TOG.3009

		200 = frmeltpot.1 # Borderer trigger

		2000 = 0 # Chance of no bi-yearly event
		
		5 = generalmisc.54 # Cyrinishad wants you to read it.
		
		10 = frplots.1 # Maskarran steal artifact plot firing


		muslim_sultan_honorary_titles = {
			delay = 7

			100 = 0

			120 = 104999 # Woman asks Chief Qadi for a divorce
			150 = 105009 # Suggest a Chief Qadi
			140 = 105019 # Suggest a new Chief Qadi
			 70 = 105029 # Chief Qadi and the drunkard
			200 = 105049 # Court Calligrapher is asked to decorate the mosque
			 50 = 105059 # Court Calligrapher created fine Hilya
			 50 = 105064 # Court Calligrapher: Golden Qu'ran
			100 = 105149 # Cupbearer: Poison Host
			100 = 105249 # Food Taster: Poison host
			100 = 105074 # Court Musician presents a song for the liege/liege's spouse
			100 = 105099 # Court Poet writes poem
		}

		polygamy_events = {
			delay = 69

			600 = 0

			80 = 89004 # Secondary Wife thinks she should be First Wife
			175 = 89014 # First Wife thinks her son should get a county if he is not heir
			100 = 89019 # Secondary Wife plots to kill heir
			50 = 89029 # Evil wife plots to kill sons who aren't hers
		}

		patron_change_events = {
			delay = 44

			100 = 0
			100 = PATRONS_NEW.1
		}
	}
}

#character
on_five_year_pulse = {
	events = {
		GR.1
		MNM.10030 # Have AI characters join societies
		MNM.4453 # Have AI characters join monastic societies
		fertility.0 #makes normal-lifespan races infertile after between ages 45-50
		HFP.20604 # Hidden check for physique_variable
		HF.99 # Legendary warrior arrives
		HF.10050 # Warrior Lodges: Maintenance: AIs joins available warrior lodges
		HF.21997 #AI picks Antagonizing target.
		HF.21998 #AI picks Swaying target.
		HF.24129 # Knights and Bards arrive.
		HF.24132 # Lady seeks protection.
		HF.24236 # Artists arrive.
		FCE.0011 # Republic vassal gets notified of long reigning liege
		rlg_chg.10 #Apply or strip diversity modifiers
		PATRONS_NEW.3 # set a flag for a fast patron-checking
		frmaint.72 # add minion culture modifier to provinces
		ADVN.103 # Lose adventurer trait, gain former adventurer
	}

	random_events = {
		#----  misc traits needing revision below...



		#Brave
		10 = 3320
		10 = 3325
		10 = 3330
		10 = 3335
		10 = 3740

		#Shy
		10 = 3340
		10 = 3345
		10 = 3350
		10 = 3355

		#Ambitious
		10 = 3360
		10 = 3365
		10 = 3370
		10 = 3375
		10 = 3371

		#Content
		10 = 3380
		10 = 3385
		10 = 3390
		10 = 3395
		10 = 3745

		#Arbitrary
		10 = 3400
		10 = 3405
		10 = 3410
		10 = 3415
		10 = 3411

		#Just
		10 = 3420
		10 = 3425
		10 = 3430
		10 = 3435

		#Cynical
		10 = 3440
		10 = 3445
		10 = 3450
		10 = 3455
		10 = 3456

		#Zealous
		10 = 3460
		10 = 3465
		10 = 3470
		10 = 3475
		10 = 3476
		10 = 3750
		10 = 3755

		#Trusting
		10 = 3500
		10 = 3505
		10 = 3510
		10 = 3515

		#Personality Traits
		10 = 1000
		10 = 1001
		10 = 1002
		10 = 1003
		10 = 1004
		10 = 1005
		10 = 1006
		10 = 1007
		10 = 1008
		10 = 1009
		10 = 1010
		10 = 1011
		10 = 1012
		10 = 1013
		10 = 1014
		10 = 1015
		10 = 1016
		10 = 1017
		10 = 1018
		10 = 1019
		10 = 1028
		10 = 1029
		10 = 1030
		10 = 1031
		10 = 1032
		10 = 1033
		10 = 1034
		10 = 1035
		10 = 1036
		10 = 1037
		10 = 1038
		10 = 1039
		10 = 1040
		10 = 1041
		10 = 1042
		10 = 1043
		10 = 1044
		10 = 1045
		10 = 1046
		10 = 1047
		10 = 1048
		10 = 1049
		10 = 1050
		10 = 1051
		10 = 1052
		10 = 1053
		10 = 1054
		10 = 1057
		10 = 1058
		10 = 1060
		10 = 3730
		10 = 3735

		# Physical shape events
		10 = HFP.20647 # Health complications - Fat
		10 = HFP.20648 # Health complications - Malnourished
		2 = HFP.20649 # Help from friend
		 5 = HFP.20606 # Character is getting fat
		 5 = HFP.20629 # Character is getting malnourished

		2 = HFP.20801 #Character becoming Groomed due to Focus.
		2 = HFP.20802 #Character becoming Uncouth due to Focus.

		40 = 0
		
		#misc
		

		faerun_rogue_baron_events = {
			delay = 17

			100 = FRE.0001
			100 = 0
		}
		
		courtier_romance = {
			delay = 47

			985 = 0
			 15 = 456 # A courtier initiates romance with another courtier
		}
	}
}

#character
on_decade_pulse = {
	events = {
		frmaint.1 # useless characters pruning
		racial_aging.0 # check if long-lived character is old
		racial_aging.3 # Toggle creature traits to get long-lived races to grow out of childhood and later into old age.
		HF.23400 # Astrology + Haruspicy = Religious Head reads the stars.
		ZHE.501
		rlg_chg.0 # Religion Change Event
		frmaint.46 # repeal inappropriate law
		ALWAR.1 #first event of great alignment conflict chain
	}

	random_events = {
		100 = 63050 #former MTTH event
		40 = SoA.4020 #former MTTH event
		100 = 0
		100 = monster.4 # Monster uprising
		#Late life health complications
		200 = HFP.20661
		200 = HFP.20662
		100 = HF.23404 #  Astrology + Haruspicy + No Religious Head: Court Chaplain occasionally reads the signs.

		eldership_succession = {
			15 = HFP.24002 #Pleased Elder moves in.
			15 = HFP.24004 #Grumpy Elder moves out.
			5 = HFP.24006 #Happy Elder suggests County grant.
			45 = HFP.24010 #Grumpy Elder suggests County grant.
			5 = HFP.24014 #Pleased Elder feels lonely.
			3 = HFP.24016 #Grumpy Elder fabricates claim against ruler.
			2 = HFP.24020 #Ecstatic Elder praises ruler.
			1 = HFP.24022 #Ecstatic Elder mentors ruler.
			150 = 0
		}

		ageing_death_events = {
			delay = 72

			10 = racial_aging.2
			15 = 0
		}

		ageing_infirm_events = {
			delay = 77

			10 = racial_aging.4
			15 = 0
		}

		inventive_events = {
			delay = 23

			1840 = 0
			280 = INVNT.1
			280 = INVNT.3
			280 = INVNT.5
		}

		immortal_unrest = {
			delay = 44

			20 = FCE.0001
			80 = 0
		}
	}
}

# For characters older than AGE_CHILDHOOD_PULSE but not an adult as defined by ADULT_AGE_FEMALE and ADULT_AGE_MALE
on_yearly_childhood_pulse = {
	events = {
		HFP.20057 # Hollow Child nickname.
		HF.302 # Child of Destiny gets extra stats
		FaerunSorcerer.2 #sorcerer origin reveals itself
	}

	random_events = {
		# Childhood Personality Events

		#Age 6-16, aiming to get at least 4 traits before adult.
		100 = 1500
		100 = 1510
		100 = 1520
		100 = 1530
		100 = 1540
		100 = 1550
		100 = 1560
		100 = 1570
		100 = 1580
		100 = 1590
		100 = 1600
		100 = 1610
		100 = 1620
		100 = 1630
		100 = 1640
		100 = 1650
		100 = 1660
		100 = 1670
		100 = 1680
		100 = 1690
		100 = 1700
		100 = 1710
		100 = 1720
		100 = 1730
		100 = 1965
		100 = 1632
		100 = 1732
		5000 = RoI.10010 # Acknowledged reincarnated child acquires trait from previous personality

		#Toddler flavour events (age 2-5), not very common, but some will get them.
		10 = 1900
		10 = 1901
		10 = 1902
		10 = 1903
		10 = 1904

		#Young children flavour events, (age 6-10), not very common, but some will get then..
		20 = 1905
		20 = 1906
		20 = 1907
		20 = 1908
		20 = 1909
		20 = 1910
		20 = 1911
		20 = 1912

		#Youngsters flavour events (age 11-15), not very common, but some will get then..
		50 = 1913
		50 = 1915
		50 = 1916
		50 = 1917
		50 = 1918
		50 = 1919
		50 = 1920
		50 = 1921
		50 = 1922
		50 = 1923
		50 = 1924
		50 = 1925
		50 = 1926
		50 = 1927
		50 = 1928
		50 = 1929
		50 = 1930
		50 = 1931
		50 = 1932
		50 = 1933
		50 = 1934
		50 = 1935

		1500 = 0

		friends_rivals = { #Friends rival flavour events moved from MTTH to childhood pulse.
			100 = 100005
			100 = 100015
			100 = 100040
			50 = 100100
			50 = 100065
			50 = 100000
			50 = 100034
			50 = 100060
			50 = 100070
			50 = 100080
			50 = 100090

			1000 = 0
		}

		bloodline_events = {
			100 = HF.24100 #Child is bored with his guardian.
			# 50 = HF.24230 # Depressed heir of Alexander/Ashoka.
			1000 = 0
		}
	}
}

# Yearly pulse (six months from on_yearly_pulse) intended for Focus events (only fires for characters with a Focus)
on_focus_pulse = {

	random_events = {
		1000 = 0

		# Family Focus
		300 = WoL.3010 # Relations with spouse improve
		200 = WoL.3020 # Relations with sibling improve
		400 = WoL.3030 # Relations with parent improve
		400 = WoL.3040 # Relations with child improve
		200 = WoL.3048 # Relations between two close relatives improve
		200 = WoL.3059 # Relations between two non-adult children improve

		# Theology Focus
		500 = WoL.7000 # Study religious myths?
		200 = WoL.7010 # Befriend priest through your religious interest
		200 = WoL.7020 # Visit holy site and speak with priests there (not Muslims, Christians, Jews or Indians)
		200 = WoL.7030 # Reflect on own life and how it relates to the gods.
		200 = WoL.7040 # Theologian's view of other religions - can gain Sympathy for other faiths
		200 = WoL.7050 # Question own faith - can gain Cynical or Zealous
		50 = WoL.7060 # Embrace heresy? Zealous characters only. Can lose the trait or become heretic.
		400 = WoL.7070 # Embrace theologian lifestyle?
		200 = WoL.7080 # Mystical experience - lose Depressed and Stressed
		200 = WoL.7090 # Meditation/Prayer in Seclusion - Go into hiding for a week. Lose Drunkard, Gluttonous and Lustful and possible gain Temperate and Chaste (depending on religion). Tiny Chance of restored eyesight or cured illness.

		# Hunting focus
		200 = WoL.5000 # Epic Hunt chain start
		200 = WoL.5200 # Receive hunting dog
		200 = WoL.5210 # Dog makes you happy
		200 = WoL.5211 # Dog makes you popular
		200 = WoL.5220 # Train your dog?
		200 = WoL.5230 # Bad dog kills other dog
		200 = WoL.5231 # Bad dog kills or wounds courtier

		# War Focus
		120 = WoL.11300 # Improved martial education
		120 = WoL.11301 # Leader Trait gained: Troop type specialist
		120 = WoL.11302 # Leader Trait gained: Terrain/climate specialist
		120 = WoL.11303 # Leader Trait gained: Battle tactics
		120 = WoL.11304 # Leader Trait gained: Inspiration, logistics and sieges
		120 = WoL.11305 # Leader Trait gained: Offense vs Defense
		120 = WoL.11310 # Teach a commander one of my leader traits

		# Rulership Focus
		50 = WoL.12000 # The Architect
		50 = WoL.12010 # Depressed
		25 = WoL.12011 # Stressed
		50 = WoL.12027 # Farm Fire
		50 = WoL.12015 # The Murders
		50 = WoL.12028 # Witch!
		50 = WoL.12029 # Drunkard
		50 = WoL.12025 # Noble Feud
		25 = WoL.12030 # City brigands
	}
}

### on combat pulse
#FROM is the character who is the commander of the opposing side
#FROMFROM is the character who is the LIEGE of the commander of the opposing side
on_combat_pulse = {
	events = {
		spellaux.42 # AI breath weapon event
	}
	random_events = {
		2750 = 0
		500 = HFP.11000 #tombola for battle events
		15 = 79009 # Shieldmaiden can save liege on battlefield
		15 = 79001 # Shieldmaiden saves liege, but she is injured (small chain)

	}
}

### on combat starting
#FROM is the character who is the commander of the opposing side
#FROMFROM is the character who is the LIEGE of the commander of the opposing side
on_combat_starting = {

}

# on siege pulse
on_siege_pulse = {
	random_events = {
		100000 = 0
		2250 = 62000 # Successful Sally by the Defender
		2250 = 62001 # Successful Sally by the Defender
		2250 = 62003 # Failed Sally by the Defender
		2250 = 62004 # Intrigue Slows down Siege
		2250 = 62005 # Intrigue Advances Siege
		2250 = 62006 # Disease strikes the Besieging Army
		2250 = 62007 # Hunger Strikes the Fastness under Siege
		2250 = 62008 # Food smuggled in lengthens the Siege
		2250 = 62009 # Raiders hit the camp
		2250 = 62015 # I need to decide if I should lead the assault
		 #750 = 62014 # I lead Assault
		 750 = FaerunSiege.1 # Siege event for Expert+ Arcane/Stealth classes
		 450 = 62011 # A Miracle Omen
		 450 = 62013 # A Miracle Mystic
	}
}

# any leader in battle on winning side (except the leader) is ROOT - opponent army leader is FROM
on_battle_won = {
	random_events = {
		800 = 0
		10 = 260 # Heroism shown
		10 = 261 # Soldier Distinguish himself.
	}
	events = {
		frxp.4
		generalmisc.17
	}
}

# any leader in battle on winning side (except the leader) is ROOT - opponent army leader is FROM
on_major_battle_won = {
	events = {
		CM.10029 # Chronicle
		frxp.6
		generalmisc.17
	}
}

# Winning army leader is ROOT - opponent army leader is FROM
on_battle_won_leader = {
	events = {
		frxp.4
		generalmisc.17
	}
}

# Winning army leader is ROOT - opponent army leader is FROM
on_major_battle_won_leader = {
	events = {
		CM.10031
		frxp.6
		generalmisc.17
	}
}

# Winning army owner is ROOT - opponent army owner is FROM
on_battle_won_owner = {
	events = {
		RIP.15115 #EoD prophet loses
	}
}

# Any leader in battle on losing side (except the leader) is ROOT - opponent army leader is FROM
on_battle_lost = {
	random_events = {
		700 = 0
		50 = 250 # Imprisoned by the enemy
	}
	events = {
		frxp.5
		generalmisc.17
	}
}

# Any leader in battle on losing side (except the leader) is ROOT - opponent army leader is FROM
on_major_battle_lost = {
	events = {
		CM.10030 # Chronicle
		frxp.7
	}
}

# Losing army leader ROOT - opponent army leader is FROM
on_battle_lost_leader = {
	events = {
		frxp.5
		generalmisc.17
	}
}

# Losing army leader ROOT - opponent army leader is FROM
on_major_battle_lost_leader = {
	events = {
		CM.10032
		frxp.7
		generalmisc.17
	}
}

# Losing army owner is ROOT - opponent army owner is FROM
on_battle_lost_owner = {
	events = {
		HL.180 # Check raiding adventurer defeat
	}
}

# The taken Holding title is in FROM.
on_siege_won_leader = {
	events = {
		generalmisc.17
	}
	random_events = {
		1000 = 0
		5 = LT.21000 # After a Siege, things might get out of control and a sack occur.
	}
}

# The province is in FROM
on_siege_won_leader_fort = {
	events = {
	}
}

# The province is in FROM
on_siege_won_leader_trade_post = {
	events = {
	}
}

# The taken Holding title is in FROM.
on_siege_lost_leader = {
	events = {
		generalmisc.17
	}
}

# The province is in FROM
on_siege_lost_leader_fort = {
	events = {
	}
}

# The province is in FROM
on_siege_lost_leader_trade_post = {
	events = {
	}
}

# Fires for the owner of the winning unit (ROOT). The taken Holding title is in FROM.
on_siege_over_winner = {
	events = {
		TOG.1005 # Peasants take county capital
		TOG.1025 # Heretics take county capital
		TOG.1045 # Nationalists take county capital
		TOG.1065 # Religious rebels take county capital
		RIP.11702 # Prosperity lost when sieged
		RIP.11713 # Monument to Glory teardown
		MNM.6222 # Assassins occupy holding
		MNM.7111 # Devil Worshipers desecrate holding
		MNM.9900 # Chance to steal artifact from capital holdings
	}
}

# Fires for the owner of the winning unit (ROOT) for forts. The province the siege was in is FROM.
on_siege_over_winner_fort = {
	events = {
	}
}

# Fires for the owner of the winning unit (ROOT) for forts. The province the siege was in is FROM.
on_siege_over_winner_trade_post = {
	events = {
	}
}

# Fires for all characters presumed to be in the Holding at the time. Siege winner unit owner in the 'new_character' scope, lost holding title in FROM, local character in ROOT.
on_siege_over_loc_chars = {
	random_events = {
 		1000 = 0 # Nothing happens
 		100 = 62100 # Character imprisoned
 		200 = TOG.1190 # Rebels kill character
 	}
}

# Fires for all characters presumed to be in the province at the time for forts. Siege winner unit owner in the 'new_character' scope, province in FROM, local character in ROOT.
on_siege_over_loc_chars_fort = {
	events = {
	}
}

# Fires for all characters presumed to be in the province at the time for trade posts. Siege winner unit owner in the 'new_character' scope, province in FROM, local character in ROOT.
on_siege_over_loc_chars_trade_post = {
	events = {
	}
}

#character
on_failed_assassination = {
	random_events = {
 		85 = 156 # No harm done
 		10 = 157 # Wounded
 		5 = 158 # Maimed
 	}
}

#character
on_failed_assassination_disc = {
	random_events = {
 		85 = 159 # No harm done
 		10 = 160 # Wounded
 		5 = 161 # Maimed
 	}
}

#character
on_assassination = {
	events = {
 		162
 	}
}

#character
on_assassination_disc = {
	events = {
 		163
 	}
}

# character
on_birth = {
	events = {
		300 # A Bastard is born
		frmaint.47 # polyamorous religions have only legit bastards
		312 # The child of a consort is born
		318 # A Bastard is born, but is not recognized as such by the mother's spouse (cuckoo!)
		CM.10011 # Chronicle entry
		HL.1000 # Child born with Wolf's Blood
		HL.1700 # Wolf's Blood inheritance
		RIP.11064 # Babies born in seclusion get seclusion modifier
		MNM.7508 # DW Demon child
		MNM.1206
		105008 # Check for muslim mother's divorce on birth

		#FR EVENTS
		beauty.0
		intelligence.0
		strength.0
		racialbirth.0
		HFP.20403 # Remove pregnancy_finishing trait, check all special circumstances for child's birth.
		HFP.20555 # Clear all hard_pregnancy traits and flags.
		HFP.30030 # Apply freckles trait properly.
		HFP.20068 # Cleanup for children born after father's death.
		HF.23750 # Stable Doctrine gives chance to shield newborn heir from harm.
		fertility.2 #lower fertility for long-lived fathers
		FaerunSorcerer.1
		uthgar.0
		frstory.6 # Bhaalspawn counter.
	}
	random_events = {
		200 = 0
		50 = RIP.29600 # Firstborn/first son reaction
		5 = RoI.10000 # Reincarnation?
		1 = RIP.29805 # Reincarnation for non west_african

		child_of_destiny_chance = { # Chance of a newborn child becoming a Child of Destiny
			15000 = 0
			1 = HF.200
		}
		
		# Chance of a newborn child having psionic potential
		psionic_potential_chance = {
			98 = 0
			2 = generalmisc.11
		}
	}
}

# character
on_adulthood = {
	events = {
		HL.1040 # Wolf Child reaches maturity
		ZE.13998 # Clear adolescence trait event chain flags on adulthood

		# Childhood Traits mature if they haven't yet
		ZE.13000 # Haughty
		ZE.13010 # Affectionate
		ZE.13020 # Timid
		ZE.13030 # Rowdy
		ZE.13040 # Willful
		ZE.13050 # Brooding
		ZE.13060 # Indolent
		ZE.13070 # Playful
		ZE.13080 # Conscientious
		ZE.13090 # Fussy
		ZE.13100 # Curious
		ZE.13110 # Idolizer

		# Resolve education and add trait
		ZE.14100 # Diplomacy
		ZE.14200 # Martial
		ZE.14300 # Stewardship
		ZE.14400 # Intrigue
		ZE.14500 # Learning
		ZE.14700 # Lack of focus

		MNM.1269 # Horoscoped child gets new modifiers

		HFP.20592 # Child of troubled pregnancy speaks to mother.
		HF.23016 # Reformed pagans with no religious head pick their religious branch.
		HF.300 # Child of Destiny reaches adulthood
		HF.23775 # Animist adulthood rite.

		ZE.40000 # Extra clean up of childhood traits, for incapable etc characters
		generalmisc.4 # Add Thayan tattoo.
	}
	effect = {
		character_event = { id = racial_aging.3 days = 1 }
		character_event = { id = racial_aging.6 years = 5 }
	}
}

on_adolescence = { # Checked on 12th birthday.
	events = {
		ZE.12998 # Clear childhood event chain flags
		MNM.3429 # Educator/guardian/parent with secret religion get a chance to convince child to convert secretly
		HFP.20058 # Hollow child special event
	}
}

# baby scope
on_post_birth = {
	events = {
		313 # Possible complications for the mother and child
	}
}

# mother scope
on_post_birth_stillbirth = {
	events = {
		314 # Possible complications for the mother after stillbirth
	}
}

#character (at 2 months)
on_pregnancy = {
	events = {
		racialbirth.2 # cancel incompatible pregnancies; should be the first event in the list, all events below should have the condition "is_pregnant = yes" to be skipped if the pregnancy was cancelled here
 		400 # Pregnancy in matrimony
 		401 # Pregnancy out of wedlock
 		402 # Pregnancy in matrimony, with another father!
 		410 # Pregnancy as consort
 		412 # Pregnancy as consort, with another father!
		fertility.1 # fertility penalty for long-lived or immortal characters
 		HFP.20401 # Hidden event to set clock for regency during final months.
 		HFP.20556 # Umbrella event for positive pregnancy flavor.
		
 	}
}

#character
on_crusade_creation = {
	events = {
		CM.10015  # Chronicle entry
 	}
}

# Sent to employers of both spouses - ROOT is employer. FROM is employers "employee". new_character is the other spouse.
on_marriage = {
	events = {
		racialbirth.3 # break incompatible marriages; keep this first in the list, add "new_character = { NOT = { has_character_flag = marriage_cancelled } }" condition to other events below

 		500 # Royal Marriage Aid Duty
 		HF.23777 # Doctrine close kin marriage
		CM.10023  # Chronicle entry
		CM.10036 # Chronicle entry - primary heir
		ZE.1015 # Disobedient daughter is unhappy with marriage
		GBC.199 # Game book event, falling in love with someone else at marriage feast
 	}
	random_events = {
		10 = ZE.1010 # Daughter becomes disobedient - undesired marriage
		2000 = 0 # No random event
	}
}

#character. Triggers when someone gets imprisoned for any reason. - ROOT is prisoner, FROM is imprisoner
on_become_imprisoned_any_reason = {
	events = {
		HL.190
		ZE.14600 # Being thrown in prison affects education negatively
		RIP.12097 # Being thrown in prison removes seclusion modifier
		685 # Remove in-hiding trait on imprisonment
		JD.10022 # Chinese councilor visiting is imprisoned - cancels visit
		HF.12305 # Legendary Hero has been imprisoned - notifies society members
		LA.506 #Clears agent elimination quest
	}
}

#character. Triggers if someone tries to imprison someone landed and fails. This leads to an automatic war declaration(independece)
on_avoided_imprison_started_war = {
	events = {
 		150 # Avoided imprison, declared independece
 	}
}

#character. Triggers if someone becomes imprisoned by the diplo-action - ROOT is prisoner, FROM is imprisoner
on_became_imprisoned = {
	events = {
 		151 # Was imprisoned
 	}
}

#character. Triggers if someone tries to imprison someone unlanded and fails. Character is exiled to another country
on_avoided_imprison_fled_country = {
	events = {
 		152
 	}
}

#character. Triggers if someone is released from prison - ROOT is prisoner, FROM is imprisoner
on_released_from_prison = {
	events = {
 		153
		CM.10025  # Chronicle entry
		ZE.12219  # Released from dungeon must choose whether to leave pet rat behind
		HF.23446  # Prisoner about to be put through blood games is released before the games start. His jailer has no champion left.
 	}
}

#character. Triggers if someone is executed, character not dead yet
on_executed = {
	events = {
 		154
 	}
}

#character. Triggers if someone is exiled
on_exiled = {
	events = {
 		155
 	}
}

#character. Fires every month for characters who are preparing an invasion.
on_prepared_invasion_monthly = {
}

#character. Fires if a prepared invasion becomes invalid.
on_prepared_invasion_aborts = {
}

#character. Fires if a prepared invasion expires.
on_prepared_invasion_expires = {
}

on_death = {
	events = {
		650      # Hidden - clear stuff
		24500    # Death of a loved wife...
		24502    # Death of a good son
		70041    # Ruler has died, the tournament is over
		88291    # Ruler has died, the furusiyya is over
		CM.10010 # Chronicle entry
		CM.6185 # Dies of other causes while assassination is in progress - clear flags
		WoL.6335 # Owner of Necronomicon dies...
		HLF.8001 # Sky Burial
		ZE.1030 # Daughter becomes disobedient - killed lover
		ZE.1040 # Daughter becomes disobedient - killed friend
		532 #Clears regents if heir has one already
		RIP.4400 #Nicknames for executions
		GR.10
		MNM.6844 #Removes mark of death block for Assassins GM
		MNM.6991 #Clears any quests targeting this character
		LA.506 #Clears agent elimination quest
		MNM.6012 #Transfers assassins debt to heir
		BRO.1415 #Announces arcane brotherhood apprentice death
		BFL.1415 #Announces flame brotherhood apprentice death
		BRO.1611 # Clears Apprentice minor titles
		BFL.1611 # Clears Apprentice minor titles
		JD.60210 # Destroy Pretender Chinese Empire if heir is not same dynasty and chinese
		JD.60015 # Notify of Suzerain dying and you being free
		JD.3042 # Clear Supply Horses modifier if no longer Nomadic
		JD.10080 # Your Chinese Prince/Princess has died (for children or spouse - must be read before JD.60310!)
		JD.60310 # Courtier from China dies
		JD.10022 # Chinese councilor visiting dies and cancels visit
		GR.14 # Lose disconnected exclaves if not at war (Limited)
		GR.15 # Lose disconnected exclaves if not at war (Significant)
		GR.16 # Lose disconnected exclaves if not at war (Harsh)
		GR.17 # Lose disconnected exclaves if not at war (Total)
		GR.18 # Lose disconnected exclaves if not at war (Limited Naval)
		HF.20415 # Add hidden traits to make dead kings wear special crowns after the artifact has been transferred.
		HF.21001 # Clear swayed target on his death.
		HF.22119 # Clear swayed target on his death.
		HF.40000 # Potential Beatification
		HF.40100 # Potential Ancestor Worship
		HF.21152 # Clear special interest Sway/Antagonize characters on_death of Swayer/Antagonizer.
		HFP.10997 #For logging purposes: how many of my commanders died during my lifetime
		HF.23410 #Haruspicy + Bloodthirsty Gods = Read future in human entrails of your sacrifices.
		HF.23430 #Bloodthirsty Gods gain points for sacrifying people.
		HF.23448 #A contender for the blood games dies before the games start.
		HF.23450 #Host of blood games dies before the games start.
		HF.23801 #Host of a great tribal festival dies, end the event chain.
		HF.10502 #Clears quest target for: Warrior Lodge duel-, wage war-, and recruit child-missions
		WoL.4801 #Clear DND on your Carousing guests
		HF.560 # Notify Lodge Members that die in duels
		HF.24017 #Murder points for Forge Bloodline Ambition.
		HF.12304 #Legendary Journey: Notify current heir and other warrior lodge members of your untimely demise
		HF.50107 # Clean up for Warrior Lodge war aid
		LT.20501 # Sucessor must decide on Burial if it has wonders with burial_ground flag

		fr_prepared_invasion.3 # Clean up when a prepared invader dies
		HRP.3 # Clean up when a prepared invader dies
		fr_prepared_invasion.18 # Transfers prepared invasion eligibility on death
		uthgar.26 # Uthgardt burial start
		frelections.9 # mark trade posts for new patrician family to inherit
		generalmisc.1
		spellaux.44 #Activates or kills clones on creator's death
		conv.11 #chance to get avatar trait from slain avatar
		frstory.5 # Bhaalspawn dying off.
		frstory.83
		ARTF.4 # Removing some artifacts on death
	}
	random_events = {
		1 = RIP.29800 #reincarnation investigation
		5 = HF.51000 # Crucible steel weapon chain
		10 = 24505 # Suspicious death: Start
		10 = 24510 # Death of a Councillor
		25 = RIP.29000 #Lovers/rivals/friends react
		100 = MNM.1207 # Hermetic Scrying vision fulfilled
		100 = 0
	}
}

on_merc_rampage = {
	events = {
 		38050
 	}
}

on_merc_leave = {
	events = {
 		38051
 	}
}

on_merc_turn_coat_from = {
	events = {
 		38052
 	}
}

on_merc_turn_coat_to = {
	events = {
 		38053
 	}
}

on_holy_order_leave = {
	events = {
 		38054
 	}
}

#Note: Unsynchronised, this message should not execute an event which changes the gamestate to prevent out of sync
on_letter_event_message = {
	events = {
		1
	}
}

#Note: Unsynchronised, this message should not execute an event which changes the gamestate to prevent out of sync
on_character_event_message = {
	events = {
		2
	}
}

on_loot_settlement = {
	random_events = {
		5 = TOG.3300
		5 = TOG.3301
		5 = TOG.3302
		5 = TOG.3303
		50 = TGF.3320
		20 = HF.23207 #Pirating events: taking thralls.
		30 = HF.23209 #Pirating events: stealing cattle.
		60 = HF.23210 #Pirating events: destroying large port city.
		80 = HF.23214 #Pirating events: hiring local mercenaries.
		250 = 0
	}
	events = {
		TGF.3321
		TGF.3322
		TGF.3323
		RIP.11720
		MNM.9899 # Chance to steal artifact from capital holdings
		HF.25503 # Warrior Lodge Mission: Raid province
		ELDC.1003 # Elder Concord Mission: Raid province
		HF.23212 # Earned Seaking Bloodline.
	}
}

# When someone is looting currently in a province
# ROOT = Looter, FROM = Province
on_loot_province = {
	random_events = {
		8 = HL.8
		10 = HF.23219 # Pirate events: infiltrate holding.
		400 = 0
	}
}

###########################
# DIPLOMATIC NOTIFICATIONS
###########################

# FROM is the character recieving the event
# FROMFROM is the person sending the event
# ROOT is empty or a third party
# new_character is empty or a third party

DEMAND_RELIGIOUS_CONVERSION_INTERACTION_ACCEPT_EVENT = {
	events = {
		202
	}
}

DEMAND_RELIGIOUS_CONVERSION_INTERACTION_DECLINE_EVENT = {
	events = {
		203
	}
}

REVOKE_TITLE_INTERACTION_ACCEPT_EVENT = {
	events = {
		204
	}
}

REVOKE_TITLE_INTERACTION_DECLINE_EVENT = {
	events = {
		205
	}
}

OFFER_PEACE_INTERACTION_ACCEPT_EVENT = {
	events = {
		206
	}
}

OFFER_PEACE_INTERACTION_DECLINE_EVENT = {
	events = {
		207
	}
}

SEND_GIFT_INTERACTION_ACCEPT_EVENT = {
	events = {
		208
	}
}

SEND_GIFT_INTERACTION_DECLINE_EVENT = {
	events = {
		209
	}
}

ASK_FOR_MONEY_INTERACTION_ACCEPT_EVENT = {
	events = {
		SoA.3100
	}
}

ASK_FOR_MONEY_INTERACTION_DECLINE_EVENT = {
	events = {
		SoA.3101
	}
}

ASK_FOR_CLAIM_INTERACTION_ACCEPT_EVENT = {
	events = {
		SoA.3104
	}
}

ASK_FOR_CLAIM_INTERACTION_DECLINE_EVENT = {
	events = {
		SoA.3105
	}
}

NOMINATE_BISHOP_TO_POPE_INTERACTION_ACCEPT_EVENT = {
	events = {
		SoA.3102
	}
}

NOMINATE_BISHOP_TO_POPE_INTERACTION_DECLINE_EVENT = {
	events = {
		SoA.3103
	}
}


OFFER_VASSALIZATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		210
        #nomadtribalmaint.10 # Builds Nomadic Tribal Building when vassal changes government upon vassalisation + valid culture # Doesn't work from this on_action: all scopes are empty
	}
}

OFFER_VASSALIZATION_INTERACTION_DECLINE_EVENT = {
	events = {
		211
	}
}

ARRANGE_BETROTHAL_INTERACTION_ACCEPT_EVENT = {
	events = {
		212
	}
}

ARRANGE_BETROTHAL_INTERACTION_DECLINE_EVENT = {
	events = {
		213
	}
}

ARRANGE_SUCC_BETROTHAL_INTERACTION_ACCEPT_EVENT = {
	events = {
		330
	}
}

ARRANGE_SUCC_BETROTHAL_INTERACTION_DECLINE_EVENT = {
	events = {
		331
	}
}

OFFER_SUCCESSION_MARRIGE_INTERACTION_ACCEPT_EVENT = {
	events = {
		214
		37255
	}
}

OFFER_SUCCESSION_MARRIGE_INTERACTION_DECLINE_EVENT = {
	events = {
		215
	}
}

OFFER_MARRIGE_INTERACTION_ACCEPT_EVENT = {
	events = {
		216
		37255
	}
}

OFFER_MARRIGE_INTERACTION_DECLINE_EVENT = {
	events = {
		217
	}
}

RANSOM_CHARACTER_INTERACTION_ACCEPT_EVENT = {
	events = {
		218
	}
}

RANSOM_CHARACTER_INTERACTION_DECLINE_EVENT = {
	events = {
		219
	}
}

EDUCATE_CHARACTER_INTERACTION_ACCEPT_EVENT = {
	events = {
		220
	}
}

EDUCATE_CHARACTER_INTERACTION_DECLINE_EVENT = {
	events = {
		221
	}
}

ABANDON_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		222
	}
}

ABANDON_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		223
	}
}

STOP_BACKING_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		224
	}
}

STOP_BACKING_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		225
	}
}

JOIN_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		226
	}
}

JOIN_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		227
	}
}

GRANT_LANDED_TITLE_INTERACTION_ACCEPT_EVENT = {
	events = {
		MNM.1217
		228
		frmaint.38 # convert baron tier republics and theocracies upon becoming counts
		frmaint.39 # maintain popular_elective and divine_elective for vassals that have them
	}
}

GRANT_LANDED_TITLE_INTERACTION_DECLINE_EVENT = {
	events = {
	}
}

APPOINT_TO_OFFICE_INTERACTION_ACCEPT_EVENT = {
	events = {
		230
	}
}

APPOINT_TO_OFFICE_INTERACTION_DECLINE_EVENT = {
	events = {
		231
	}
}

ASK_FOR_INVASION_INTERACTION_ACCEPT_EVENT = {
	events = {
		232
	}
}

ASK_FOR_INVASION_INTERACTION_DECLINE_EVENT = {
	events = {
		233
	}
}

ASK_FOR_DIVORCE_INTERACTION_ACCEPT_EVENT = {
	events = {
		234
	}
}

ASK_FOR_DIVORCE_INTERACTION_DECLINE_EVENT = {
	events = {
		235
	}
}

ASK_FOR_EXCOMMUNICATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		236
	}
}

ASK_FOR_EXCOMMUNICATION_INTERACTION_DECLINE_EVENT = {
	events = {
		237
	}
}

CALL_ALLY_INTERACTION_ACCEPT_EVENT = {
	events = {
		238 # Ally accepts
		41000 # Vassal accepts
		CM.10014
	}
}

CALL_ALLY_INTERACTION_DECLINE_EVENT = {
	events = {
		239 # Ally
		41001 # Vassal
	}
}

DECLARE_WAR_INTERACTION_ACCEPT_EVENT = {
	events = {
		240
		241
	}
}

RETRACT_VASSAL_INTERACTION_ACCEPT_EVENT = {
	events = {
		274
	}
}

RETRACT_VASSAL_INTERACTION_DECLINE_EVENT = {
	events = {
		275
	}
}

INVITE_TO_COURT_INTERACTION_ACCEPT_EVENT = {
	events = {
		280
	}
}

INVITE_TO_COURT_INTERACTION_DECLINE_EVENT = {
	events = {
		281
	}
}

ASK_FOR_VASSALIZATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		282
	}
}

ASK_FOR_VASSALIZATION_INTERACTION_DECLINE_EVENT = {
	events = {
		283
	}
}

ASK_TO_LIFT_EXCOMMUNICATION_INTERACTION_ACCEPT_EVENT = {
	events = {
		284
	}
}

ASK_TO_LIFT_EXCOMMUNICATION_INTERACTION_DECLINE_EVENT = {
	events = {
		285
	}
}

ASK_TO_RANSOM_CHARACTER_INTERACTION_ACCEPT_EVENT = {
	events = {
		286
	}
}

ASK_TO_RANSOM_CHARACTER_INTERACTION_DECLINE_EVENT = {
	events = {
		287
	}
}

SETTLE_ADVENTURER_INTERACTION_ACCEPT_EVENT = {
	events = {
		288
	}
}

SETTLE_ADVENTURER_INTERACTION_DECLINE_EVENT = {
	events = {
		289
	}
}

ASK_TO_JOIN_WAR_INTERACTION_ACCEPT_EVENT = {
	events = {
		293
		CM.10013
	}
}

ASK_TO_JOIN_WAR_INTERACTION_DECLINE_EVENT = {
	events = {
		294
	}
}

ASK_TO_EMBARGO_INTERACTION_ACCEPT_EVENT = {
	events = {
		295
	}
}

ASK_TO_EMBARGO_INTERACTION_DECLINE_EVENT = {
	events = {
		296
	}
}

MAKE_CONSORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		297
	}
}

MAKE_CONSORT_INTERACTION_DECLINE_EVENT = {
	events = {
		298
	}
}

ABSORB_CLAN_INTERACTION_ACCEPT_EVENT = {
	events = {
		503
	}
}

ABSORB_CLAN_INTERACTION_DECLINE_EVENT = {
	events = {
		504
	}
}

SPLIT_CLAN_INTERACTION_ACCEPT_EVENT = {
	events = {
		509
	}
}

SPLIT_CLAN_INTERACTION_DECLINE_EVENT = {
	events = {
		510
	}
}

FORM_BLOOD_OATH_INTERACTION_ACCEPT_EVENT = {
	events = {
		505
	}
}

FORM_BLOOD_OATH_INTERACTION_DECLINE_EVENT = {
	events = {
		506
	}
}

SETTLE_FEUD_INTERACTION_ACCEPT_EVENT = {
	events = {
		507
	}
}

SETTLE_FEUD_INTERACTION_DECLINE_EVENT = {
	events = {
		508
	}
}

FORM_ALLIANCE_INTERACTION_ACCEPT_EVENT = {
	events = {
		diploresponse.1
	}
}

FORM_ALLIANCE_INTERACTION_DECLINE_EVENT = {
	events = {
		diploresponse.2
	}
}

DISSOLVE_ALLIANCE_INTERACTION_ACCEPT_EVENT = {
	events = {
	}
}

DISSOLVE_ALLIANCE_INTERACTION_DECLINE_EVENT = {
	events = {
	}
}

BUY_FAVOR_INTERACTION_ACCEPT_EVENT = {
	events = {
		520
	}
}
BUY_FAVOR_INTERACTION_DECLINE_EVENT = {
	events = {
		521
	}
}

REQUEST_SUPPORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		522
	}
}
REQUEST_SUPPORT_INTERACTION_DECLINE_EVENT = {
	events = {
		523
	}
}

FORM_NON_AGGRESSION_PACT_INTERACTION_ACCEPT_EVENT = {
	events = {
		524
	}
}
FORM_NON_AGGRESSION_PACT_INTERACTION_DECLINE_EVENT = {
	events = {
		525
	}
}

ASK_COUNCIL_POSITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		526
	}
}
ASK_COUNCIL_POSITION_INTERACTION_DECLINE_EVENT = {
	events = {
		527
	}
}

ASK_REALM_PEACE_INTERACTION_ACCEPT_EVENT = {
	events = {
		528
	}
}
ASK_REALM_PEACE_INTERACTION_DECLINE_EVENT = {
	events = {
		529
	}
}

FORCE_JOIN_FACTION_INTERACTION_ACCEPT_EVENT = {
	events = {
		530
	}
}
FORCE_JOIN_FACTION_INTERACTION_DECLINE_EVENT = {
	events = {
		531
	}
}

ASK_TO_JOIN_AMBITION_INTERACTION_ACCEPT_EVENT = {
	events = {
		535
	}
}
ASK_TO_JOIN_AMBITION_INTERACTION_DECLINE_EVENT = {
	events = {
		536
	}
}
OFFER_CONSORT_INTERACTION_ACCEPT_EVENT = {
	events = {
		537
	}
}
GIVE_ARTIFACT_INTERACTION_ACCEPT_EVENT = {
	events = {
		538
	}
}

# never triggered, but reserved for CB use
on_warleader_death = {
	events = {
		251
		252
	}
}

# Respond to a proposed change of law
on_approve_law = {
	events = {
		290
		675
	}
}

# Respond to a proposed change of law
councilor_on_approve_law = {
	events = {
		750
	}
}

# Respond to a proposed change of de jure law
on_approve_de_jure_law = {
	events = {
		291
		292
		676
	}
}


# When rebels appear
on_rebel_revolt = {
	events = {
		600 		# Only valid without "The Old Gods" DLC
		TOG.1030 	# Heretic rebels reinforced
		TOG.1020	# Heretic rebels rise up
		TOG.1050 	# Nationalist rebels reinforced
		TOG.1040	# Nationalist rebels rise up
		TOG.1070 	# Religious rebels reinforced
		TOG.1060	# Religious rebels rise up
		TOG.1010 	# Peasant rebels reinforced
		TOG.1000 	# Peasant rebels rise up
		HL.2010		# Minor Clan rebels reinforced
		HL.2000		# Minor Clan rebels rise up
	}
}

# When province defects to rebels
on_defect_to_rebels = {
	events = {
		610			# Only valid without "The Old Gods" DLC
	}
}

# When rebels disperse
on_defect_from_rebels = {
	events = {
		615			# Only valid without "The Old Gods" DLC
	}
}

# When a mission succeeds
on_crusade_success = {
	events = {
		620
		CM.10016  # Chronicle entry
	}
}

# When a mission fails
on_crusade_failure = {
	events = {
		621
		CM.10017  # Chronicle entry
	}
}

# When a mission invalidates
on_crusade_invalid = {
	events = {
	}
}

# When a pagan ruler forces a prisoner to be his consort
on_forced_consort = {
	events = {
		660
	}
}

# When a pagan religion is reformed
on_reform_religion = {
	events = {
		670
		generalmisc.35
	}
}

# When the religion changes in a county, ROOT is province. FROM has the old religion.
on_county_religion_change = {
	events = {
		SoA.4121
		MNM.6206 #Convert province assassin quest
		EVER.6206 #same as above, for everlasting
	}
}

# When a character accepts religious conversion (the diplomatic action)
# FROMFROM is the demander. FROM is the vassal. ROOT is the character. Fires for the vassal and each of his courtiers and vassals.
on_vassal_accepts_religious_conversion = {
	events = {
		39700 # Hidden event actually changing the religion
	}
}

# A heresy has become the new norm, replacing the old orthodoxy
on_heresy_takeover = {
	events = {
		SoA.4200
	}
}

# Fires for a newly elected Doge. FROM is the previous (dying or abdicating) doge.
on_become_doge = {
	events = {
	}
}

on_elective_gavelkind_succession = {
	events = {
		63103
	}
}

# Fires when a navy moves into a port. Starts in unit scope, FROM is the owner.
on_entering_port = {
	events = {
	}
}

# Fires when a cardinal is elected. SoA only! FROM is the Religious head.
on_rel_elector_chosen = {
}

# Fires when a Pope is elected. SoA only! FROM is the previous Religious Head
on_rel_head_chosen = {
	events = {
	}
}

# ROOT is the looter, FROM is the settlement title
on_settlement_looted = {
}

# ROOT is the navy's owner, FROM is the province
on_navy_returns_with_loot = {
	events = {
		TOG.3404 #Prosperity gain from loot
	}
}

# ROOT is the creating character, FROM is the title
on_create_title = {
	events = {
		CM.10021
		frmaint.9
		nomadtribalmaint.2 # Empowers nomad council
		nomadtribalmaint.6 # Nomadic succession for nomads
		generalmisc.18 # Dead Three get extra prestige from creating titles
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder = {
	events = {
		character_trait.0 # for characters from the "create new vassal" decision
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad
		HL.140 #Landless nomad gains a title.
		ZE.7000 #Check for Gain Any Title ambition.
		ZE.6010 #ambition event for unlanded son.
		RIP.12098 #check if we need to remove in_seclusion.
		RIP.11715 #Removes crown focus on new holder
		533
		MNM.6990 #Makes sure d_hashshashin owner is always shiite & member of the_assassins
		MNM.1215 # The Hermetics Scrying Power result (for new holder)
		MNM.1216 # The Hermetics Scrying Power result (for old holder)
		HF.23700 # Apply proper succession laws tied to gender Doctrines when creating a new vassal.
		HF.25510 # Clear loot province mission if province has fallen under your control.
		ELDC.1004 # Clear loot province mission if province has fallen under your control.
		JD.60204 # Rebel General's Empire continues temple names, triggers for any title with the uses_temple_names_by_script title flag
		539 # Fix adventurers turning Tribal land Feudal
		HF.23779 #Setting up next god-emperor.

		yikaria.1
		frstory.59 # Daemonfey Awaken
		frstory.15 # Turns mere of dead men feudal
		frstory.35 # Turns shoal of thirst feudal and gives it the Shade wonder
		frstory.55 # Gives a successful voice of telos e_warlock_knights
		frstory.75 # Turns dragonspear feudal
		frmaint.5
		frmaint.6
		nomadtribalmaint.12 # Disable nomadic elective if title inherited by a non nomad
		nomadtribalmaint.2 # Empowers nomad council
		nomadtribalmaint.3 # Create Nomadic Tribal buildings after changing to a valid owner
		nomadtribalmaint.6 # Nomadic succession for nomads
		uthgar.5
		uthgar.7
		frmaint.12
		frelections.3 # Merchant Republic periodic elections
		frmaint.36 # preserve elective succession for Commonwealths and Theocracies
		generalmisc.4 # Add Thayan tattoo.
		frmaint.55 # Setup succession after government changed.
		faithcleanup.0 # Destroy titles on invalid holder
		frstory.87 # Lotus Throne check
		frmaint.64 # Destroy non-eligible special titles
		FaerunSocieties.90004 # society title check
		frmaint.11 # add province modifier for half-fiendish provinces ruled by a true fiend
		frmaint.70 # Spellplague maintenance
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_inheritance = {
	events = {
		character_trait.0 # for autogenerated baron heirs
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest
		CM.10039 #Chronicle entry
		HL.140 #Landless nomad gains a title.
		RIP.11715 #Removes crown focus on new holder
		533
		MNM.6990 #Makes sure d_hashshashin owner is always shiite & member of the_assassins
		MNM.1215 # The Hermetics Scrying Power result (for new holder)
		MNM.1216 # The Hermetics Scrying Power result (for old holder)
		JD.60204 # Rebel General's Empire continues temple names, triggers for any title with the uses_temple_names_by_script title flag
		JD.9000 # Reapply Scholar Bureaucrat bonus on death/inheritance
		HF.25510 # Clear loot province mission if province has fallen under your control.
		HF.23779 #Setting up next god-emperor.
	
		courtflag.1
		yikaria.1
		frmaint.5
		frmaint.6
		nomadtribalmaint.12 # Disable nomadic elective if title inherited by a non nomad
		nomadtribalmaint.4 # Adopt Nomadic Tribal Government if inheriting a higher title with the correct culture
		nomadtribalmaint.11 # Builds Nomadic Tribal Building upon inheritance and vassalisation
		nomadtribalmaint.9 # Option to adopt nomadism if inheriting as a lower rank tribal
		uthgar.5
		uthgar.7
		frelections.3 # Merchant Republic periodic elections
		frmaint.34 # preserve some government types on succession
		frmaint.36 # preserve elective succession for Commonwealths and Theocracies
		generalmisc.4 # Add Thayan tattoo.
		faithcleanup.0 # Destroy titles on invalid holder
		frstory.87 # Lotus Throne check
		frmaint.64 # Destroy non-eligible special titles
		FaerunSocieties.90004 # society title check
		frmaint.11 # add province modifier for half-fiendish provinces ruled by a true fiend
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_usurpation = {
	events = {
		character_trait.0 # for autogenerated barons if wrong religion usurped
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad
		HL.140 #Landless nomad gains a title.
		CM.10022
		RIP.11715 #Removes crown focus on new holder
		533
		MNM.6990 #Makes sure d_hashshashin owner is always shiite & member of the_assassins
		MNM.1215 # The Hermetics Scrying Power result (for new holder)
		MNM.1216 # The Hermetics Scrying Power result (for old holder)
		JD.60204 # Rebel General's Empire continues temple names, triggers for any title with the uses_temple_names_by_script title flag
		539 # Fix adventurers turning Tribal land Feudal
		HF.25510 # Clear loot province mission if province has fallen under your control.

		courtflag.1
		yikaria.1
		frmaint.5
		frmaint.6
		nomadtribalmaint.12 # Disable nomadic elective if title inherited by a non nomad
		nomadtribalmaint.2 # Empowers nomad council
		nomadtribalmaint.3 # Create Nomadic Tribal buildings after changing to a valid owner
		nomadtribalmaint.6 # Nomadic succession for nomads
		uthgar.5
		uthgar.7
		frmaint.13
		frelections.3 # Merchant Republic periodic elections
		frmaint.36 # preserve elective succession for promoted barons and landless characters
		frmaint.39 # maintain popular_elective and divine_elective for rulers that have them
		frmaint.41 # dwarfhold to fallen dwarfhold. intentionally only this on_action
		frmaint.55 # Setup succession after government changed.
		faithcleanup.0 # Destroy titles on invalid holder
		frstory.87 # Lotus Throne check
		frmaint.64 # Destroy non-eligible special titles
		FaerunSocieties.90004 # society title check
		frmaint.11 # add province modifier for half-fiendish provinces ruled by a true fiend
	}
}

on_unlanded = {
	events = {
		HL.130 #Landless nomad clean-up.
		fr_prepared_invasion.3 # Kill the invasion event chain if the invader is unlanded
		HRP.3 # Kill the harper invasion event chain if the invader is unlanded
	}
}

# Fires at the end of each year if the chronicle is empty
on_create_chronicle_if_empty = {
	random_events = {
		100 = CM.10500
		100 = CM.10502
		100 = CM.10504
		100 = CM.10506
		100 = CM.10507
		100 = CM.10509
		100 = CM.10511
		100 = CM.10513
		100 = CM.10515
		100 = CM.10517
		100 = CM.10519
		100 = CM.10521
		100 = CM.10523
		100 = CM.10525
		100 = CM.10527
		100 = CM.10529
	}
}

# Fires when the player changes character
# FROM is the old character, ROOT is the new holder
on_chronicle_owner_change = {
	events = {
		CM.10001
	}
}

# Fires when the game starts (not from saves)
on_chronicle_start = {
	events = {
		CM.10000
		frmaint.24 # Immortal races get the hidden immortal trait
		wizinit.3 # Assign wizard specialization for AIs
	}
}

# Character converts religion, for whatever reason. ROOT is the character after conversion and the FROM scope has the old religion.
# !!! When putting new events here, be sure to put "NOT = { has_character_flag = reverting_religion_change }" in the event trigger block to forbid them to fire for the conversion immune characters !!!
on_character_convert_religion = {
	events = {
		frmaint.14 # catching the conversion immune characters and removing patron traits from everyone else. Should be kept as the first event in the list

		CM.10026
		671 #set rival conversion flag if eligible
		HF.23033	# Acquire Pagan religious branch when converting to a religion that has No Head.
		HF.23034	# Acquire Gender law when converting to Matriarchal/Equal/Patriarchal religion.
		HF.23458	# Host of Blood Games converts to non-Bloodthirsty religion in the middle of the tournament.

		uthgar.6
		uthgar.8
		uthgar.9
		generalmisc.25 # remove abyssal piety gain for sins
		generalmisc.32
		generalmisc.33
		fr_prepared_invasion.1 # Clean up event for religion conversion during prepared invasion without nomadic tribal government
		frmaint.48
		faithcleanup.0 # Destroy titles on invalid holder
		frstory.87 # Lotus Throne check
		frmaint.72 # refresh loyal province modifiers for relevant characters

		frmaint.20 # cleanup for conversion immune characters, should be kept as the last event in the list
	}
}

# Character converts secret religion, for whatever reason. ROOT is the character after conversion and the FROM scope has the old religion. Note that this fires even when the secret religion is reset as a result of the character converting to it, or if the character didn't previously have a secret religion
on_character_convert_secret_religion = {
	events = {
	}
}

# Character converts culture, for whatever reason. ROOT is the character after conversion and the FROM scope has the old culture.
on_character_convert_culture = {
	events = {
		CM.10027
	}
}

on_acquire_nickname = {
	events = {
		CM.10028
	}
}

# Fires for vassals that can become independent as a result of liege being over vassal limit
on_over_vassal_limit_succession = {
	events = {
		63100
	}
}

# From = Attacker, Root = Defender
on_war_started = {
	events = {
		CM.10012
		JD.30020 # Western protectorate receives reinforcements from China
		JD.30030 # Western protectorate receives reinforcements from China
		JD.30015 # Clean up trade contracts
		HF.24013 # Corsair ships for special bloodline.
		HF.23803 # Interrupt Great Tribal Festival.
		HF.24021 # Reset peaceful_years variable for Forged Bloodlines.
		HF.50000 # Ask Warrior Lodge member for help in war
		fr_prepared_invasion.4 # If another CB is used before Prepared Invasion
		HRP.4 # If another CB is used before Harpers Invasion
	}
}

# From = Attacker, Root = Defender
on_war_ended_victory = {
	events = {
		CM.10038
		JD.30051 # Offmap China end of war clean-up
		HF.23012 # Clean-up haruspicy modifiers
		HF.25035 # Clear Call to Glory effects.
		HF.24018 # Won Wars Bloodline counter.
		687 # Not So Great achievement
		HF.10515 # Complete Wage War mission, if you went about it some non-conventional way
		HF.50100 # Warrior Lodge War Aid conclusion

		uthgar.32
		frmaint.40
	}
}

# From = Attacker, Root = Defender
on_war_ended_whitepeace = {
	events = {
		CM.10040
		JD.30050 # Offmap China end of war clean-up
		HF.23012 # Clean-up haruspicy modifiers
		HF.25035 # Clear Call to Glory effects.
		HF.10516 # Completes Wage War mission for Warrior Lodge members
		HF.50101 # Warrior Lodge War Aid conclusion

		uthgar.32
		frmaint.40
		frstory.80
	}
}

# From = Attacker, Root = Defender
on_war_ended_defeat = {
	events = {
		CM.10041
		JD.30052 # Offmap China end of war clean-up
		HF.23012 # Clean-up haruspicy modifiers
		HF.25035 # Clear Call to Glory effects.
		HF.24019 # Won Wars Bloodline counter.
		HF.10517 # Completes Wage War mission for Warrior Lodge members
		HF.50102 # Warrior Lodge War Aid conclusion

		uthgar.32
		frmaint.40
		frstory.80
	}
}

# From = Attacker, Root = Defender
on_war_ended_invalid = {
	events = {
		JD.30050
		HF.23012 # Clean-up haruspicy modifiers
		HF.25035 # Clear Call to Glory effects.
		HF.10518 # Clear mission to Wage War

		uthgar.32
		frmaint.40
		frstory.80
	}
}

# From = Divorcer, Root = Spouse, New = Religious head if applicable
on_divorce = {
	events = {
		# 717 # Achievement
		CM.10037
	}
}

# ROOT = Builder, FROM = Title
on_settlement_construction_start = {
	events = {
		JD.40002 # Start constructing a city on the Silk Road for trade competition
	}
}

# ROOT = Builder, FROM = Province
on_trade_post_construction_start = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_fort_construction_start = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_hospital_construction_start = {
	events = {
	}
}

# ROOT = Builder, FROM = Title
on_settlement_construction_completed = {
	events = {
		44482
		MNM.4024 # Temple construction mission
		JD.40003 # Finish constructing a city on the Silk Road for trade competition
		HF.24022 # Architect Bloodline check.
		HF.24023 # Castellan Bloodline check.
		HF.24024 # Monumental Bloodline check.

		nomadtribalmaint.1 # # Builds Nomadic Tribal Building after holding is constructed
	}
}

# ROOT = Builder, FROM = Province
on_trade_post_construction_completed = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_fort_construction_completed = {
	events = {
	}
}

# ROOT = Builder, FROM = Province
on_hospital_construction_completed = {
	events = {
		#733 # Achievement Hospitable
	}
}

# ROOT = Builder, FROM = The Holding Title
on_holding_building_start = {
	events = {
		RIP.30100
	}
}

# ROOT = Starter, FROM = Target
on_feud_started = {
}

# ROOT = Ender, FROM = Target
on_feud_ended = {
}

on_blood_brother_death = {
}

# ROOT = AI character
on_ai_end_raid = {
	events = {
		HL.191
	}
}

on_mercenary_hired = {
	events = {
		ZE.10038
	}
}

on_mercenary_dismissed = {
	events = {
		ZE.10039
	}
}
# ROOT = target, FROM = starter, FROMFROM = chosen replacement
on_mercenary_captain_replacement = {
	events = {
		ZE.11040
	}
}

on_enforce_peace = {
}

on_enforce_peace_start = {
}

on_enforce_peace_six_vassals = {
	events = {
	}
}

on_law_vote_passed = {
	events = {
	}
}

on_law_vote_failed = {
}

on_player_mercenary_income = {
	events = {
	}
}

on_outbreak = {
	events = {
		RIP.4000
	}
}

on_province_major_modifier = {
	events = {
		RIP.10030
	}
}

# Fires every two years for characters who are members of any society
on_society_bi_yearly_pulse = {
	events = {
		MNM.6199 # assassins quest tombola
		MNM.7200 # Devil Worshipers quest tombola
		MNM.4000 # Monastic order quest tombola
		MNM.3000 # Secret religious society quest tombola
		BRO.1000 # Arcane brotherhoods quest tombola
		HF.10054 # Warrior Lodges: Maintenance: Rank up event (AI only)
		HF.25500 # Warrior Lodges: quest tombola
		LA.500 # Alliance Societies: quest tombola
		ZHE.1000 # Zhent-Like Societies: quest tombola
		HRP.1000 # Harpers: quest tombola
		TWI.1000 # Twisted Rune: quest tombola
		KNI.2000 # Knight Orders: quest tombola
		HERA.1000 # Heralds: quest tombola
		EME.1000 # Druid Societies: quest tombola
		STH.1000 # Thieves Guilds: quest tombola
		CDR.1000 # Cult of the Dragon: quest tombola
		ELDC.1000 # Elder Concord: quest tombola
	}

	random_events = {
		10 = MNM.10020 # Criminal societies: stressed
		100 = MNM.20000 # Devil Worshippers: Orgy
		100 = MNM.20010 # Devil Worshippers: Night on the Town
		75 = MNM.20030 # Devil Worshippers: Grand Summoning
		100 = MNM.20040 # Devil Worshippers: Impersonating Priests
		100 = MNM.20060 # Devil Worshippers: Infernal Choir (only with Rivals)
		75 = MNM.7854 # Devil Worshipers: Demon Hunters Attack
		100 = MNM.6899 # Assassins: friend or foe?
		100 = MNM.6910 # Assassins: assisting a murder plot
		50 = MNM.6920 # Assassins: blackmailing superior
		100 = MNM.4210 # Monastic Orders: Fellow member drowsing off
		100 = MNM.4435 # Monastic Orders: Friendship & Love
		100 = MNM.3920 # Secret Religious societies: Worried member
		100 = MNM.3930 # Secret Religious societies: Fellow society member goes for a round
		100 = MNM.3505 # Secret Religious societies: Get help from another member with problematic trait
		100 = MNM.3500 # Secret Religious societies: I am so stressed
		50 = BRO.5110 # Arcane Brotherhood: Warding off Evil
		50 = MNM.10040 # Every society: Gain rival
		50 = MNM.10043 # Every society: Gain friend (or possibly lover...?)
		20 = HF.25200 #Arm-wrestling during feast.
		70 = HF.25250 #Flyting contest during feast.
		10 = HF.25280 #Drinking games.
		40 = HF.25600 #Warrior Lodges Ritual Hunting.
		75 = HF.14000 #Warrior Lodges: Teaching Moment
		150 = 0 # Nothing

		warrior_lodge_heroes_train_other_members = {
			delay = 40
			75 = HF.500
			25 = 0
		}
		warrior_lodge_members_duel_enemies = {
			delay = 24
			20 = HF.550
			80 = 0
		}

		cult_of_the_dragon_events = {
			delay = 33

			340 = 0
			340 = CDR.401 # cultists cell gains wealth for ruler
			170 = CDR.402 # cultist cell in danger
			140 = CDR.403 # ruler got robbed by a cultist cell
			70 = CDR.404 # good working culstist cell
		}

		night_masks_events = {
			delay = 66
			
			600 = 0
			240 = MASK.403 # ruler got robbed by a thieves guild
		}

		shadow_telflamm_events = {
			delay = 99

			600 = 0
			240 = TELF.403 # ruler got robbed by a thieves guild
		}

		shadow_thieves_events = {
			delay = 132

			600 = 0
			240 = STH.403 # ruler got robbed by a thieves guild
		}

		combined_thieves_societies_events = {
			delay = 50

			120 = 0
			240 = STH.401 # thieves guild gains wealth for ruler
			120 = STH.402 # thieves guild in danger
		}
	}
}

# A character has switched their society interest
# Root = Character
# From = Society
on_character_switch_society_interest = {
	events = {
		FaerunSocieties.1 # Harpers
		FaerunSocieties.2 # Cult of the Dragon
		FaerunSocieties.3 # Arcane Brotherhood
		FaerunSocieties.4 # Shadow Thieves
		ZHE.100 # Black Network
		ZHE.200 # Tsui Tong
		ZHE.300 # Storm Rune
		ZHE.400 # Warlock Knights
		BFL.100 # True Flame
		EVER.100 # Everlasting
		TWI.100 # Twisted Rune
		MASK.100 # Night Masks
		TELF.100 # Shadowmasters
		HRP.250 # Kuo Tan
		KRAK.100 # Kraken Society
		MNM.10010
		MNM.10024 # Backup for refounding societies
	}
}

# A character ranks up in their society, or becomes grandmaster
# Root = Character
# From = Society
on_character_society_rank_up = {
	events = {
		MNM.1750 # Grandmaster notification event
	}
	effect = {
		update_hidden_modifiers = yes
	}
}

# A character ranks down in their society
# Root = Character
# From = Society
on_character_society_rank_down = {
	events = {
	}
	effect = {
		update_hidden_modifiers = yes
	}
}

# A character joins a society. The has_game_started trigger can be useful to avoid firing events from auto-assignment of characters at game start
# Root = Character
# From = Society
on_character_join_society = {
	events = {
	}
	effect = {
		update_hidden_modifiers = yes
	}
}

# A character leaves or is forced to leave a society
# Root = Character
# From = Society
on_character_leave_society = {
	events = {
		MNM.10018 #clears on-going event flags and effects
		BRO.1611 # Clears Apprentice minor titles
		BFL.1611 # Clears Apprentice minor titles
		HF.25035 # Clear Call to Glory effects.
		HRP.1 # Clean up event for leaving harpers during harper invasion
		FaerunSocieties.90006 # destroy society title if held
	}
	effect = {
		update_hidden_modifiers = yes
	}
}
# A character asks to join a society. Only works on player
# Root = Character
# From = Society
on_character_ask_to_join_society = {
	events = {
		MNM.4450 #Join Monastic Order
		MNM.100 #Join Hermetics
		MNM.10024 # Backup for refounding societies
		HF.10003 # Warrior Lodge Hero will inform new recruit about the initation duel
	}
}

# A character is removed from society for failing the potential trigger.
# Root = Character
# From = Society
on_character_kicked_from_society = {
	events = {
		MNM.10021
		HRP.1 # Clean up event for leaving harpers during harper invasion
		FaerunSocieties.90006 # destroy society title if held
	}
	effect = {
		update_hidden_modifiers = yes
	}
}

# A character stops showing interest in a society for failing the CanJoin trigger.
# Root = Character
# From = Society
on_character_stop_showing_interest = {
	events = {
		MNM.10019
	}
}

# Someone joins a society that has no members
# Root = Character
# From = Society
on_society_created = {
	events = {
	}
}

# The last member of a society leaves the society and is not replaced
# Root = Character
# From = Society
on_society_destroyed = {
	events = {
		HF.10053 # Warrior Lodges: Maintenance: Society tries to respawn if it died
	}
}

# A character selects a focus
# Root = Character
on_focus_selected = {
	events = {
		#levelup.1
		HF.25506
		HF.25507
		HF.25508
		HF.25509
		KNI.2102
		KNI.2103
		KNI.2104
		KNI.2105
	}
}

# A character succeeds in a quest. This happens just before the quest disappears, so you can access the quest itself. Only invoked when a quest is cleared via script. E.G., does not happen on death
# Root = Character
on_quest_success = {
	events = {
		MNM.6666
	}
}

# A character fails a quest. This happens just before the quest disappears, so you can access the quest itself. Only invoked when a quest is cleared via script. E.G., does not happen on death
# Root = Character
on_quest_failure = {
	events = {
		MNM.6667
	}
}

# An indestructible society failed to find a new leader from existing characters
# Root = Society
# From = Previous leader
on_society_failed_to_find_new_leader = {
	events = {
	}
}


# Root = New artifact owner
# From = inherited artifact
# FromFrom = Previous owner
on_artifact_inheritance = {
	events = {
		HFP.16004 # sort artifacts for possible destruction
	}
}

# An offmap power changes its policy. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_policy_changed = {
	events = {
		JD.30501 # Print policy update to logs
		JD.50020 # News from China about Policy Change
		JD.50400 # Update Silk Road values
		JD.32298 # Abandon kowtow when China goes Isolationist
	}
}

# An offmap power changes its status. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_status_changed = {
	events = {
		JD.30502 # Print status update to logs
		JD.50030 # News from China about Status Change
		JD.50400 # Update Silk Road values
	}
}


# An offmap power changes its governor. Triggers for the new governor
# Root = New governor
# From = Old governor
# FromFrom = Offmap
on_offmap_governor_changed = {
	events = {
	}
}

# An offmap power changes its ruler. Triggers for the new ruler
# Root = New ruler
# From = Old ruler
# FromFrom = Offmap
on_offmap_ruler_changed = {
	events = {
		JD.30503 # Logging new ruler data
		JD.10005 # In case of dynasty change...
		JD.10202 # Delayed cleanup event. Makes sure the new administration may also launch Chinese invasions.
		JD.50000 # Select a new Policy and send News Event
		JD.31000 # Logging for emperor statistics
	}
}

# Happens once a month on a random day. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_monthly_pulse = {
	events = {
		JD.10121 #Fallback event to make sure that Displaced Royals, Jurchen Invaders, and Rebel Generals actually appear (regardless of new administration in China or not)
	}
	random_events = {
	}
}

# Happens once a year during a random monthly update. Triggers for the governor (once for each offmap governor, if there's more than one)
# Root = Governor
# From = Offmap
on_offmap_yearly_pulse = {
	events = {
		JD.10100 # Chinese Invasion tombola
		JD.30500 # China logging variable increment
		JD.10200 # Chinese Invasion clean-up event - REGULAR (tributary invasion + other flags)
		JD.10201 # Chinese Invasion clean-up event - MAJOR Invasion (rare)
	}

	random_events = {
		10000 = 0
		300 = JD.50100 # Status returns to 'Stable'
		150 = JD.50120 # Status changes to 'Unrest'
		50 = JD.50140 # Status changes to 'Mongol Invasion'
		450 = JD.50160 # 'Mongol Invasion' Resolution
		50 = JD.50180 # Status changes to 'Jurchen Invasion'
		450 = JD.50200 # 'Jurchen Invasion' Resolution
		100 = JD.50220 # Status changes to 'Great Famine'
		100 = JD.50240 # Status changes to 'Devastating Plague'
		100 = JD.50260 # Status changes to 'Golden Age'
		350 = JD.50280 # Status changes to 'Civil War'
		400 = JD.50300 # 'Civil War' Resolution
	}
}

# Happens just prior to the EU4 converter converting the game
# Root = Player. Random character if in observe mode
on_eu4_conversion_start = {
	events = {
		JD.60205 # Prepare on map China for conversion
	}
}

# Happens just after the EU4 converter is done converting the game
# Root = Player. Random character if in observe mode
on_eu4_conversion_done = {
	events = {
		JD.60206 # Restore on map China after conversion
	}
}

# Happens when tyranny is caused by the code rather than script. That is; won't trigger if you use "add_opinion_modifier" to add tyranny. Fires for every character that gets the "tyrant" opinion penalty towards the tyrant
# Root = Upset character
# From = Tyrant
on_tyranny_gained = {
	events = {
	}
}

# Happens when tyranny is caused by the code rather than script. That is; won't trigger if you use "add_opinion_modifier" to add tyranny. Only happens for the tyrant themselves, rather than for each of their "victims", so happens exactly once per tyranny-giving action
# Root = Tyrant
on_tyranny_gained_tyrant_only = {
	events = {
	}
}

# Triggers if someone tries to revoke someone's title, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
# FromFrom = The title being revoked
on_revoke_attempted_started_war = {
	events = {
		681
 	}
}

# Triggers if someone tries to retract someone's vassal, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
# FromFrom = The vassal title being retracted
on_retract_vassal_attempted_started_war = {
	events = {
		682
 	}
}

# Triggers if someone tries to absorb a clan, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
on_absorb_clan_attempted_started_war = {
	events = {
		683
 	}
}

# Triggers if someone tries to split a clan, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
on_split_clan_attempted_started_war = {
	events = {
		684
 	}
}

# Triggers if the game is started with Random/Shattered World. Fires at the very end of game setup (just before the Welcome screen is shown)
# Root = The very first character generated (events need a character to work)
on_alternate_start = {
	events = {
	}
}

# Triggers when the society progress is decreased / set to the value 0
# Root = The affected society grandmaster
# From = The affected society
on_society_progress_zero = {
	events = {
	}
}

# Triggers on a betrothal being agreed. Sent to employers of both parties
# Root = Employer of the character getting betrothed
# From = Character getting betrothed in the court of Root
# new_character = The other character getting betrothed
on_betrothal = {
	events = {
		racialbirth.5 # break incompatible betrothals; keep this first in the list, add "new_character = { NOT = { has_character_flag = betrothal_cancelled } }" condition to other events below
	}
}

# Triggers when the society progress is increased / set to the value 100
# Root = The affected society grandmaster
# From = The affected society
on_society_progress_full = {
	events = {
		HF.11999
		KRAK.3000 #kraken society invasion
	}
}

# Triggers for all characters in a unit (leading a flank or subunit) when it enters a province
# Root = the affected character
on_unit_entering_province = {
	events = {
	}
}

# Triggers for character when they are put in command of a flank
# Root = the affected character
on_command_unit = {
	events = {
		DEAD.1 #undead realm's commanders get a no attrition modifier
	}
}

# Triggers for character when they are put in command of a subunit
# Root = the affected character
on_command_sub_unit = {
	events = {
		DEAD.1 #undead realm's commanders get a no attrition modifier
	}
}

# Triggers when Crusade preparation starts
# Root = the religious head
# Warning - This fires for all Crusades / Jihads / Great Holy Wars upon creation regardless if they have a preparation phase - Use "uses_new_crusade = yes" trigger to limit effects
on_crusade_preparation_starts = {
	events = {
	}
}

# Triggers when Crusade preparation ends
# Root = the religious head
on_crusade_launches = {
	events = {
	}
}

# Triggers when a Crusade is canceled
# Root = the religious head
on_crusade_canceled = {
	events = {
	}
}

# Triggers once a month while a Crusade is preparing or active
# Root = the religious head
on_crusade_monthly = {
	events = {
	}
}

# Triggers when the target of a crusade changes (either through script or invalidation, or the target's heir inheriting). Happens immediately after the crusade_target_char and crusade_target_title scopes are updated
# Root = the religious head
# From = the previous target character
# FromFrom = the previous target title
# FromFromFrom = the character who made the change, if via diplomatic action. Otherwise not defined
on_crusade_target_changes = {
	events = {
	}
}

# Triggers when a character pledges their participation. Triggers even if the war has started. Does *not* trigger when the character is auto-pledged due to joining the war
# Root = the character pledging
on_pledge_crusade_participation = {
	events = {
	}
}

# Triggers when a character pledges their defense of the crusade target. Triggers even if the war has started. Does *not* trigger when the character is auto-pledged due to joining the war
# Root = the character pledging
on_pledge_crusade_defense = {
	events = {
	}
}

# Triggers when a character unpledges their participation, including the automatic unpledging on death and conversion
# Root = the character unpledging
on_unpledge_crusade_participation = {
	events = {
	}
}

# Triggers when a character unpledges their defense, including the automatic unpledging on death and conversion
# Root = the character unpledging
on_unpledge_crusade_defense = {
	events = {
	}
}

# Triggers when someone is excommunicated via the hardcoded diplomatic interaction
# Root = Excommunicated person
# From = Asker
# FromFrom = Pope
on_excommunicate_interaction = {
	events = {
	}
}

# Triggers when a player renames a character. Note that the player is not provided as a scope. This includes the "newborn" event
# Root = The renamed character
on_character_renamed = {
	events = {
	}
}

# Triggers when a player renames a title. Note that the player is not provided as a scope. This includes renaming via the title screen
# Root = The renamed title
on_title_renamed = {
	events = {
	}
}

# Triggers when a player renames a province. Note that the player is not provided as a scope. This includes renaming via the province view
# Root = The renamed character
on_province_renamed = {
	events = {
	}
}

# Triggers when a player renames a wonder.
#ROOT = owner
#FROM = upgrade
#FROMFROM = The renamed wonder
#FROMFROMFROM = province (location of wonder)
on_wonder_renamed = {
	events = {
	}
}

# Triggers when a player renames an artifact. Note that the player is not provided as a scope
# Root = The renamed artifact
on_artifact_renamed = {
	events = {
	}
}

# Triggers when a player renames a bloodline. Note that the player is not provided as a scope
# Root = The renamed bloodline
on_bloodline_renamed = {
	events = {
	}
}

# Triggers when a change of employer has been detected. Note that the from scope is empty for newly created characters.
# Root = character that got a new employer
# From = previous employer
# FromFrom = new employer
on_employer_change = {
	events = {
		FaerunMercenaries.1000 # maintenance event for pruning male courtiers from enatic mercenary companies
		frxp.1 # check if a character's class wasn't initialized, mainly intended for newly generated characters
		HFP.19000 # For safety, to prevent everlasting food-shortage from Seclusion
		character_trait.0 # to assign species traits
		frelections.10 # have newly generated patricians inherit the dissolved family's trade posts
		DEAD.2 # living character flees undead court
		generalmisc.4 # Add Thayan tattoo.
	}
}

# Triggers when a change of host has been detected. Note that the from scope is empty for newly created characters. "on_employer_change" is triggered first if a character has had both their employer and host changed since the last check was made.
# Root = the character that got a new host
# From = the previous host
# FromFrom = new employer
on_host_change = {
	events = {
		HFP.19000 # For safety, to prevent everlasting food-shortage from Seclusion
	}
}

# Triggers when a character becomes the owner of a wonder.
# ROOT = new owner
# FROM = wonder
# FROMFROM = previous owner (this person might be dead or whatever, but still needed)
# FROMFROMFROM = province wonder is in
on_wonder_owner_change = {
	events = {
	}
	random_events = {
		1000 = 0
		delayed_upgrade_finish_effects = {
			delay = 14
			50 = LT.60401 #Traps kill courtiers from new court
		}
	}
}

# Triggers when a wonder begins construction of any stage.
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_construction_start = {
	events = {
	}
	random_events = {
		1000 = 0
		100 = LT.20100 #Tomb is found during construction
	}
}

# Triggers when a wonder finishes building a stage.
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_stage_finish = {
	events = {
		LT.10000
	}
}

# Triggers when a wonder is destroyed.
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_destroyed = {
	events = {

	}
}

# Triggers when construction of an upgrade begins in a wonder.
# ROOT = owner
# FROM = upgrade
# FROMFROM = wonder
# FROMFROMFROM = province (location of wonder)
on_wonder_upgrade_start = {
	events = {
	}
}

# Triggers when construction of an upgrade finishes in a wonder.
# ROOT = owner
# FROM = upgrade
# FROMFROM = wonder
# FROMFROMFROM = province (location of wonder)
on_wonder_upgrade_finish = {
	events = {
		LT.10001
		LT.20700 #upgrade_strategic_exclaves effect to build maximum fortification in province holdings
		LT.10003 # Handles setting desc of upgrades using dynamic loc keys
	}
	random_events = {
		1000 = 0
		delayed_upgrade_finish_effects = {
			delay = 50
			100 = LT.60001 #Town springs up
		}
	}
}

# Triggers when an upgrade is destroyed in a wonder.
# ROOT = owner
# FROM = upgrade
# FROMFROM = wonder
# FROMFROMFROM = province (location of wonder)
on_wonder_upgrade_destroyed = {
	events = {
	}
}

# Triggers when looting of a wonder begins
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_loot_start = {
	events = {
		LT.20799 #Looting renaming prep-event
		LT.20800 #Artifact looting
	}
	random_events = {
		100 = 0
		delayed_upgrade_finish_effects = {
			delay = 2
			100 = LT.20810
		}
	}
}

# Triggers when looting of a wonder stage is started
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_stage_loot_start = {
	events = {
	}
}

# Triggers when looting of a wonder stage is completed
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_stage_loot_finish = {
	events = {
		LT.10002 # Renames wonders and sets desc for Ruined versions
		LT.20820 # Notification for the owner that looting stage finished
	}
}

# Triggers when restoration of a wonder begins
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_restore_start = {
	events = {
	}
}

# Triggers when restoration of a wonder completed
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_restore_finish = {
	events = {
		LT.20808 # clean up looted_artifact flag
	}
}
